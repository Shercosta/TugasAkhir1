{"scoreTeacher":{"0":3.5,"1":5.0,"2":4.0,"3":5.0,"4":3.0,"5":2.0,"6":2.5,"7":5.0,"8":3.5,"9":5.0,"10":5.0,"11":5.0,"12":2.0,"13":4.5,"14":2.0,"15":4.5,"16":5.0,"17":2.0,"18":2.0,"19":2.5,"20":5.0,"21":5.0,"22":1.5,"23":2.5,"24":5.0,"25":2.0,"26":3.0,"27":3.0,"28":2.5,"29":3.5,"30":4.0,"31":4.5,"32":3.0,"33":3.0,"34":2.0,"35":3.5,"36":4.0,"37":2.0,"38":5.0,"39":2.5,"40":3.5,"41":2.0,"42":3.0,"43":1.5,"44":5.0,"45":3.5,"46":1.5,"47":2.5,"48":1.5,"49":3.0,"50":5.0,"51":3.5,"52":1.0,"53":2.5,"54":3.5,"55":2.0,"56":3.0,"57":1.5,"58":4.5,"59":5.0,"60":3.5,"61":2.5,"62":3.5,"63":1.0,"64":4.0,"65":2.5,"66":3.0,"67":4.0,"68":5.0,"69":3.5,"70":2.0,"71":3.5,"72":4.5,"73":5.0,"74":4.5,"75":3.5,"76":4.0,"77":4.5,"78":3.5,"79":3.5,"80":5.0,"81":4.0,"82":3.5,"83":3.5,"84":3.5,"85":3.5,"86":3.5,"87":5.0,"88":5.0,"89":5.0,"90":5.0,"91":5.0,"92":5.0,"93":5.0,"94":0.0,"95":5.0,"96":5.0,"97":5.0,"98":5.0,"99":2.5,"100":5.0,"101":5.0,"102":5.0,"103":5.0,"104":5.0,"105":5.0,"106":5.0,"107":5.0,"108":5.0,"109":5.0,"110":5.0,"111":5.0,"112":5.0,"113":5.0,"114":5.0,"115":5.0,"116":2.0,"117":4.5,"118":5.0,"119":5.0,"120":5.0,"121":3.5,"122":4.0,"123":5.0,"124":4.0,"125":5.0,"126":5.0,"127":5.0,"128":3.0,"129":4.0,"130":5.0,"131":5.0,"132":4.0,"133":4.5,"134":4.5,"135":4.5,"136":3.5,"137":5.0,"138":3.5,"139":5.0,"140":5.0,"141":5.0,"142":5.0,"143":5.0,"144":5.0,"145":2.0,"146":3.0,"147":5.0,"148":4.5,"149":4.0,"150":2.5,"151":5.0,"152":5.0,"153":2.0,"154":4.5,"155":3.0,"156":2.5,"157":1.5,"158":5.0,"159":2.5,"160":3.5,"161":2.0,"162":2.5,"163":1.0,"164":3.0,"165":2.0,"166":3.5,"167":2.5,"168":5.0,"169":4.0,"170":4.0,"171":2.0,"172":4.5,"173":4.5,"174":4.5,"175":5.0,"176":5.0,"177":5.0,"178":5.0,"179":5.0,"180":5.0,"181":5.0,"182":5.0,"183":5.0,"184":5.0,"185":4.5,"186":5.0,"187":4.0,"188":5.0,"189":5.0,"190":5.0,"191":5.0,"192":5.0,"193":3.5,"194":3.5,"195":5.0,"196":5.0,"197":5.0,"198":5.0,"199":0.0,"200":5.0,"201":5.0,"202":5.0,"203":2.0,"204":4.0,"205":5.0,"206":5.0,"207":2.0,"208":3.0,"209":5.0,"210":5.0,"211":5.0,"212":3.5,"213":5.0,"214":4.5,"215":3.5,"216":3.0,"217":5.0,"218":4.5,"219":4.5,"220":5.0,"221":2.5,"222":5.0,"223":5.0,"224":5.0,"225":3.5,"226":4.5,"227":2.0,"228":5.0,"229":4.5,"230":5.0,"231":5.0,"232":4.5,"233":3.0,"234":2.5,"235":4.5,"236":4.5,"237":5.0,"238":4.5,"239":3.5,"240":4.5,"241":4.0,"242":4.0,"243":4.5,"244":5.0,"245":4.5,"246":2.0,"247":3.5,"248":5.0,"249":4.5,"250":4.5,"251":5.0,"252":4.5,"253":4.0,"254":5.0,"255":2.0,"256":5.0,"257":5.0,"258":4.5,"259":4.5,"260":4.5,"261":5.0,"262":4.0,"263":2.5,"264":3.0,"265":5.0,"266":4.5,"267":4.0,"268":3.0,"269":3.5,"270":4.0,"271":4.0,"272":4.0,"273":3.5,"274":2.5,"275":3.5,"276":4.0,"277":3.0,"278":4.0,"279":3.5,"280":4.0,"281":3.0,"282":4.0,"283":2.5,"284":5.0,"285":4.0,"286":3.0,"287":4.0,"288":5.0,"289":2.5,"290":2.5,"291":3.5,"292":4.0,"293":5.0,"294":3.5,"295":5.0,"296":3.0,"297":5.0,"298":1.5,"299":5.0,"300":3.5,"301":5.0,"302":5.0,"303":1.0,"304":5.0,"305":5.0,"306":5.0,"307":5.0,"308":5.0,"309":5.0,"310":5.0,"311":5.0,"312":5.0,"313":5.0,"314":5.0,"315":5.0,"316":5.0,"317":5.0,"318":5.0,"319":5.0,"320":5.0,"321":5.0,"322":5.0,"323":0.0,"324":5.0,"325":5.0,"326":1.5,"327":5.0,"328":0.0,"329":5.0,"330":0.0,"331":5.0,"332":5.0,"333":5.0,"334":5.0,"335":5.0,"336":5.0,"337":5.0,"338":2.5,"339":5.0,"340":5.0,"341":5.0,"342":4.5,"343":0.0,"344":0.0,"345":5.0,"346":1.5,"347":0.0,"348":5.0,"349":5.0,"350":0.0,"351":5.0,"352":5.0,"353":4.0,"354":2.5,"355":5.0,"356":3.0,"357":5.0,"358":4.5,"359":4.5,"360":4.5,"361":4.0,"362":4.5,"363":2.0,"364":3.0,"365":3.0,"366":5.0,"367":5.0,"368":3.5,"369":4.5,"370":4.5,"371":3.5,"372":5.0,"373":4.0,"374":4.5,"375":4.5,"376":4.0,"377":3.5,"378":5.0,"379":4.5,"380":4.5,"381":5.0,"382":4.5,"383":4.5,"384":3.0,"385":3.5,"386":0.0,"387":3.5,"388":4.5,"389":4.5,"390":3.5,"391":4.0,"392":1.5,"393":2.5,"394":3.0,"395":3.0,"396":1.5,"397":4.0,"398":5.0,"399":3.5,"400":3.0,"401":3.5,"402":2.5,"403":3.5,"404":3.5,"405":4.0,"406":3.0,"407":3.0,"408":3.5,"409":3.0,"410":3.0,"411":4.5,"412":1.0},"studentId":{"0":"[6]","1":"[5]","2":"[8]","3":"[3]","4":"[4]","5":"[24]","6":"[9]","7":"[22]","8":"[23]","9":"[2]","10":"[29]","11":"[31]","12":"[12]","13":"[21]","14":"[13]","15":"[11]","16":"[17]","17":"[7]","18":"[10]","19":"[27]","20":"[20]","21":"[18]","22":"[19]","23":"[16]","24":"[26]","25":"[1]","26":"[28]","27":"[15]","28":"[14]","29":"[6]","30":"[5]","31":"[8]","32":"[3]","33":"[4]","34":"[24]","35":"[9]","36":"[22]","37":"[23]","38":"[2]","39":"[29]","40":"[31]","41":"[12]","42":"[21]","43":"[13]","44":"[11]","45":"[17]","46":"[7]","47":"[10]","48":"[27]","49":"[20]","50":"[18]","51":"[19]","52":"[16]","53":"[26]","54":"[1]","55":"[28]","56":"[15]","57":"[14]","58":"[6]","59":"[5]","60":"[8]","61":"[3]","62":"[4]","63":"[24]","64":"[9]","65":"[22]","66":"[23]","67":"[2]","68":"[29]","69":"[31]","70":"[12]","71":"[21]","72":"[13]","73":"[11]","74":"[17]","75":"[7]","76":"[10]","77":"[27]","78":"[20]","79":"[18]","80":"[19]","81":"[16]","82":"[26]","83":"[1]","84":"[28]","85":"[15]","86":"[14]","87":"[6]","88":"[5]","89":"[8]","90":"[3]","91":"[4]","92":"[24]","93":"[9]","94":"[22]","95":"[23]","96":"[2]","97":"[29]","98":"[31]","99":"[12]","100":"[21]","101":"[13]","102":"[11]","103":"[17]","104":"[7]","105":"[10]","106":"[27]","107":"[20]","108":"[18]","109":"[19]","110":"[16]","111":"[26]","112":"[1]","113":"[28]","114":"[15]","115":"[14]","116":"[6]","117":"[5]","118":"[8]","119":"[3]","120":"[4]","121":"[24]","122":"[9]","123":"[22]","124":"[23]","125":"[2]","126":"[29]","127":"[31]","128":"[12]","129":"[21]","130":"[13]","131":"[11]","132":"[17]","133":"[7]","134":"[10]","135":"[27]","136":"[20]","137":"[18]","138":"[19]","139":"[16]","140":"[26]","141":"[1]","142":"[28]","143":"[15]","144":"[14]","145":"[6]","146":"[5]","147":"[8]","148":"[3]","149":"[4]","150":"[24]","151":"[9]","152":"[22]","153":"[23]","154":"[2]","155":"[29]","156":"[31]","157":"[12]","158":"[21]","159":"[13]","160":"[11]","161":"[17]","162":"[7]","163":"[10]","164":"[27]","165":"[20]","166":"[18]","167":"[19]","168":"[16]","169":"[26]","170":"[1]","171":"[28]","172":"[15]","173":"[14]","174":"[6]","175":"[5]","176":"[8]","177":"[3]","178":"[4]","179":"[24]","180":"[9]","181":"[22]","182":"[23]","183":"[2]","184":"[29]","185":"[31]","186":"[12]","187":"[21]","188":"[13]","189":"[11]","190":"[17]","191":"[7]","192":"[10]","193":"[27]","194":"[20]","195":"[18]","196":"[19]","197":"[16]","198":"[26]","199":"[1]","200":"[28]","201":"[15]","202":"[14]","203":"[6]","204":"[5]","205":"[8]","206":"[3]","207":"[4]","208":"[9]","209":"[22]","210":"[23]","211":"[2]","212":"[29]","213":"[31]","214":"[12]","215":"[21]","216":"[13]","217":"[11]","218":"[17]","219":"[7]","220":"[10]","221":"[27]","222":"[25]","223":"[20]","224":"[18]","225":"[19]","226":"[30]","227":"[16]","228":"[26]","229":"[1]","230":"[28]","231":"[15]","232":"[14]","233":"[6]","234":"[5]","235":"[8]","236":"[3]","237":"[4]","238":"[9]","239":"[22]","240":"[23]","241":"[2]","242":"[29]","243":"[31]","244":"[12]","245":"[21]","246":"[13]","247":"[11]","248":"[17]","249":"[7]","250":"[10]","251":"[27]","252":"[25]","253":"[20]","254":"[18]","255":"[19]","256":"[30]","257":"[16]","258":"[26]","259":"[1]","260":"[28]","261":"[15]","262":"[14]","263":"[6]","264":"[5]","265":"[8]","266":"[3]","267":"[4]","268":"[9]","269":"[22]","270":"[23]","271":"[2]","272":"[29]","273":"[31]","274":"[12]","275":"[21]","276":"[13]","277":"[11]","278":"[17]","279":"[7]","280":"[10]","281":"[27]","282":"[25]","283":"[20]","284":"[18]","285":"[19]","286":"[30]","287":"[16]","288":"[26]","289":"[1]","290":"[28]","291":"[15]","292":"[14]","293":"[6]","294":"[5]","295":"[8]","296":"[3]","297":"[4]","298":"[9]","299":"[22]","300":"[23]","301":"[2]","302":"[29]","303":"[31]","304":"[12]","305":"[21]","306":"[13]","307":"[11]","308":"[17]","309":"[7]","310":"[10]","311":"[27]","312":"[25]","313":"[20]","314":"[18]","315":"[19]","316":"[30]","317":"[16]","318":"[26]","319":"[1]","320":"[28]","321":"[15]","322":"[14]","323":"[6]","324":"[5]","325":"[8]","326":"[3]","327":"[4]","328":"[9]","329":"[22]","330":"[23]","331":"[2]","332":"[29]","333":"[31]","334":"[12]","335":"[21]","336":"[13]","337":"[11]","338":"[17]","339":"[7]","340":"[10]","341":"[27]","342":"[25]","343":"[20]","344":"[18]","345":"[19]","346":"[30]","347":"[16]","348":"[26]","349":"[1]","350":"[28]","351":"[15]","352":"[14]","353":"[6]","354":"[5]","355":"[8]","356":"[3]","357":"[4]","358":"[9]","359":"[22]","360":"[23]","361":"[2]","362":"[29]","363":"[31]","364":"[12]","365":"[21]","366":"[13]","367":"[11]","368":"[17]","369":"[7]","370":"[10]","371":"[27]","372":"[25]","373":"[20]","374":"[18]","375":"[19]","376":"[30]","377":"[16]","378":"[26]","379":"[1]","380":"[28]","381":"[15]","382":"[14]","383":"[6]","384":"[5]","385":"[8]","386":"[3]","387":"[4]","388":"[9]","389":"[22]","390":"[23]","391":"[2]","392":"[29]","393":"[31]","394":"[12]","395":"[21]","396":"[13]","397":"[11]","398":"[17]","399":"[7]","400":"[10]","401":"[27]","402":"[25]","403":"[20]","404":"[18]","405":"[19]","406":"[30]","407":"[16]","408":"[26]","409":"[1]","410":"[28]","411":"[15]","412":"[14]"},"question":{"0":"What is the role of a prototype program in problem solving?","1":"What is the role of a prototype program in problem solving?","2":"What is the role of a prototype program in problem solving?","3":"What is the role of a prototype program in problem solving?","4":"What is the role of a prototype program in problem solving?","5":"What is the role of a prototype program in problem solving?","6":"What is the role of a prototype program in problem solving?","7":"What is the role of a prototype program in problem solving?","8":"What is the role of a prototype program in problem solving?","9":"What is the role of a prototype program in problem solving?","10":"What is the role of a prototype program in problem solving?","11":"What is the role of a prototype program in problem solving?","12":"What is the role of a prototype program in problem solving?","13":"What is the role of a prototype program in problem solving?","14":"What is the role of a prototype program in problem solving?","15":"What is the role of a prototype program in problem solving?","16":"What is the role of a prototype program in problem solving?","17":"What is the role of a prototype program in problem solving?","18":"What is the role of a prototype program in problem solving?","19":"What is the role of a prototype program in problem solving?","20":"What is the role of a prototype program in problem solving?","21":"What is the role of a prototype program in problem solving?","22":"What is the role of a prototype program in problem solving?","23":"What is the role of a prototype program in problem solving?","24":"What is the role of a prototype program in problem solving?","25":"What is the role of a prototype program in problem solving?","26":"What is the role of a prototype program in problem solving?","27":"What is the role of a prototype program in problem solving?","28":"What is the role of a prototype program in problem solving?","29":"What stages in the software life cycle are influenced by the testing stage?","30":"What stages in the software life cycle are influenced by the testing stage?","31":"What stages in the software life cycle are influenced by the testing stage?","32":"What stages in the software life cycle are influenced by the testing stage?","33":"What stages in the software life cycle are influenced by the testing stage?","34":"What stages in the software life cycle are influenced by the testing stage?","35":"What stages in the software life cycle are influenced by the testing stage?","36":"What stages in the software life cycle are influenced by the testing stage?","37":"What stages in the software life cycle are influenced by the testing stage?","38":"What stages in the software life cycle are influenced by the testing stage?","39":"What stages in the software life cycle are influenced by the testing stage?","40":"What stages in the software life cycle are influenced by the testing stage?","41":"What stages in the software life cycle are influenced by the testing stage?","42":"What stages in the software life cycle are influenced by the testing stage?","43":"What stages in the software life cycle are influenced by the testing stage?","44":"What stages in the software life cycle are influenced by the testing stage?","45":"What stages in the software life cycle are influenced by the testing stage?","46":"What stages in the software life cycle are influenced by the testing stage?","47":"What stages in the software life cycle are influenced by the testing stage?","48":"What stages in the software life cycle are influenced by the testing stage?","49":"What stages in the software life cycle are influenced by the testing stage?","50":"What stages in the software life cycle are influenced by the testing stage?","51":"What stages in the software life cycle are influenced by the testing stage?","52":"What stages in the software life cycle are influenced by the testing stage?","53":"What stages in the software life cycle are influenced by the testing stage?","54":"What stages in the software life cycle are influenced by the testing stage?","55":"What stages in the software life cycle are influenced by the testing stage?","56":"What stages in the software life cycle are influenced by the testing stage?","57":"What stages in the software life cycle are influenced by the testing stage?","58":"What are the main advantages associated with object-oriented programming?","59":"What are the main advantages associated with object-oriented programming?","60":"What are the main advantages associated with object-oriented programming?","61":"What are the main advantages associated with object-oriented programming?","62":"What are the main advantages associated with object-oriented programming?","63":"What are the main advantages associated with object-oriented programming?","64":"What are the main advantages associated with object-oriented programming?","65":"What are the main advantages associated with object-oriented programming?","66":"What are the main advantages associated with object-oriented programming?","67":"What are the main advantages associated with object-oriented programming?","68":"What are the main advantages associated with object-oriented programming?","69":"What are the main advantages associated with object-oriented programming?","70":"What are the main advantages associated with object-oriented programming?","71":"What are the main advantages associated with object-oriented programming?","72":"What are the main advantages associated with object-oriented programming?","73":"What are the main advantages associated with object-oriented programming?","74":"What are the main advantages associated with object-oriented programming?","75":"What are the main advantages associated with object-oriented programming?","76":"What are the main advantages associated with object-oriented programming?","77":"What are the main advantages associated with object-oriented programming?","78":"What are the main advantages associated with object-oriented programming?","79":"What are the main advantages associated with object-oriented programming?","80":"What are the main advantages associated with object-oriented programming?","81":"What are the main advantages associated with object-oriented programming?","82":"What are the main advantages associated with object-oriented programming?","83":"What are the main advantages associated with object-oriented programming?","84":"What are the main advantages associated with object-oriented programming?","85":"What are the main advantages associated with object-oriented programming?","86":"What are the main advantages associated with object-oriented programming?","87":"Where do C++ programs begin to execute?","88":"Where do C++ programs begin to execute?","89":"Where do C++ programs begin to execute?","90":"Where do C++ programs begin to execute?","91":"Where do C++ programs begin to execute?","92":"Where do C++ programs begin to execute?","93":"Where do C++ programs begin to execute?","94":"Where do C++ programs begin to execute?","95":"Where do C++ programs begin to execute?","96":"Where do C++ programs begin to execute?","97":"Where do C++ programs begin to execute?","98":"Where do C++ programs begin to execute?","99":"Where do C++ programs begin to execute?","100":"Where do C++ programs begin to execute?","101":"Where do C++ programs begin to execute?","102":"Where do C++ programs begin to execute?","103":"Where do C++ programs begin to execute?","104":"Where do C++ programs begin to execute?","105":"Where do C++ programs begin to execute?","106":"Where do C++ programs begin to execute?","107":"Where do C++ programs begin to execute?","108":"Where do C++ programs begin to execute?","109":"Where do C++ programs begin to execute?","110":"Where do C++ programs begin to execute?","111":"Where do C++ programs begin to execute?","112":"Where do C++ programs begin to execute?","113":"Where do C++ programs begin to execute?","114":"Where do C++ programs begin to execute?","115":"Where do C++ programs begin to execute?","116":"What is a variable?","117":"What is a variable?","118":"What is a variable?","119":"What is a variable?","120":"What is a variable?","121":"What is a variable?","122":"What is a variable?","123":"What is a variable?","124":"What is a variable?","125":"What is a variable?","126":"What is a variable?","127":"What is a variable?","128":"What is a variable?","129":"What is a variable?","130":"What is a variable?","131":"What is a variable?","132":"What is a variable?","133":"What is a variable?","134":"What is a variable?","135":"What is a variable?","136":"What is a variable?","137":"What is a variable?","138":"What is a variable?","139":"What is a variable?","140":"What is a variable?","141":"What is a variable?","142":"What is a variable?","143":"What is a variable?","144":"What is a variable?","145":"Where are variables declared in a C++ program?","146":"Where are variables declared in a C++ program?","147":"Where are variables declared in a C++ program?","148":"Where are variables declared in a C++ program?","149":"Where are variables declared in a C++ program?","150":"Where are variables declared in a C++ program?","151":"Where are variables declared in a C++ program?","152":"Where are variables declared in a C++ program?","153":"Where are variables declared in a C++ program?","154":"Where are variables declared in a C++ program?","155":"Where are variables declared in a C++ program?","156":"Where are variables declared in a C++ program?","157":"Where are variables declared in a C++ program?","158":"Where are variables declared in a C++ program?","159":"Where are variables declared in a C++ program?","160":"Where are variables declared in a C++ program?","161":"Where are variables declared in a C++ program?","162":"Where are variables declared in a C++ program?","163":"Where are variables declared in a C++ program?","164":"Where are variables declared in a C++ program?","165":"Where are variables declared in a C++ program?","166":"Where are variables declared in a C++ program?","167":"Where are variables declared in a C++ program?","168":"Where are variables declared in a C++ program?","169":"Where are variables declared in a C++ program?","170":"Where are variables declared in a C++ program?","171":"Where are variables declared in a C++ program?","172":"Where are variables declared in a C++ program?","173":"Where are variables declared in a C++ program?","174":"What is the main difference between a while and a do...while statement?","175":"What is the main difference between a while and a do...while statement?","176":"What is the main difference between a while and a do...while statement?","177":"What is the main difference between a while and a do...while statement?","178":"What is the main difference between a while and a do...while statement?","179":"What is the main difference between a while and a do...while statement?","180":"What is the main difference between a while and a do...while statement?","181":"What is the main difference between a while and a do...while statement?","182":"What is the main difference between a while and a do...while statement?","183":"What is the main difference between a while and a do...while statement?","184":"What is the main difference between a while and a do...while statement?","185":"What is the main difference between a while and a do...while statement?","186":"What is the main difference between a while and a do...while statement?","187":"What is the main difference between a while and a do...while statement?","188":"What is the main difference between a while and a do...while statement?","189":"What is the main difference between a while and a do...while statement?","190":"What is the main difference between a while and a do...while statement?","191":"What is the main difference between a while and a do...while statement?","192":"What is the main difference between a while and a do...while statement?","193":"What is the main difference between a while and a do...while statement?","194":"What is the main difference between a while and a do...while statement?","195":"What is the main difference between a while and a do...while statement?","196":"What is the main difference between a while and a do...while statement?","197":"What is the main difference between a while and a do...while statement?","198":"What is the main difference between a while and a do...while statement?","199":"What is the main difference between a while and a do...while statement?","200":"What is the main difference between a while and a do...while statement?","201":"What is the main difference between a while and a do...while statement?","202":"What is the main difference between a while and a do...while statement?","203":"What is typically included in a class definition?","204":"What is typically included in a class definition?","205":"What is typically included in a class definition?","206":"What is typically included in a class definition?","207":"What is typically included in a class definition?","208":"What is typically included in a class definition?","209":"What is typically included in a class definition?","210":"What is typically included in a class definition?","211":"What is typically included in a class definition?","212":"What is typically included in a class definition?","213":"What is typically included in a class definition?","214":"What is typically included in a class definition?","215":"What is typically included in a class definition?","216":"What is typically included in a class definition?","217":"What is typically included in a class definition?","218":"What is typically included in a class definition?","219":"What is typically included in a class definition?","220":"What is typically included in a class definition?","221":"What is typically included in a class definition?","222":"What is typically included in a class definition?","223":"What is typically included in a class definition?","224":"What is typically included in a class definition?","225":"What is typically included in a class definition?","226":"What is typically included in a class definition?","227":"What is typically included in a class definition?","228":"What is typically included in a class definition?","229":"What is typically included in a class definition?","230":"What is typically included in a class definition?","231":"What is typically included in a class definition?","232":"What is typically included in a class definition?","233":"What is the difference between a data member and a local variable inside a member function?","234":"What is the difference between a data member and a local variable inside a member function?","235":"What is the difference between a data member and a local variable inside a member function?","236":"What is the difference between a data member and a local variable inside a member function?","237":"What is the difference between a data member and a local variable inside a member function?","238":"What is the difference between a data member and a local variable inside a member function?","239":"What is the difference between a data member and a local variable inside a member function?","240":"What is the difference between a data member and a local variable inside a member function?","241":"What is the difference between a data member and a local variable inside a member function?","242":"What is the difference between a data member and a local variable inside a member function?","243":"What is the difference between a data member and a local variable inside a member function?","244":"What is the difference between a data member and a local variable inside a member function?","245":"What is the difference between a data member and a local variable inside a member function?","246":"What is the difference between a data member and a local variable inside a member function?","247":"What is the difference between a data member and a local variable inside a member function?","248":"What is the difference between a data member and a local variable inside a member function?","249":"What is the difference between a data member and a local variable inside a member function?","250":"What is the difference between a data member and a local variable inside a member function?","251":"What is the difference between a data member and a local variable inside a member function?","252":"What is the difference between a data member and a local variable inside a member function?","253":"What is the difference between a data member and a local variable inside a member function?","254":"What is the difference between a data member and a local variable inside a member function?","255":"What is the difference between a data member and a local variable inside a member function?","256":"What is the difference between a data member and a local variable inside a member function?","257":"What is the difference between a data member and a local variable inside a member function?","258":"What is the difference between a data member and a local variable inside a member function?","259":"What is the difference between a data member and a local variable inside a member function?","260":"What is the difference between a data member and a local variable inside a member function?","261":"What is the difference between a data member and a local variable inside a member function?","262":"What is the difference between a data member and a local variable inside a member function?","263":"What is the difference between a constructor and a function?","264":"What is the difference between a constructor and a function?","265":"What is the difference between a constructor and a function?","266":"What is the difference between a constructor and a function?","267":"What is the difference between a constructor and a function?","268":"What is the difference between a constructor and a function?","269":"What is the difference between a constructor and a function?","270":"What is the difference between a constructor and a function?","271":"What is the difference between a constructor and a function?","272":"What is the difference between a constructor and a function?","273":"What is the difference between a constructor and a function?","274":"What is the difference between a constructor and a function?","275":"What is the difference between a constructor and a function?","276":"What is the difference between a constructor and a function?","277":"What is the difference between a constructor and a function?","278":"What is the difference between a constructor and a function?","279":"What is the difference between a constructor and a function?","280":"What is the difference between a constructor and a function?","281":"What is the difference between a constructor and a function?","282":"What is the difference between a constructor and a function?","283":"What is the difference between a constructor and a function?","284":"What is the difference between a constructor and a function?","285":"What is the difference between a constructor and a function?","286":"What is the difference between a constructor and a function?","287":"What is the difference between a constructor and a function?","288":"What is the difference between a constructor and a function?","289":"What is the difference between a constructor and a function?","290":"What is the difference between a constructor and a function?","291":"What is the difference between a constructor and a function?","292":"What is the difference between a constructor and a function?","293":"When does C++ create a default constructor?","294":"When does C++ create a default constructor?","295":"When does C++ create a default constructor?","296":"When does C++ create a default constructor?","297":"When does C++ create a default constructor?","298":"When does C++ create a default constructor?","299":"When does C++ create a default constructor?","300":"When does C++ create a default constructor?","301":"When does C++ create a default constructor?","302":"When does C++ create a default constructor?","303":"When does C++ create a default constructor?","304":"When does C++ create a default constructor?","305":"When does C++ create a default constructor?","306":"When does C++ create a default constructor?","307":"When does C++ create a default constructor?","308":"When does C++ create a default constructor?","309":"When does C++ create a default constructor?","310":"When does C++ create a default constructor?","311":"When does C++ create a default constructor?","312":"When does C++ create a default constructor?","313":"When does C++ create a default constructor?","314":"When does C++ create a default constructor?","315":"When does C++ create a default constructor?","316":"When does C++ create a default constructor?","317":"When does C++ create a default constructor?","318":"When does C++ create a default constructor?","319":"When does C++ create a default constructor?","320":"When does C++ create a default constructor?","321":"When does C++ create a default constructor?","322":"When does C++ create a default constructor?","323":"How many constructors can be created for a class?","324":"How many constructors can be created for a class?","325":"How many constructors can be created for a class?","326":"How many constructors can be created for a class?","327":"How many constructors can be created for a class?","328":"How many constructors can be created for a class?","329":"How many constructors can be created for a class?","330":"How many constructors can be created for a class?","331":"How many constructors can be created for a class?","332":"How many constructors can be created for a class?","333":"How many constructors can be created for a class?","334":"How many constructors can be created for a class?","335":"How many constructors can be created for a class?","336":"How many constructors can be created for a class?","337":"How many constructors can be created for a class?","338":"How many constructors can be created for a class?","339":"How many constructors can be created for a class?","340":"How many constructors can be created for a class?","341":"How many constructors can be created for a class?","342":"How many constructors can be created for a class?","343":"How many constructors can be created for a class?","344":"How many constructors can be created for a class?","345":"How many constructors can be created for a class?","346":"How many constructors can be created for a class?","347":"How many constructors can be created for a class?","348":"How many constructors can be created for a class?","349":"How many constructors can be created for a class?","350":"How many constructors can be created for a class?","351":"How many constructors can be created for a class?","352":"How many constructors can be created for a class?","353":"What is the difference between a function prototype and a function definition?","354":"What is the difference between a function prototype and a function definition?","355":"What is the difference between a function prototype and a function definition?","356":"What is the difference between a function prototype and a function definition?","357":"What is the difference between a function prototype and a function definition?","358":"What is the difference between a function prototype and a function definition?","359":"What is the difference between a function prototype and a function definition?","360":"What is the difference between a function prototype and a function definition?","361":"What is the difference between a function prototype and a function definition?","362":"What is the difference between a function prototype and a function definition?","363":"What is the difference between a function prototype and a function definition?","364":"What is the difference between a function prototype and a function definition?","365":"What is the difference between a function prototype and a function definition?","366":"What is the difference between a function prototype and a function definition?","367":"What is the difference between a function prototype and a function definition?","368":"What is the difference between a function prototype and a function definition?","369":"What is the difference between a function prototype and a function definition?","370":"What is the difference between a function prototype and a function definition?","371":"What is the difference between a function prototype and a function definition?","372":"What is the difference between a function prototype and a function definition?","373":"What is the difference between a function prototype and a function definition?","374":"What is the difference between a function prototype and a function definition?","375":"What is the difference between a function prototype and a function definition?","376":"What is the difference between a function prototype and a function definition?","377":"What is the difference between a function prototype and a function definition?","378":"What is the difference between a function prototype and a function definition?","379":"What is the difference between a function prototype and a function definition?","380":"What is the difference between a function prototype and a function definition?","381":"What is the difference between a function prototype and a function definition?","382":"What is the difference between a function prototype and a function definition?","383":"What is the role of a header-file?","384":"What is the role of a header-file?","385":"What is the role of a header-file?","386":"What is the role of a header-file?","387":"What is the role of a header-file?","388":"What is the role of a header-file?","389":"What is the role of a header-file?","390":"What is the role of a header-file?","391":"What is the role of a header-file?","392":"What is the role of a header-file?","393":"What is the role of a header-file?","394":"What is the role of a header-file?","395":"What is the role of a header-file?","396":"What is the role of a header-file?","397":"What is the role of a header-file?","398":"What is the role of a header-file?","399":"What is the role of a header-file?","400":"What is the role of a header-file?","401":"What is the role of a header-file?","402":"What is the role of a header-file?","403":"What is the role of a header-file?","404":"What is the role of a header-file?","405":"What is the role of a header-file?","406":"What is the role of a header-file?","407":"What is the role of a header-file?","408":"What is the role of a header-file?","409":"What is the role of a header-file?","410":"What is the role of a header-file?","411":"What is the role of a header-file?","412":"What is the role of a header-file?"},"keyAnswer":{"0":"To sumulate the behaviour of portions of the desired software product. \n","1":"To simulate the behaviour of portions of the desired software product. \n","2":"To simulate the behaviour of portions of the desired software product. \n","3":"To simulate the behaviour of portions of the desired software product. \n","4":"To simulate the behaviour of portions of the desired software product. \n","5":"To simulate the behaviour of portions of the desired software product. \n","6":"To simulate the behaviour of portions of the desired software product. \n","7":"To simulate the behaviour of portions of the desired software product. \n","8":"To simulate the behaviour of portions of the desired software product. \n","9":"To simulate the behaviour of portions of the desired software product. \n","10":"To simulate the behaviour of portions of the desired software product. \n","11":"To simulate the behaviour of portions of the desired software product. \n","12":"To simulate the behaviour of portions of the desired software product. \n","13":"To simulate the behaviour of portions of the desired software product. \n","14":"To simulate the behaviour of portions of the desired software product. \n","15":"To simulate the behaviour of portions of the desired software product. \n","16":"To simulate the behaviour of portions of the desired software product. \n","17":"To simulate the behaviour of portions of the desired software product. \n","18":"To simulate the behaviour of portions of the desired software product. \n","19":"To simulate the behaviour of portions of the desired software product. \n","20":"To simulate the behaviour of portions of the desired software product. \n","21":"To simulate the behaviour of portions of the desired software product. \n","22":"To simulate the behaviour of portions of the desired software product. \n","23":"To simulate the behaviour of portions of the desired software product. \n","24":"To simulate the behaviour of portions of the desired software product. \n","25":"To simulate the behaviour of portions of the desired software product. \n","26":"To simulate the behaviour of portions of the desired software product. \n","27":"To simulate the behaviour of portions of the desired software product. \n","28":"To simulate the behaviour of portions of the desired software product. \n","29":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","30":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","31":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","32":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","33":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","34":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","35":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","36":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","37":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","38":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","39":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","40":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","41":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","42":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","43":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","44":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","45":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","46":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","47":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","48":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","49":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","50":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","51":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","52":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","53":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","54":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","55":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","56":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","57":"The testing stage can influence both the coding stage (phase 5) and the solution refinement stage (phase 7) ","58":"Abstraction and reusability.","59":"Abstraction and reusability.","60":"Abstraction and reusability.","61":"Abstraction and reusability.","62":"Abstraction and reusability.","63":"Abstraction and reusability.","64":"Abstraction and reusability.","65":"Abstraction and reusability.","66":"Abstraction and reusability.","67":"Abstraction and reusability.","68":"Abstraction and reusability.","69":"Abstraction and reusability.","70":"Abstraction and reusability.","71":"Abstraction and reusability.","72":"Abstraction and reusability.","73":"Abstraction and reusability.","74":"Abstraction and reusability.","75":"Abstraction and reusability.","76":"Abstraction and reusability.","77":"Abstraction and reusability.","78":"Abstraction and reusability.","79":"Abstraction and reusability.","80":"Abstraction and reusability.","81":"Abstraction and reusability.","82":"Abstraction and reusability.","83":"Abstraction and reusability.","84":"Abstraction and reusability.","85":"Abstraction and reusability.","86":"Abstraction and reusability.","87":"At the main function.","88":"At the main function.","89":"At the main function.","90":"At the main function.","91":"At the main function.","92":"At the main function.","93":"At the main function.","94":"At the main function.","95":"At the main function.","96":"At the main function.","97":"At the main function.","98":"At the main function.","99":"At the main function.","100":"At the main function.","101":"At the main function.","102":"At the main function.","103":"At the main function.","104":"At the main function.","105":"At the main function.","106":"At the main function.","107":"At the main function.","108":"At the main function.","109":"At the main function.","110":"At the main function.","111":"At the main function.","112":"At the main function.","113":"At the main function.","114":"At the main function.","115":"At the main function.","116":"A location in memory that can store a value.","117":"A location in memory that can store a value.","118":"A location in memory that can store a value.","119":"A location in memory that can store a value.","120":"A location in memory that can store a value.","121":"A location in memory that can store a value.","122":"A location in memory that can store a value.","123":"A location in memory that can store a value.","124":"A location in memory that can store a value.","125":"A location in memory that can store a value.","126":"A location in memory that can store a value.","127":"A location in memory that can store a value.","128":"A location in memory that can store a value.","129":"A location in memory that can store a value.","130":"A location in memory that can store a value.","131":"A location in memory that can store a value.","132":"A location in memory that can store a value.","133":"A location in memory that can store a value.","134":"A location in memory that can store a value.","135":"A location in memory that can store a value.","136":"A location in memory that can store a value.","137":"A location in memory that can store a value.","138":"A location in memory that can store a value.","139":"A location in memory that can store a value.","140":"A location in memory that can store a value.","141":"A location in memory that can store a value.","142":"A location in memory that can store a value.","143":"A location in memory that can store a value.","144":"A location in memory that can store a value.","145":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","146":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","147":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","148":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","149":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","150":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","151":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","152":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","153":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","154":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","155":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","156":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","157":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","158":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","159":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","160":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","161":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","162":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","163":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","164":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","165":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","166":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","167":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","168":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","169":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","170":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","171":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","172":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","173":"Variables can be declared anywhere in a program. They can be declared inside a function (local variables) or outside the functions (global variables)","174":"The block inside a do...while statement will execute at least once.","175":"The block inside a do...while statement will execute at least once.","176":"The block inside a do...while statement will execute at least once.","177":"The block inside a do...while statement will execute at least once.","178":"The block inside a do...while statement will execute at least once.","179":"The block inside a do...while statement will execute at least once.","180":"The block inside a do...while statement will execute at least once.","181":"The block inside a do...while statement will execute at least once.","182":"The block inside a do...while statement will execute at least once.","183":"The block inside a do...while statement will execute at least once.","184":"The block inside a do...while statement will execute at least once.","185":"The block inside a do...while statement will execute at least once.","186":"The block inside a do...while statement will execute at least once.","187":"The block inside a do...while statement will execute at least once.","188":"The block inside a do...while statement will execute at least once.","189":"The block inside a do...while statement will execute at least once.","190":"The block inside a do...while statement will execute at least once.","191":"The block inside a do...while statement will execute at least once.","192":"The block inside a do...while statement will execute at least once.","193":"The block inside a do...while statement will execute at least once.","194":"The block inside a do...while statement will execute at least once.","195":"The block inside a do...while statement will execute at least once.","196":"The block inside a do...while statement will execute at least once.","197":"The block inside a do...while statement will execute at least once.","198":"The block inside a do...while statement will execute at least once.","199":"The block inside a do...while statement will execute at least once.","200":"The block inside a do...while statement will execute at least once.","201":"The block inside a do...while statement will execute at least once.","202":"The block inside a do...while statement will execute at least once.","203":"Data members (attributes) and member functions.","204":"Data members (attributes) and member functions.","205":"Data members (attributes) and member functions.","206":"Data members (attributes) and member functions.","207":"Data members (attributes) and member functions.","208":"Data members (attributes) and member functions.","209":"Data members (attributes) and member functions.","210":"Data members (attributes) and member functions.","211":"Data members (attributes) and member functions.","212":"Data members (attributes) and member functions.","213":"Data members (attributes) and member functions.","214":"Data members (attributes) and member functions.","215":"Data members (attributes) and member functions.","216":"Data members (attributes) and member functions.","217":"Data members (attributes) and member functions.","218":"Data members (attributes) and member functions.","219":"Data members (attributes) and member functions.","220":"Data members (attributes) and member functions.","221":"Data members (attributes) and member functions.","222":"Data members (attributes) and member functions.","223":"Data members (attributes) and member functions.","224":"Data members (attributes) and member functions.","225":"Data members (attributes) and member functions.","226":"Data members (attributes) and member functions.","227":"Data members (attributes) and member functions.","228":"Data members (attributes) and member functions.","229":"Data members (attributes) and member functions.","230":"Data members (attributes) and member functions.","231":"Data members (attributes) and member functions.","232":"Data members (attributes) and member functions.","233":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","234":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","235":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","236":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","237":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","238":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","239":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","240":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","241":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","242":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","243":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","244":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","245":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","246":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","247":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","248":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","249":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","250":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","251":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","252":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","253":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","254":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","255":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","256":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","257":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","258":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","259":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","260":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","261":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","262":"Data members can be accessed from any member functions inside the class defintion. Local variables can only be accessed inside the member function that defines them.","263":"A constructor is called whenever an object is created, whereas a function needs to be ","264":"A constructor is called whenever an object is created, whereas a function needs to be ","265":"A constructor is called whenever an object is created, whereas a function needs to be ","266":"A constructor is called whenever an object is created, whereas a function needs to be ","267":"A constructor is called whenever an object is created, whereas a function needs to be ","268":"A constructor is called whenever an object is created, whereas a function needs to be ","269":"A constructor is called whenever an object is created, whereas a function needs to be ","270":"A constructor is called whenever an object is created, whereas a function needs to be ","271":"A constructor is called whenever an object is created, whereas a function needs to be ","272":"A constructor is called whenever an object is created, whereas a function needs to be ","273":"A constructor is called whenever an object is created, whereas a function needs to be ","274":"A constructor is called whenever an object is created, whereas a function needs to be ","275":"A constructor is called whenever an object is created, whereas a function needs to be ","276":"A constructor is called whenever an object is created, whereas a function needs to be ","277":"A constructor is called whenever an object is created, whereas a function needs to be ","278":"A constructor is called whenever an object is created, whereas a function needs to be ","279":"A constructor is called whenever an object is created, whereas a function needs to be ","280":"A constructor is called whenever an object is created, whereas a function needs to be ","281":"A constructor is called whenever an object is created, whereas a function needs to be ","282":"A constructor is called whenever an object is created, whereas a function needs to be ","283":"A constructor is called whenever an object is created, whereas a function needs to be ","284":"A constructor is called whenever an object is created, whereas a function needs to be ","285":"A constructor is called whenever an object is created, whereas a function needs to be ","286":"A constructor is called whenever an object is created, whereas a function needs to be ","287":"A constructor is called whenever an object is created, whereas a function needs to be ","288":"A constructor is called whenever an object is created, whereas a function needs to be ","289":"A constructor is called whenever an object is created, whereas a function needs to be ","290":"A constructor is called whenever an object is created, whereas a function needs to be ","291":"A constructor is called whenever an object is created, whereas a function needs to be ","292":"A constructor is called whenever an object is created, whereas a function needs to be ","293":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","294":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","295":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","296":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","297":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","298":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","299":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","300":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","301":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","302":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","303":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","304":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","305":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","306":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","307":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","308":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","309":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","310":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","311":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","312":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","313":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","314":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","315":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","316":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","317":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","318":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","319":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","320":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","321":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","322":"If no constructor is provided, the compiler provides one by default. If a constructor is defined for a class, the compiler does not create a default constructor.\n","323":"Unlimited number.","324":"Unlimited number.","325":"Unlimited number.","326":"Unlimited number.","327":"Unlimited number.","328":"Unlimited number.","329":"Unlimited number.","330":"Unlimited number.","331":"Unlimited number.","332":"Unlimited number.","333":"Unlimited number.","334":"Unlimited number.","335":"Unlimited number.","336":"Unlimited number.","337":"Unlimited number.","338":"Unlimited number.","339":"Unlimited number.","340":"Unlimited number.","341":"Unlimited number.","342":"Unlimited number.","343":"Unlimited number.","344":"Unlimited number.","345":"Unlimited number.","346":"Unlimited number.","347":"Unlimited number.","348":"Unlimited number.","349":"Unlimited number.","350":"Unlimited number.","351":"Unlimited number.","352":"Unlimited number.","353":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","354":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","355":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","356":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","357":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","358":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","359":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","360":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","361":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","362":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","363":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","364":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","365":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","366":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","367":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","368":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","369":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","370":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","371":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","372":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","373":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","374":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","375":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","376":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","377":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","378":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","379":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","380":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","381":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","382":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameters' type. The function definition includes the actual body of the function. ","383":"To store a class interface, including data members and member function prototypes.","384":"To store a class interface, including data members and member function prototypes.","385":"To store a class interface, including data members and member function prototypes.","386":"To store a class interface, including data members and member function prototypes.","387":"To store a class interface, including data members and member function prototypes.","388":"To store a class interface, including data members and member function prototypes.","389":"To store a class interface, including data members and member function prototypes.","390":"To store a class interface, including data members and member function prototypes.","391":"To store a class interface, including data members and member function prototypes.","392":"To store a class interface, including data members and member function prototypes.","393":"To store a class interface, including data members and member function prototypes.","394":"To store a class interface, including data members and member function prototypes.","395":"To store a class interface, including data members and member function prototypes.","396":"To store a class interface, including data members and member function prototypes.","397":"To store a class interface, including data members and member function prototypes.","398":"To store a class interface, including data members and member function prototypes.","399":"To store a class interface, including data members and member function prototypes.","400":"To store a class interface, including data members and member function prototypes.","401":"To store a class interface, including data members and member function prototypes.","402":"To store a class interface, including data members and member function prototypes.","403":"To store a class interface, including data members and member function prototypes.","404":"To store a class interface, including data members and member function prototypes.","405":"To store a class interface, including data members and member function prototypes.","406":"To store a class interface, including data members and member function prototypes.","407":"To store a class interface, including data members and member function prototypes.","408":"To store a class interface, including data members and member function prototypes.","409":"To store a class interface, including data members and member function prototypes.","410":"To store a class interface, including data members and member function prototypes.","411":"To store a class interface, including data members and member function prototypes.","412":"To store a class interface, including data members and member function prototypes."},"studentAnswer":{"0":"High risk problems are address in the prototype program to make sure that the program is feasible.  A prototype may also be used to show a company that the software can be possibly programmed.","1":"To sumulate portions of the desired final product with a quick and easy program that does a small specific job. It is a way to help see what the problem is and how you may solve it in the final project.","2":"A prototype program simulates the behaviors of portions of the desired software product to allow for error checking.","3":"Defined in the Specification phase a prototype stimulates the behavior of portions of the desired software product.  Meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.","4":"It's used to let the users have a first idea of the completed program and allow the clients to evaluate the program. This can generate much feedback including software specifications and project estimations of the total project.","5":"To find problem and errors in a program before it is finalized","6":"To address major issues in the creation of the program. There is no way to account for all possible bugs in the program, but it is possible to prove the program is tangible. ","7":"you can break the whole program into prototype programs to simulate parts of the final program","8":"To provide an example or model of how the finished program should perfom. -Provides forsight of some of the challanges that would be encountered. -Provides opportunity To introduce changes To the finished program.","9":"Simulating the behavior of only a portion of the desired software product.","10":"  A program that stimulates the behavior of portions of the desired software product.","11":"A program that simulates the behavior of portions of the desired software product.","12":"To lay out the basics and give you a starting point in the actual problem solving.","13":"To simulate problem solving for parts of the problem","14":"A prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.","15":"A prototype program is a part of the Specification phase of Software Problem Solvin.  It's employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.","16":"Program that simulates the behavior of portions of the desired software product","17":"it provides a limited proof of concept to verify with the client before actually programming the whole application.","18":"It tests the main function of the program while leaving out the finer details.","19":"To get early feedback from users in early stages of development.  To show users a first idea of what the program will do\/look like.  To make sure the program will meet requirements before intense programming begins.","20":"it simulates the behavior of portions of the desired software product","21":"It simulates the behavior of portions of the desired software product.","22":"A prototype program is used in problem solving to collect data for the problem.","23":"To ease the understanding of problem under discussion and to ease the understanding of the program itself","24":"it simulates the behavior of portions of the desired software product","25":"The role of a prototype program is to help spot key problems that may arise during the actual programing. ","26":"the prototype program gives a general idea of what the end product will do, without the time and effort to write out the entire program.","27":"to show that a certain part of the program works as it is supposed to","28":"Prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i.e. book gave an example of a costumer withdrawing money from a bank, the approach that was taking on a pseudo code level during the OOA\/Design lvl before proceeding into creating a solution. ","29":"Refining and possibly the design if the testing phase reveals problems in the design. Production can be affected if the program is unworkable in its current form which will lead to a later production time than originally estimated. Also affects coding because after testing you may need to rewrite the code for the program to remove errors.","30":"The implementation phase and the maintenance phase are effected","31":"Verification, coding, refining the solution and maintenance are all influenced by the testing stage.","32":"In RUP the stages in the software life cycle are influenced by the testing stage is:Elaboration phase- refined progject vision, iterative devilopment of core system, development of system requirements, more accurate time and cost estimates.Construction phase- iterative development of remaining system.Transition phase-testing and deployment of the system.","33":"Refining the solution, Production and Maintenance are all influenced by the Testing stage. ","34":"Elaboration, Construction, and Transition are all affected by testing","35":"Refining, Production, Maintenance","36":"Refining the solution","37":"Verification -Debugging","38":"Refining and Coding","39":"The second half of the Elaboration phase, Construction phase, and the Transition phase.","40":"The refining step, the production step, and the maintenance stage. ","41":"Elaboration, Construction, Transition","42":"Refining.","43":"The testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.","44":"Directly: Refining, coding.  Because Refining is right before the Testing Phase and Coding is right after the Testing Phase.Indirectly: Production, Maintenance.  Because Refining occurs before these last two stages in the Software Life Cycle.","45":"Testing, refining, production, and maintenance.","46":"Depending on how the work is done, Testing is spread throughout the process as to prevent errors from showing up later on due to lack offoresight.","47":"Elaboration, construction, and transition.","48":"All stages are influenced except setting the program requirements.  If a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.","49":"Refining, production, and maintenance","50":"coding and refining","51":"refining, production, maintenance.","52":"Removing logical errors, testing for valid data, random data and actual data.","53":"1- specification2- design3- risk analysis4- verification5- coding6- testing7- refining8- production9- maintenance","54":"Refining stage, Production stage, and Maintenance stage.","55":"Testing could affect all parts of the life cycle; it could make you go back to specification if it does not test well.","56":"coding","57":"The Individual components and steps such as  analysis, design, and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage. i.e. Main output ","58":"Modularability, the ability to reuse parts of the program later in another program sometimes with completely different goals for the program. Also it makes it easier to debug code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debug. Good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. ALso allows you to use inheritance and polymorphism.","59":"This type of programming is more flexible, making it easier to add and modify the program.  It is also a type of a fail safe program, you check each individual module.  This eliminates redundant code and makes the program easier to read for other programmers.  When debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.","60":"The main advantages to object-oriented programming are that existing classes can be reused and program maintenance and verification are easier.","61":"The advantages is that OOP allows us to build classes of objects.  Three principles that make up OOP are:Encapsulation- Objects combine data and operations.Inheritance- Classes can inherit properties from other classes.Polymorphism- Objects can determine appropriate operations at execution time.","62":"Some advantages are existing classes can be reused and program maintenance and verification are easier to accomplish.","63":"Object oriented programming allows programmers to use an object with classes that can be changed and manipulated while not affecting the entire object at once. The classes all hold attrubutes that affect the object.","64":"Reusable components, Extensibility, Maintainability, it reduces large problems into smaller more manageable problems.","65":"Encapsulation-objects combine data and operationsInheritance- classes can inherit properties from other classesPolymorphism- Objects can determine appropriate operations at execution time","66":" -Easier to debugg  -Reusability","67":"Re-usability  and ease of maintenance","68":"  One of the main advantages is you can hide inner details a technique known by encapsulation. Objects combine the data and operations but you cannot see how it works.  Another advantage is you can reuse classes that have been defined earlier in the program, a method known as inheritance.  Finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism.","69":"Existing classes can be reused, and program maintenance and verification are easier.","70":"Using different modules allows for easier debugging","71":"Data encapsulation concept,the use of functions or methods to manipulate data.","72":"Modular, reusable code, allowing faster deployment of solutions, and a more general view of a solution.","73":"Coding and Debugging programs are usually easier, as either the compiler will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify.  The code itself also looks more organized and is easier to read and will help to avoid redundant coding.  Post-programming maintenance is also easier.Also, modules can be reused several times in other programs without too much hassle.   Abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them.  Many of the smaller problems are shared between unique complex problems, and creating modules to these solve these smaller repeated problems can save time when you encounter them again.","74":"Variables can remain private. The code is easily modified and reusable, as well as easily implemented. Not to mention easier to read and follow along as an observer.","75":"Data Abstraction and control... it is possible to isolate elementsfrom other elements a lot easier and prevent tampering of data.","76":"Encapsulation - Objects use operations without knowing how the operation works.Inheritance - cuts redundancy by reusing earlier classes.Polymorphism - objects select the correct operation to use in the situation.","77":"They make it easier to reuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.","78":"Existing classes can be reused, Program maintenance and verification are easier","79":"Existing classes can be feused, Program maintenance and verification are easier","80":"the main advantages to object-oriented programming  is data abstraction, easier maintenance, and re-usability.","81":"Existing classes can be reusedProgram maintenance and verifications are easy","82":"1- Existing classes can be reused2- Program maintenance and verification are easier ","83":"Information can be hidden. It is easier to debug. Programming is easier and more manageable. ","84":"Existing classes can be reused, program maintenance and verification are easier.","85":"existing classes can be reusedprogram maintenance and verification are easier","86":"Well for one encapsulation the values of the variables inside an object are private, unless methods are written to pass info outside of the object. As well as Inheritance where each subclass inherits all variables and methods of its super class.  Example in the book included obj clock and how obj alarm would still use clock from the first class. ","87":"At function \u2018int main ()\u2019","88":"the Function main().","89":"c++ programs begin to execute in the main method.","90":"A C++ program will begin to execute at the main() function.","91":"They begin in the main() function.","92":"Int main()","93":"main method","94":"in the testing phase","95":"At the MAIN function","96":"main","97":" They begin to execute at the funcion main().","98":"The main method.","99":"At the root","100":"In the main() function.","101":"C++ programs begin execution at main.","102":"In the Main function..?","103":"At the \"main()\" function","104":"The main function.","105":"The function main","106":"After loading the required include statements and libraries, the main method begins the execution.","107":"main function","108":"main","109":"C++ programs begin execution at the main function.","110":"At main","111":"they beging to excute at main","112":"at the main functionint main() {}","113":"C++ programs begin execution at the main function.","114":"in the \"main\" function","115":"Within the main function","116":"Variable can be a integer or a string in a program.","117":"In programming, a structure that holds data and is uniquely named by the programmer. It holds the data assigned to it until a new value is assigned or the program is finished.","118":"A variable is a location in memory where a value can be stored.","119":" Variable is a location in the computer's memory, in which a value can be stored and later can retrieve that value.","120":"A variable is a location in the computer's memory where a value can be stored for use by a program. Each variable has a name, a value, a type and a size.","121":"A named object that can hold a numerical or letter value","122":"It's a sybol or name for a value\/number. Example: 'a_used_number' can stand for any given number, and the programmer can refer to that number by using the variable name.","123":"A variable is a location in the computers memory where a value can be stored for use by a program","124":" -An identifier that holds a location in memory.","125":"a block of memory that holds a specific type of data","126":"  It is a location in the computer's memory where it can be stored for use by a program.","127":"A location in memory where value can be stored.","128":"a value\/word that can assume any of a set of values","129":"A pointer to a location in memory.","130":"A variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.","131":"A variable is a value that is subject to change in a computer's memory that can be used by programs.  Programs can change the value of the variable and recall it later or act on it directly.","132":"a symbol that stands in for a value that may or may not change depending on the program. ","133":"a placeholder to hold information used in the program...for example:int can hold: 1, 2, 3, 4, 68, 72, 256, etc.float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et.char can hold: A, B, C, D, E, F, !, 4, 5, 6, P, etc.","134":"a stored value used by the program","135":"A way to store different values into the program, such as numbers, words, letters, etc.","136":"An object with a location in memory where value can be stored","137":"location in memory where a value can be stored","138":"a variable is an object where data is stored.","139":"Location in memory where a value can be stored.","140":"it is a location in memory where value can be stored","141":"A variable is the location in a computer's memory where a value can be stored for use by a program.","142":"A variable is a location in a computers memory where a value can be stored for use by a program.","143":"a location in memory where data can be stored and retrieved","144":"Is a method or identifier I would say,  we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called. ","145":"They can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.","146":"In the Function main() before using the variable.","147":"Local variables are declared inside the method or function they will be used in at the beginning of the method. Global variables are declared outside of any function or method, generally before functions are defined.","148":"Variables are declared where ever it is defined either inside a block locally or outside a block globally.","149":"Variables are declared before they are actually used. They can be declared before main() to use globally","150":"For good programing practice they should be declared before main(), but should at least be declared before they are used.","151":"They can be declared globally just before the main method (but also outside of it)... or variables can be subject to only the method they're scoped within, but would still be declared at the beginning of that method (but inside of it).","152":"local variables are declared inside the method while global variables are declared in the body.","153":" -Any where in the main function.","154":"Globally for an entire program, and locally for individual functions (including FOR statements)","155":" They are usually declared at the beginning before they can be used in the program. They always contain a name and a data type.","156":"Inside the method.","157":"at the top","158":"Global variables are declared in the body of the code. Local variables are declared in the function they are to be used (unless the function is being passed a variable). Variables should always be declared before use.","159":"Variables are usually declared at the beginning of a module of C++ code.","160":"In the main function, usually at the top of code.They can be declared almost anywhere, but must be declared before the code can use or act upon them.","161":"in the very beginning of the program. Before the main() starts. ","162":"In the declaration of Functions, for statements, and while statements.in the body of If, For, while, do while, statements, in namespaces, headers, etc  ( almost anywhere. )anywhere in the program, as long as it is on it's own line.","163":"After declaration of the variable's data type.","164":"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.","165":"Before they are used.","166":"Anywhere in the same scope before they are used","167":"variables can be declared in classes and methods.","168":"inside the function scope and outside of the function scope in case of global variables","169":"global variables are declared in the main functionlocal variables are declared in any other function","170":"Variables are usually declared at the very beginning of a C++ program, but can be declared any in the program as long as they appear before they are called upon.","171":"Variables are declared in the main function, before any operation is attempted with the variables.","172":"anywhere, but where you declare them depends on where you want them to be accessible (their scope)","173":"It depends if it\u2019s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn\u2019t need to be declared outside the variable seeing how it is used for the function or block its being called for. ","174":"The \u201cdo\u201d statement first evaluates the condition and then executes the lines of code in the statement 0 or more times.\tThe \u201cdo while\u201d statement executes the lines of code and then it evaluates the condition.","175":"do...while statements evaluate whether or not to loop after running the block contained within it at least once. So the main differance is that while statements have a possibility of never being used. Do ... while statements on the other hand are always run at least once before evaluating whether to run again.","176":"The main difference between a while and a do...while loop is that the do...while loop always cycles through the loop at least once, but the while loop does not always do so.","177":"While loop used to execute a block of code as long as some condition is true.  A do...while loop used to execute a block of code as long as some condition is satisfied.  The difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.","178":"The termination condition of a do...while statement is usually at the end of the loop so it will run at least once. As for the while statement, if the condition is false to begin with, then the loop will never run.","179":"A while loop will check the statement to make sure it is true before executing. A do while loop will execute before checking the statement to see if it should run again.","180":"A while statement will test the condition of the while loop FIRST - there is a chance the loop will never run. A do...while loop will ALWAYS run once, and then the while test will determine if it will run again.","181":"a do while loop always executes once. A while loop's conditional statement has to be true for it to run.","182":"#NAME?","183":"while statements will evaluate the statement BEFORE executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. A do...while will run evaluate the statement AFTER running through a cycle of the loop, ensuring that the loop always executes at least one time.","184":"  The main difference between a do and a do...while statement is in a do...while statement is the statements in a do block are always executed atleast once.  The while statement will only execute if its condition is true.","185":"The loop of a do...while statement always executes once.","186":"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.","187":"Do ...while runs the embedded code at least once, the do command does not necessarily","188":"While tests for true first before running, do...while runs once first before checking.","189":"A do...while statement's body always executes at least once.  Where as a while statement will not execute at all unless the condition for the while is true.","190":"The statements within the block of the do while loop will always be executed at least once regardless of the conditions. Whereas the while loops may never be executed if the conditions are not met. ","191":"a do... while loop will always run through once, while an while loopperforms a test before running through the loop.","192":"A while statement tests the condition before it can start.A do...while statement loops through once before the condition is tested.","193":"A while loop terminates at the beginning of the loop, a do\/while terminates at the end of the loop.","194":"the loop body always executes at least once","195":"While loop evaluates its expression at the top of its loop and decides if it needs to execute, and the do-while always executes at least once and then evaluates its expression at the bottom of its loop.","196":"A do...while statement will always execute the \"do\" piece of code at least once before checking the condition. A while statement will always check the condition first.","197":"A do-while passes atleast 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.","198":"a while loop checks if the condition is true or not first, if it was true, it excutes the statement.a do.. while loop executes the statement before it checks the condition. if the condition was true it would excute the statement again. so a do...while loop would excute the statement atleast once.","199":"NO ANSWER","200":"A do...while loop will always execute atleast once, a while loop may never execute depending on teh conditions.","201":"a while loop is pre-check (it checks the condition statement before it executes the code within the while block)a do while loop is post-check (it checks the condition AFTER the block executes, it runs at least once no matter what the condition statement is)","202":"))     What is the main difference between a while and a do...while statement?The do while construct consists of a block of code and a condition. First, the code within the block is executed, and then the condition is evaluated, this is done until it is proven false. The difference between the While loop is it tests the condition before the code within the block is executed.","203":"For us it is usually a set, get, and displayMessge or other messages that tell you what properties a class has but does not reveal its implementations. You could have anything you want in your own class definition.","204":"The attributes of said class. Also whether or not it is a subclass. Also whether it is public private or protected.","205":"Information telling the compiler what data members and member functions belong to the class.","206":"Since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and optionally access specifiers.  Example for specifiers would be public, private, and protected.  There is the keyword Class and the Class body is enclosed with brackets ({}). ","207":"An object and data.","208":"It's specific class name, includes only information defined by that class... implementation details... etc.","209":"data members and member functions.","210":"A class definition usually contains the function and its data members","211":"Data members and member functions","212":"member functions","213":"Member functions and data members belonging to the class.","214":"a public and private area that includes the functions and variables that are used in the class","215":"the keyword class followed by they class name, on the inside you declare public and private declarations of your class","216":"A class definition typically includes function definitions.","217":"It begins with Class, followed by the class name, then usually a constructor, data members and member functions that delineates the class is included in any class's definition.","218":"the data and methods ","219":"A constructor, functions, and variables that are accessible to by that class, and possibly other classes depending on how they are done.","220":"Member functions and data members.","221":"public section and private section, and there must be a semicolon to set the end","222":"member funtions and data members","223":"Data members and Member functions","224":"data members and member functions","225":"the class name and its public data types such as constructors, methods, functions.","226":"a constructor and several data members, and at least one public data member or method","227":"class name, two curly prenthesis, public and private","228":"data members and member functions","229":"Data and functions","230":"functions and data members that belong to the class","231":"class variables, function definitions for the class","232":"A class is an expanded concept of a data structure, it holds both the data and the functions being executed ","233":" Data members are the data components of a particular class.  A member function are the functioning components of the class.","234":" A field variable is a variable that is declared as a member of a class. A local variable is avariable that isdeclared local to a method.","235":"Data members are declared inside the class, but outside of any member functions. Unlike with local variables, each object of the class keeps its own copy of the data members stored in memory.","236":"Data member are variables that represent an attribute in a class definition.  Local variables declared in a function body cannot be used outside of that function body.  When a function terminates the values of its local variables are lost.","237":"A local variable cannot be accessed outside the function in which it is declared. Data members normally are private. Variables of functions declared private are accessible only to member functions of the class in which they are declared.","238":"A data member is part of a C++ class or structure that stores data of a certain type... A local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.","239":"A local variable can only be accessed within the scope of its declaration.","240":"Data members are the atributes of the function and can be used outside the function.Local variable can not be used outside the function and the value is lost after the function terminates.","241":"data members are permanent attributes of the class, local variables inside a member function are lost when the scope of the member function ends.","242":"data members are declared in a class definition but outside the bodies of a class's member-function definitions. Local variables are declared in a function definition's body","243":"A data member is globally accessible, while a local variable is only accessible inside the member function.","244":"A variable inside a member function can only be accessed inside that member and a data member can be accessed throughought the program.","245":"Local variables are used only within the scope of its declaration","246":"A data member is a more general term describing all objects instantiated within a member function.  \"Local\" in local variables refers more to the scope of a variable, which may be located in anything from a control structure to a class.  Local variables whose scope are in a member function are the same as data members of member functions.","247":"A data member exists permanently in that program's memory as long as it's run.A local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.","248":"local variables can only be used within the function, where as data members can be set to public access and can be used throughout","249":"The local variable is lost once it exits the block of code, while the data member is not.","250":"Every member function can access and modify a data member.A local variable can only be used from the line of declaration to the next closing } before it is lost from memory.","251":"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes","252":"Data members are variables that are declared inside the class definition but outside of the bodies of the class member functions. Local variables can only be used within the function declaration.","253":"The data member can be accessed outside of the class, whereas the local variable cannot.","254":"Local variables cannot be used outside of that function body. When a function terminates the values of its local variables are lost. Where as data members are variables in a class definition, and they exist throughout the life of the object.","255":"a local variable in a member function has to be static. a data member can change its value freely.","256":"a local variable is only useable within the function it is defined, whereas a data member is available to any method within its class","257":"Variable declared in a function defination's body cannot be used outside of that function.Data members accessible only to member function of that class.","258":"data members local variables are declared in a function definition\u2019s body.they Cannot be used outside of that function body.When a function terminates, the values of its local variables are lost.","259":"local variable is only available in the function.","260":"local variables are accessed inside member functions only while data members can be accessed throughout the class","261":"A data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exits.","262":"a Data member is encapsulated within a class or object,  it is static and can be shared by all instances of that class. however local variable's are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variables. ","263":" A constructor initializes an object or objects of a class.  A function of a class performs a task such as display a line of text or do some kind of mathematical operations.","264":"all constructors are functions but not all functions are constructors. Also functions can have nearly infinite purposes, while constructors always create an instance of whichever class you are using. You can change how a constructor does something but not what it does. With functions you can change not only the how but also the what.","265":"Unlike regular functions, constructors are only used to initialize an object\u2019s data when it is created. Constructors must also be given the same name as the class and cannot return any values.","266":"A constructor typically used to intialize data members and allocate resources, for instance memory, files, etc.  Also a constructor cannot return values.  Functions are operations that maybe globally defined.","267":"Constructors cannot return values, so they cannot specify a return type. Normally, constructors are declared public.","268":"A constructor is a method that starts new instances of a class. (Example: Employee employee1(parameters) starts a new instance of object of type Employee). A function is simply a module w\/in a program that completes its single desired task.","269":"A constructor is called whenever a new object of that class is made.","270":"A constructor does not return any date and has no return type.Functions can return date or not return data can have a return type.","271":"A constructor is automatically called whenever an instance of a class is created, a function must be explicitly called by the user. ","272":"constructors cannot return values, so they cannot specify a return type like functions can.","273":"A constructor is a function used to initialize an object's data when it is created.","274":"a constructor initialises everything so that nothing is left empty or with random varioubles and a function modifies those variables with data.","275":"A constructor initialized values at the execution of its instantiation. It provides default values.","276":"A constructor sets up the default values of variables when an object is instantiated, whereas a function allows interaction with that object.","277":"A constructor is used to create an object that can be employed in the main function of a program.  This may or may not execute code along with it.A function is a set of code that executes when called, but does not create a new object.","278":"a constructor initializes data members but the functions actually perform tasks. Constructors cant return values either. ","279":"a constructor does not need a type, and it is used to initialize the variables.","280":"Constructors don't have a return type.","281":"constructor creates the class object into memory where functions perform actions against that object","282":"constructors cannot return values","283":"A constructor initializes values and a function usual performs some sort of operation.","284":"A constructor is a function used to initialize an object's data when it is created. It's call is made implicitly when the object is created and must be defined with the same name as the class. Constructor also cannot return a value like a function can.","285":"A constructor is used to create an instance of a class and has the same name as that class. A function cannot have the same name as a class and computes data.","286":"a constructor is a function that initializes a class instance, a function performs whatever task it is written for","287":"A constructor cannot return values, not even void, but function get a return value.","288":"a constructor cannot return values, its not even void. it is used to initialize an object's data when it is created.whereas, a function is created to do a specific task, and it can return values.","289":"A constructor initializes an object. A function is part of an object.","290":"constructors initialize the data that is then used in the calculations of a function","291":"a constructor is called when the class is created, a function can be called any time.","292":"constructor is a special block of statements called when an object is created, either when it is declared statically or constructed on the stack. However a function is a portion of code within a larger program, which performs a specific task and independent to the rest of the code. ","293":"The compiler creates a default constructor when we do not define one in our class file","294":"during compilation","295":"When the class does not explicitly include a constructor.","296":"When no parameters are set is when a default constructor is used.  ","297":"When a class does not explicitly include a constructor.","298":"When there are no arguments passed.","299":"when there is not one already for a specific class","300":"When it the programs compiles","301":"when a constructor is not provided by the programmer of the class","302":"In any class that does not explicitly include a constructor.","303":"Before the main function of the code.","304":"whenevery you dont specifiy your own","305":"When non are provided","306":"C++ will create a default constructor when no other constructor is present.","307":"When no constructor was specified in the constructor's class, but the class is instantiated in a program.","308":"When no constructor exists when one is needed, a parameterless default constructor is declared.","309":"The Compiler creates this automatically for you, unless you specifically create one.","310":"In any class that doesn't explicitly include a constructor.","311":"when no user-defined constructor exists","312":"If a class does not explicitly include a constructor, the compiler creates one.","313":"When you do not provide your own constructor.","314":"When a class does not explicitly include a constructor.","315":"C++ creates a default constructor during compilation if one is not provided.","316":"when a class does not explicitly include a constructor","317":"The compiler will provide one when class does not explictly include a consructor.","318":"when the programmer does not explicitly include a constructor","319":"When one is not explicitly stated.","320":"when one is not explicitly included by a class","321":"When you dont specify any constructors.","322":"at the very beginning when you run a complier, matter a fact in C++ it generates its own default constructor for the class provided if no other constructors have been provided by user","323":"Just one per class.","324":"As many as you want so long as they have different parameters.","325":"There is no limit to the number of constructors in a class because like functions, constructors can be overloaded.","326":"It depends what type of class is being defined.  Typically you would have a constructor call for each object.","327":"In C++, the constructor can be overloaded in that there can be more than one constructor for a class, each having different parameters.","328":"1","329":"any number you want","330":"One","331":"by default just one, but they may be overloaded to create as many constructors as necessary","332":"as many as you want","333":"As many as you want, with different parameters.","334":"infinite","335":"as many as you need","336":"As many as are needed, depending on how many variables one wishes to directly modify or leave as default when instantiating an object.","337":"A very large amount of constructors can be created for any given class through overloading.  When two constructors with a different type or number of parameters are created, they are said to be overloaded, and C++ can recognize which constructor to use based on the type of the variables that are passed\/returned.","338":"It depends on the number of objects. Each object should have a constructor.","339":"Theoretically unlimited, as long as they are defined by the programmer.","340":"As many as needed.","341":"as many as wanted\/needed","342":"several","343":"One","344":"one","345":"There can be infinite constructors as long as the signature is different.","346":"that depends on the number of data members in the class","347":"one","348":"you can overload constructors as you need","349":"As many as the programmer wants to create. ","350":"one","351":"as many as you want, as long as they each have a unique argument list","352":"as many as the user decides to use. ","353":" A function definition does not require any additional information that needs to be passed inside its parenthesis to execute. While a definition prototype requires more than one parameters to be passed in order to complete its task.","354":"The FUNCTION PROTOTYPE is where the programmer declares that he\/she is using a function other than main( ). This is like declaring a variable, the programmer knows that he\/she will be using in the future, but has yet to say where they are going to use it, or how. This is answers the question who, it gives the function a name and character. The function prototype, by common practice is placed at the beginning of the program after the #includes and before main( ).The FUNCTION DEFINITION is the guts of the function. This is where the programmer decides what the function is going to do and tells it how to do it. It takes whatever information it is given and performs the operations. It works sort of like the brain, the brain takes in input and based upon that input performs in some way producing an output. The function defintion is placed outside of main( ) and any other functions. A function is its own entity and should be thought of as such.","355":"A function prototype tells the compiler the function name, return type and the number and type of parameters without revealing the implementations contained in the function definition.","356":"Function prototype is a declaration.  Function definitions (w\/multiple parameters) often require more than one piece of information. to perform their tasks.","357":"A function prototype is a declaration of a function that tells the compiler the function's name, its return type and the types of its parameters.","358":"A prototype shows only return types and necessary parameters. The definition includes names for those parameters and defines what the object is actually capable of doing.","359":"prototype only tells the user what data types go into a function and what type is returned.","360":"Function prototype is located in the .h file and only contains the access function name and paramater type.Function definition contains the code for the function to perform its activity.","361":"a function prototype is used to reference the compiler to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameters, etc...","362":"A function prototype describes a class's public interface without revealing the class's member function implementations","363":"Function definitions are just that, the definition. The prototype is what the compiler uses to check that calls to function are correct.","364":"a prototype does not include any actual code where the function has all the code that is executed in the program.","365":"a prototype declares what will be used in the program and the definition ","366":"A function prototype lays out the name, return type, and the number and types of parameters the function expects to receive in a certain order.  The details for function prototypes are in the function definition.","367":"A function definition is the code that defines the function placed in the {} brackets that determines that function's operation.A function prototype shows the function's public interface without exposing implementation.  It shows name, return type and type of paramaters.","368":"A function prototype is just a declaration of the function existing, and cant be used as an actual function. A function has to be created with a definition within to tell the compiler what the function does.","369":"the Prototype creates a framework to call the function definition. While a function definition is where the function is actually programmed out and created into a final product.","370":"A function prototype describes the class's public interface without providing how the function works.A function definition contains the inner workings of the function.","371":"prototype states all functions in that class before compilation, where the definition actually holds the source for the functions","372":"Function prototypes tell the compiler the function names, its return type, and the types of its parameters where as, function definitions actually implement the member functions.","373":"A function prototype just specifies parameters.  A function definition includes parameters and a code body.","374":"Function prototypes describe the class's public interface","375":"A prototype only declares name, return type, and input type.A definition also defines the scope, variables, process, and return function ","376":"a function prototype simply declares the functions parameters, the function definition includes any necessary variables and the function's actual code","377":"A functgion prototype is a declaration of a function , while function definition specifies what a function does","378":"in a function prototype you include the return type, the name of the function, and its parameters if any are needed.in a function definition you write the code of what the function will do. ","379":"A function definition contains all the code for a function to work. A function prototype just shows the output, input and function name.","380":"function prototype describe the class's public interface without revealing the class's member function implementations,  function definitions show what implementations are being done","381":"A function prototype only names the function, its return type, and it's argument list, while a definition defines the above as well as what the function actually does.","382":"function prototype describes a classes interface without reviling whatever is inside as for the function definition can't do that. ","383":"the role of a header file list all the functions a class can do while hiding the inner workings of its functions","384":"The main role of header file is it is used to share information among various files.","385":"Header files separate files in which classes are defined and allow the compiler to recognize classes when used elsewhere.","386":"No","387":"A header file consists of \"reusable\" source code such as a class in a file that by convention has a .h filename extension. This differs from .cpp files that contain \"source-code.\"","388":"To provide information about the contents of a library. It includes the definition of classes, declarations of functions, data types, and constants.","389":"the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.","390":"Header files declares the class member functions.","391":"A header file allows for the separation of declaration and implementation into separate files. ","392":"the header file has access to the C++ Standard Library and makes certain classes like class string work.","393":"\u201cInstruct\u201d the compiler on how to interface with library and user-written components.","394":"create a comon area to contain reusable functions.","395":"to declare the functions being used in the classes","396":"#include \"hat.h\"  allows the use of the hat container, so called from the act of pulling names from a hat.  The header file for hat includes functions for storage and retrieval of it's contents, mainly put(), peek(), and pull().","397":"To hold reusable content or modules separate from the actual  source-code file that can be easily referenced and employed for different programs.","398":"a header file is a file used to store a list of prototye functions and data members.","399":"A header file is a cross communication method between source files, to help limit the size of each individual program. Without header files a program will be 1 large lump of code and thus fairly hard to debug and traverse.","400":"It contains reusable source code for use by other classes.","401":"to separate the source code from the main function, allows the methods\/classes to be included in the program without direct coding. allows re usability.","402":"Header files have reusable source code in a file that a programer can use. ","403":"To hide the definition and details of a class.  Also to help readability of the main C++ file.","404":"To allow the compiler to recognize the classes when used elsewhere.","405":"A header file declares a class, its data, and functions available through that class.","406":"header files contain code which can be used in multiple files","407":"Allow compiler to recognize the classes when used elsewhere","408":"Allow compiler to recognize the classes when used elsewhere","409":"To promote function reusuablitly","410":"class definitions are placed here","411":"A header file usually contains class and\/or function prototypes.","412":"contains all the standard C++ library's i.e. string "},"keySpell":{"0":"To simulate the behaviour of portions of the desired software product. \n","1":"To simulate the behaviour of portions of the desired software product. \n","2":"To simulate the behaviour of portions of the desired software product. \n","3":"To simulate the behaviour of portions of the desired software product. \n","4":"To simulate the behaviour of portions of the desired software product. \n","5":"To simulate the behaviour of portions of the desired software product. \n","6":"To simulate the behaviour of portions of the desired software product. \n","7":"To simulate the behaviour of portions of the desired software product. \n","8":"To simulate the behaviour of portions of the desired software product. \n","9":"To simulate the behaviour of portions of the desired software product. \n","10":"To simulate the behaviour of portions of the desired software product. \n","11":"To simulate the behaviour of portions of the desired software product. \n","12":"To simulate the behaviour of portions of the desired software product. \n","13":"To simulate the behaviour of portions of the desired software product. \n","14":"To simulate the behaviour of portions of the desired software product. \n","15":"To simulate the behaviour of portions of the desired software product. \n","16":"To simulate the behaviour of portions of the desired software product. \n","17":"To simulate the behaviour of portions of the desired software product. \n","18":"To simulate the behaviour of portions of the desired software product. \n","19":"To simulate the behaviour of portions of the desired software product. \n","20":"To simulate the behaviour of portions of the desired software product. \n","21":"To simulate the behaviour of portions of the desired software product. \n","22":"To simulate the behaviour of portions of the desired software product. \n","23":"To simulate the behaviour of portions of the desired software product. \n","24":"To simulate the behaviour of portions of the desired software product. \n","25":"To simulate the behaviour of portions of the desired software product. \n","26":"To simulate the behaviour of portions of the desired software product. \n","27":"To simulate the behaviour of portions of the desired software product. \n","28":"To simulate the behaviour of portions of the desired software product. \n","29":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","30":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","31":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","32":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","33":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","34":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","35":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","36":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","37":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","38":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","39":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","40":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","41":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","42":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","43":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","44":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","45":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","46":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","47":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","48":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","49":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","50":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","51":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","52":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","53":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","54":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","55":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","56":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","57":"The testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","58":"Abstraction and reliability.","59":"Abstraction and reliability.","60":"Abstraction and reliability.","61":"Abstraction and reliability.","62":"Abstraction and reliability.","63":"Abstraction and reliability.","64":"Abstraction and reliability.","65":"Abstraction and reliability.","66":"Abstraction and reliability.","67":"Abstraction and reliability.","68":"Abstraction and reliability.","69":"Abstraction and reliability.","70":"Abstraction and reliability.","71":"Abstraction and reliability.","72":"Abstraction and reliability.","73":"Abstraction and reliability.","74":"Abstraction and reliability.","75":"Abstraction and reliability.","76":"Abstraction and reliability.","77":"Abstraction and reliability.","78":"Abstraction and reliability.","79":"Abstraction and reliability.","80":"Abstraction and reliability.","81":"Abstraction and reliability.","82":"Abstraction and reliability.","83":"Abstraction and reliability.","84":"Abstraction and reliability.","85":"Abstraction and reliability.","86":"Abstraction and reliability.","87":"It the main function.","88":"It the main function.","89":"It the main function.","90":"It the main function.","91":"It the main function.","92":"It the main function.","93":"It the main function.","94":"It the main function.","95":"It the main function.","96":"It the main function.","97":"It the main function.","98":"It the main function.","99":"It the main function.","100":"It the main function.","101":"It the main function.","102":"It the main function.","103":"It the main function.","104":"It the main function.","105":"It the main function.","106":"It the main function.","107":"It the main function.","108":"It the main function.","109":"It the main function.","110":"It the main function.","111":"It the main function.","112":"It the main function.","113":"It the main function.","114":"It the main function.","115":"It the main function.","116":"A location in memory that can store a value.","117":"A location in memory that can store a value.","118":"A location in memory that can store a value.","119":"A location in memory that can store a value.","120":"A location in memory that can store a value.","121":"A location in memory that can store a value.","122":"A location in memory that can store a value.","123":"A location in memory that can store a value.","124":"A location in memory that can store a value.","125":"A location in memory that can store a value.","126":"A location in memory that can store a value.","127":"A location in memory that can store a value.","128":"A location in memory that can store a value.","129":"A location in memory that can store a value.","130":"A location in memory that can store a value.","131":"A location in memory that can store a value.","132":"A location in memory that can store a value.","133":"A location in memory that can store a value.","134":"A location in memory that can store a value.","135":"A location in memory that can store a value.","136":"A location in memory that can store a value.","137":"A location in memory that can store a value.","138":"A location in memory that can store a value.","139":"A location in memory that can store a value.","140":"A location in memory that can store a value.","141":"A location in memory that can store a value.","142":"A location in memory that can store a value.","143":"A location in memory that can store a value.","144":"A location in memory that can store a value.","145":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","146":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","147":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","148":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","149":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","150":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","151":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","152":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","153":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","154":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","155":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","156":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","157":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","158":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","159":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","160":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","161":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","162":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","163":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","164":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","165":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","166":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","167":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","168":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","169":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","170":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","171":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","172":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","173":"Variable can be declared anywhere in a program. They can be declared inside a function (local variable) or outside the functions (global variable)","174":"The block inside a do...while statement will execute at least once.","175":"The block inside a do...while statement will execute at least once.","176":"The block inside a do...while statement will execute at least once.","177":"The block inside a do...while statement will execute at least once.","178":"The block inside a do...while statement will execute at least once.","179":"The block inside a do...while statement will execute at least once.","180":"The block inside a do...while statement will execute at least once.","181":"The block inside a do...while statement will execute at least once.","182":"The block inside a do...while statement will execute at least once.","183":"The block inside a do...while statement will execute at least once.","184":"The block inside a do...while statement will execute at least once.","185":"The block inside a do...while statement will execute at least once.","186":"The block inside a do...while statement will execute at least once.","187":"The block inside a do...while statement will execute at least once.","188":"The block inside a do...while statement will execute at least once.","189":"The block inside a do...while statement will execute at least once.","190":"The block inside a do...while statement will execute at least once.","191":"The block inside a do...while statement will execute at least once.","192":"The block inside a do...while statement will execute at least once.","193":"The block inside a do...while statement will execute at least once.","194":"The block inside a do...while statement will execute at least once.","195":"The block inside a do...while statement will execute at least once.","196":"The block inside a do...while statement will execute at least once.","197":"The block inside a do...while statement will execute at least once.","198":"The block inside a do...while statement will execute at least once.","199":"The block inside a do...while statement will execute at least once.","200":"The block inside a do...while statement will execute at least once.","201":"The block inside a do...while statement will execute at least once.","202":"The block inside a do...while statement will execute at least once.","203":"Data members (attributes) and member functions.","204":"Data members (attributes) and member functions.","205":"Data members (attributes) and member functions.","206":"Data members (attributes) and member functions.","207":"Data members (attributes) and member functions.","208":"Data members (attributes) and member functions.","209":"Data members (attributes) and member functions.","210":"Data members (attributes) and member functions.","211":"Data members (attributes) and member functions.","212":"Data members (attributes) and member functions.","213":"Data members (attributes) and member functions.","214":"Data members (attributes) and member functions.","215":"Data members (attributes) and member functions.","216":"Data members (attributes) and member functions.","217":"Data members (attributes) and member functions.","218":"Data members (attributes) and member functions.","219":"Data members (attributes) and member functions.","220":"Data members (attributes) and member functions.","221":"Data members (attributes) and member functions.","222":"Data members (attributes) and member functions.","223":"Data members (attributes) and member functions.","224":"Data members (attributes) and member functions.","225":"Data members (attributes) and member functions.","226":"Data members (attributes) and member functions.","227":"Data members (attributes) and member functions.","228":"Data members (attributes) and member functions.","229":"Data members (attributes) and member functions.","230":"Data members (attributes) and member functions.","231":"Data members (attributes) and member functions.","232":"Data members (attributes) and member functions.","233":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","234":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","235":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","236":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","237":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","238":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","239":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","240":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","241":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","242":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","243":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","244":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","245":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","246":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","247":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","248":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","249":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","250":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","251":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","252":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","253":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","254":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","255":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","256":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","257":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","258":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","259":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","260":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","261":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","262":"Data members can be accessed from any member functions inside the class definition. Local variable can only be accessed inside the member function that defines them.","263":"A construction is called whenever an object is created, whereas a function needs to be ","264":"A construction is called whenever an object is created, whereas a function needs to be ","265":"A construction is called whenever an object is created, whereas a function needs to be ","266":"A construction is called whenever an object is created, whereas a function needs to be ","267":"A construction is called whenever an object is created, whereas a function needs to be ","268":"A construction is called whenever an object is created, whereas a function needs to be ","269":"A construction is called whenever an object is created, whereas a function needs to be ","270":"A construction is called whenever an object is created, whereas a function needs to be ","271":"A construction is called whenever an object is created, whereas a function needs to be ","272":"A construction is called whenever an object is created, whereas a function needs to be ","273":"A construction is called whenever an object is created, whereas a function needs to be ","274":"A construction is called whenever an object is created, whereas a function needs to be ","275":"A construction is called whenever an object is created, whereas a function needs to be ","276":"A construction is called whenever an object is created, whereas a function needs to be ","277":"A construction is called whenever an object is created, whereas a function needs to be ","278":"A construction is called whenever an object is created, whereas a function needs to be ","279":"A construction is called whenever an object is created, whereas a function needs to be ","280":"A construction is called whenever an object is created, whereas a function needs to be ","281":"A construction is called whenever an object is created, whereas a function needs to be ","282":"A construction is called whenever an object is created, whereas a function needs to be ","283":"A construction is called whenever an object is created, whereas a function needs to be ","284":"A construction is called whenever an object is created, whereas a function needs to be ","285":"A construction is called whenever an object is created, whereas a function needs to be ","286":"A construction is called whenever an object is created, whereas a function needs to be ","287":"A construction is called whenever an object is created, whereas a function needs to be ","288":"A construction is called whenever an object is created, whereas a function needs to be ","289":"A construction is called whenever an object is created, whereas a function needs to be ","290":"A construction is called whenever an object is created, whereas a function needs to be ","291":"A construction is called whenever an object is created, whereas a function needs to be ","292":"A construction is called whenever an object is created, whereas a function needs to be ","293":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","294":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","295":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","296":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","297":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","298":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","299":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","300":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","301":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","302":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","303":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","304":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","305":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","306":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","307":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","308":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","309":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","310":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","311":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","312":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","313":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","314":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","315":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","316":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","317":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","318":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","319":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","320":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","321":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","322":"Of no construction is provided, the compilers provides one by default. Of a construction is defined for a class, the compilers does not create a default construction.\n","323":"Unlimited number.","324":"Unlimited number.","325":"Unlimited number.","326":"Unlimited number.","327":"Unlimited number.","328":"Unlimited number.","329":"Unlimited number.","330":"Unlimited number.","331":"Unlimited number.","332":"Unlimited number.","333":"Unlimited number.","334":"Unlimited number.","335":"Unlimited number.","336":"Unlimited number.","337":"Unlimited number.","338":"Unlimited number.","339":"Unlimited number.","340":"Unlimited number.","341":"Unlimited number.","342":"Unlimited number.","343":"Unlimited number.","344":"Unlimited number.","345":"Unlimited number.","346":"Unlimited number.","347":"Unlimited number.","348":"Unlimited number.","349":"Unlimited number.","350":"Unlimited number.","351":"Unlimited number.","352":"Unlimited number.","353":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","354":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","355":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","356":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","357":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","358":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","359":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","360":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","361":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","362":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","363":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","364":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","365":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","366":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","367":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","368":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","369":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","370":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","371":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","372":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","373":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","374":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","375":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","376":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","377":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","378":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","379":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","380":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","381":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","382":"A function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. The function definition includes the actual body of the function. ","383":"To store a class interface, including data members and member function prototypes.","384":"To store a class interface, including data members and member function prototypes.","385":"To store a class interface, including data members and member function prototypes.","386":"To store a class interface, including data members and member function prototypes.","387":"To store a class interface, including data members and member function prototypes.","388":"To store a class interface, including data members and member function prototypes.","389":"To store a class interface, including data members and member function prototypes.","390":"To store a class interface, including data members and member function prototypes.","391":"To store a class interface, including data members and member function prototypes.","392":"To store a class interface, including data members and member function prototypes.","393":"To store a class interface, including data members and member function prototypes.","394":"To store a class interface, including data members and member function prototypes.","395":"To store a class interface, including data members and member function prototypes.","396":"To store a class interface, including data members and member function prototypes.","397":"To store a class interface, including data members and member function prototypes.","398":"To store a class interface, including data members and member function prototypes.","399":"To store a class interface, including data members and member function prototypes.","400":"To store a class interface, including data members and member function prototypes.","401":"To store a class interface, including data members and member function prototypes.","402":"To store a class interface, including data members and member function prototypes.","403":"To store a class interface, including data members and member function prototypes.","404":"To store a class interface, including data members and member function prototypes.","405":"To store a class interface, including data members and member function prototypes.","406":"To store a class interface, including data members and member function prototypes.","407":"To store a class interface, including data members and member function prototypes.","408":"To store a class interface, including data members and member function prototypes.","409":"To store a class interface, including data members and member function prototypes.","410":"To store a class interface, including data members and member function prototypes.","411":"To store a class interface, including data members and member function prototypes.","412":"To store a class interface, including data members and member function prototypes."},"studentSpell":{"0":"High risk problems are address in the prototype program to make sure that the program is feasible.  A prototype may also be used to show a company that the software can be possibly programme.","1":"To simulate portions of the desired final product with a quick and easy program that does a small specific job. It is a way to help see what the problem is and how you may solve it in the final project.","2":"A prototype program simulates the behavior of portions of the desired software product to allow for error checking.","3":"Defined in the Specification phase a prototype stimulated the behavior of portions of the desired software product.  Meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.","4":"It is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. His can generate much feedback including software specification and project estimation of the total project.","5":"To find problem and errors in a program before it is penalized","6":"To address major issues in the creation of the program. There is no way to account for all possible bags in the program, but it is possible to prove the program is tangible. ","7":"you can break the whole program into prototype programs to simulate parts of the final program","8":"To provide an example or model of how the finished program should perform. -Provides foresight of some of the challenges that would be encountered. -Provides opportunity To introduce changes To the finished program.","9":"Simulating the behavior of only a portion of the desired software product.","10":"  A program that stimulated the behavior of portions of the desired software product.","11":"A program that simulates the behavior of portions of the desired software product.","12":"To lay out the basis and give you a starting point in the actual problem solving.","13":"To simulate problem solving for parts of the problem","14":"A prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.","15":"A prototype program is a part of the Specification phase of Software Problem Solving.  It is employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.","16":"Program that simulates the behavior of portions of the desired software product","17":"it provides a limited proof of concept to verify with the client before actually programming the whole application.","18":"It tests the main function of the program while leaving out the finer details.","19":"To get early feedback from users in early stages of development.  To show users a first idea of what the program will do\/look like.  To make sure the program will meet requirements before intense programming begins.","20":"it simulates the behavior of portions of the desired software product","21":"It simulates the behavior of portions of the desired software product.","22":"A prototype program is used in problem solving to collect data for the problem.","23":"To ease the understanding of problem under discussion and to ease the understanding of the program itself","24":"it simulates the behavior of portions of the desired software product","25":"The role of a prototype program is to help spot key problems that may arise during the actual programming. ","26":"the prototype program gives a general idea of what the end product will do, without the time and effort to write out the entire program.","27":"to show that a certain part of the program works as it is supposed to","28":"Prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i.e. book gave an example of a costume withdrawing money from a bank, the approach that was taking on a pseudo code level during the OOA\/Design ll before proceeding into creating a solution. ","29":"Defining and possibly the design if the testing phase reveals problems in the design. Production can be affected if the program is unfordable in its current form which will lead to a later production time than originally estimated. Also affects coming because after testing you may need to write the code for the program to remove errors.","30":"The implementation phase and the maintenance phase are effected","31":"Purification, coming, refining the solution and maintenance are all influenced by the testing stage.","32":"In RUP the stages in the software life cycle are influenced by the testing stage is:Elaboration phase- refined project vision, operative development of core system, development of system requirements, more accurate time and cost estimates.Construction phase- operative development of remaining system.Transition phase-testing and employment of the system.","33":"Defining the solution, Production and Maintenance are all influenced by the Resting stage. ","34":"Elaboration, Construction, and Transition are all affected by testing","35":"Defining, Production, Maintenance","36":"Defining the solution","37":"Purification -Debugging","38":"Defining and Going","39":"The second half of the Elaboration phase, Construction phase, and the Transition phase.","40":"The refining step, the production step, and the maintenance stage. ","41":"Elaboration, Construction, Transition","42":"Defining.","43":"The testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.","44":"Directly: Defining, coming.  Because Defining is right before the Resting Phase and Going is right after the Resting Phase.Indirectly: Production, Maintenance.  Because Defining occurs before these last two stages in the Software Life Cycle.","45":"Resting, refining, production, and maintenance.","46":"Depending on how the work is done, Resting is spread throughout the process as to prevent errors from showing up later on due to lack foresight.","47":"Elaboration, construction, and transition.","48":"All stages are influenced except setting the program requirements.  Of a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.","49":"Defining, production, and maintenance","50":"coming and refining","51":"refining, production, maintenance.","52":"Removing logical errors, testing for valid data, random data and actual data.","53":"1- specification- design- risk analysis- verification5- coming- testing- refining- production- maintenance","54":"Defining stage, Production stage, and Maintenance stage.","55":"Resting could affect all parts of the life cycle; it could make you go back to specification if it does not test well.","56":"coming","57":"The Individual components and steps such as  analysis, design, and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage. i.e. Pain output ","58":"Modularability, the ability to refuse parts of the program later in another program sometimes with completely different goals for the program. Also it makes it easier to debut code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debut. Good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. so allows you to use inheritance and polymorphism.","59":"His type of programming is more flexible, making it easier to add and modify the program.  It is also a type of a fail safe program, you check each individual module.  His eliminates redundant code and makes the program easier to read for other programme.  When debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.","60":"The main advantages to object-tormented programming are that existing classes can be refused and program maintenance and purification are easier.","61":"The advantages is that OOP allows us to build classes of objects.  Three principles that make up OOP are:Encapsulation- Objects combine data and operations.Inheritance- Glasses can inherit properties from other classes.Polymorphism- Objects can determine appropriate operations at execution time.","62":"Some advantages are existing classes can be refused and program maintenance and purification are easier to accomplish.","63":"Object tormented programming allows programme to use an object with classes that can be changed and manipulated while not affecting the entire object at once. The classes all hold attributes that affect the object.","64":"Reusable components, Extensibility, Maintainability, it reduces large problems into smaller more manageable problems.","65":"Encapsulation-objects combine data and operationsInheritance- classes can inherit properties from other classesPolymorphism- Objects can determine appropriate operations at execution time","66":" -Easier to deluge  -Reusability","67":"He-liability  and ease of maintenance","68":"  One of the main advantages is you can hide inner details a technique known by encapsulation. Objects combine the data and operations but you cannot see how it works.  Another advantage is you can refuse classes that have been defined earlier in the program, a method known as inheritance.  Finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism.","69":"Existing classes can be refused, and program maintenance and purification are easier.","70":"Using different nodules allows for easier debugging","71":"Data encapsulation concept,the use of functions or methods to manipulate data.","72":"Nodular, reliable code, allowing faster employment of solutions, and a more general view of a solution.","73":"Going and Debugging programs are usually easier, as either the compilers will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify.  The code itself also looks more organized and is easier to read and will help to avoid redundant coming.  Most-programming maintenance is also easier.Also, nodules can be refused several times in other programs without too much haste.   Abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them.  Any of the smaller problems are shared between unique complex problems, and creating nodules to these solve these smaller repeated problems can save time when you encounter them again.","74":"Variable can remain private. The code is easily modified and reliable, as well as easily implements. Not to mention easier to read and follow along as an observer.","75":"Data Abstraction and control... it is possible to isolate elementsfrom other elements a lot easier and prevent tapering of data.","76":"Encapsulation - Objects use operations without knowing how the operation works.Inheritance - cuts redundancy by refusing earlier classes.Polymorphism - objects select the correct operation to use in the situation.","77":"They make it easier to refuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.","78":"Existing classes can be refused, Program maintenance and purification are easier","79":"Existing classes can be fused, Program maintenance and purification are easier","80":"the main advantages to object-tormented programming  is data abstraction, easier maintenance, and re-liability.","81":"Existing classes can be reusedProgram maintenance and verifications are easy","82":"1- Existing classes can be refused- Program maintenance and purification are easier ","83":"Information can be hidden. It is easier to debut. Programming is easier and more manageable. ","84":"Existing classes can be refused, program maintenance and purification are easier.","85":"existing classes can be reusedprogram maintenance and purification are easier","86":"Well for one encapsulation the values of the variable inside an object are private, unless methods are written to pass into outside of the object. Is well as Inheritance where each subclass inherit all variable and methods of its super class.  Example in the book included obs clock and how obs alarm would still use clock from the first class. ","87":"It function \u2018in main ()\u2019","88":"the Function main().","89":"c++ programs begin to execute in the main method.","90":"A C++ program will begin to execute at the main() function.","91":"They begin in the main() function.","92":"Ant main()","93":"main method","94":"in the testing phase","95":"It the MAIN function","96":"main","97":" They begin to execute at the function main().","98":"The main method.","99":"It the root","100":"In the main() function.","101":"C++ programs begin execution at main.","102":"In the Pain function..?","103":"It the \"main()\" function","104":"The main function.","105":"The function main","106":"After loading the required include statements and libraries, the main method begins the execution.","107":"main function","108":"main","109":"C++ programs begin execution at the main function.","110":"It main","111":"they being to excuse at main","112":"at the main functionint main() {}","113":"C++ programs begin execution at the main function.","114":"in the \"main\" function","115":"Within the main function","116":"Variable can be a inter or a string in a program.","117":"In programming, a structure that holds data and is unique named by the programme. It holds the data assigned to it until a new value is assigned or the program is finished.","118":"A variable is a location in memory where a value can be stored.","119":" Variable is a location in the computer is memory, in which a value can be stored and later can retrieve that value.","120":"A variable is a location in the computer is memory where a value can be stored for use by a program. Each variable has a name, a value, a type and a size.","121":"A named object that can hold a numerical or letter value","122":"It is a symbol or name for a value\/number. Example: 'a_used_number' can stand for any given number, and the programme can refer to that number by using the variable name.","123":"A variable is a location in the computers memory where a value can be stored for use by a program","124":" -In identified that holds a location in memory.","125":"a block of memory that holds a specific type of data","126":"  It is a location in the computer is memory where it can be stored for use by a program.","127":"A location in memory where value can be stored.","128":"a value\/word that can assume any of a set of values","129":"A pointer to a location in memory.","130":"A variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.","131":"A variable is a value that is subject to change in a computer is memory that can be used by programs.  Programs can change the value of the variable and recall it later or act on it directly.","132":"a symbol that stands in for a value that may or may not change depending on the program. ","133":"a slaveholder to hold information used in the program...for example:in can hold: 1, 2, 3, 4, 68, 72, 256, etc.float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et.chair can hold: A, B, C, D, E, F, !, 4, 5, 6, P, etc.","134":"a stored value used by the program","135":"A way to store different values into the program, such as numbers, words, letters, etc.","136":"In object with a location in memory where value can be stored","137":"location in memory where a value can be stored","138":"a variable is an object where data is stored.","139":"Vocation in memory where a value can be stored.","140":"it is a location in memory where value can be stored","141":"A variable is the location in a computer is memory where a value can be stored for use by a program.","142":"A variable is a location in a computers memory where a value can be stored for use by a program.","143":"a location in memory where data can be stored and retrieved","144":"Is a method or identified I would say,  we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called. ","145":"They can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.","146":"In the Function main() before using the variable.","147":"Local variable are declared inside the method or function they will be used in at the beginning of the method. Global variable are declared outside of any function or method, generally before functions are defined.","148":"Variable are declared where ever it is defined either inside a block locally or outside a block locally.","149":"Variable are declared before they are actually used. They can be declared before main() to use locally","150":"For good programming practice they should be declared before main(), but should at least be declared before they are used.","151":"They can be declared locally just before the main method (but also outside of it)... or variable can be subject to only the method they are scope within, but would still be declared at the beginning of that method (but inside of it).","152":"local variable are declared inside the method while global variable are declared in the body.","153":" -Any where in the main function.","154":"Locally for an entire program, and locally for individual functions (including FOR statements)","155":" They are usually declared at the beginning before they can be used in the program. They always contain a name and a data type.","156":"Inside the method.","157":"at the top","158":"Global variable are declared in the body of the code. Local variable are declared in the function they are to be used (unless the function is being passed a variable). Variable should always be declared before use.","159":"Variable are usually declared at the beginning of a module of C++ code.","160":"In the main function, usually at the top of code.They can be declared almost anywhere, but must be declared before the code can use or act upon them.","161":"in the very beginning of the program. Before the main() starts. ","162":"In the declaration of Functions, for statements, and while statements.in the body of Of, For, while, do while, statements, in namespaces, leaders, etc  ( almost anywhere. )anywhere in the program, as long as it is on it is own line.","163":"After declaration of the variable is data type.","164":"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.","165":"Before they are used.","166":"Anywhere in the same scope before they are used","167":"variable can be declared in classes and methods.","168":"inside the function scope and outside of the function scope in case of global variable","169":"global variable are declared in the main functionlocal variable are declared in any other function","170":"Variable are usually declared at the very beginning of a C++ program, but can be declared any in the program as long as they appear before they are called upon.","171":"Variable are declared in the main function, before any operation is attempted with the variable.","172":"anywhere, but where you declare them depends on where you want them to be accessible (their scope)","173":"It depends if it\u2019s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn\u2019t need to be declared outside the variable seeing how it is used for the function or block its being called for. ","174":"The \u201cdo\u201d statement first evaluate the condition and then executed the lines of code in the statement 0 or more times.\tThe \u201cdo while\u201d statement executed the lines of code and then it evaluate the condition.","175":"do...while statements evaluate whether or not to loop after running the block contained within it at least once. To the main difference is that while statements have a possibility of never being used. To ... while statements on the other hand are always run at least once before evaluation whether to run again.","176":"The main difference between a while and a do...while loop is that the do...while loop always cycle through the loop at least once, but the while loop does not always do so.","177":"While loop used to execute a block of code as long as some condition is true.  A do...while loop used to execute a block of code as long as some condition is satisfied.  The difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.","178":"The termination condition of a do...while statement is usually at the end of the loop so it will run at least once. Is for the while statement, if the condition is false to begin with, then the loop will never run.","179":"A while loop will check the statement to make sure it is true before executing. A do while loop will execute before checking the statement to see if it should run again.","180":"A while statement will test the condition of the while loop FIRST - there is a chance the loop will never run. A do...while loop will ALWAYS run once, and then the while test will determine if it will run again.","181":"a do while loop always executed once. A while loop is conditional statement has to be true for it to run.","182":"#NAME?","183":"while statements will evaluate the statement BEFORE executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. A do...while will run evaluate the statement AFTER running through a cycle of the loop, ensuring that the loop always executed at least one time.","184":"  The main difference between a do and a do...while statement is in a do...while statement is the statements in a do block are always executed least once.  The while statement will only execute if its condition is true.","185":"The loop of a do...while statement always executed once.","186":"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.","187":"To ...while runs the embedded code at least once, the do command does not necessarily","188":"While tests for true first before running, do...while runs once first before checking.","189":"A do...while statement is body always executed at least once.  There as a while statement will not execute at all unless the condition for the while is true.","190":"The statements within the block of the do while loop will always be executed at least once regardless of the conditions. Whereas the while loops may never be executed if the conditions are not met. ","191":"a do... while loop will always run through once, while an while loopperforms a test before running through the loop.","192":"A while statement tests the condition before it can start.A do...while statement loops through once before the condition is tested.","193":"A while loop terminates at the beginning of the loop, a do\/while terminates at the end of the loop.","194":"the loop body always executed at least once","195":"While loop evaluate its expression at the top of its loop and decides if it needs to execute, and the do-while always executed at least once and then evaluate its expression at the bottom of its loop.","196":"A do...while statement will always execute the \"do\" piece of code at least once before checking the condition. A while statement will always check the condition first.","197":"A do-while passes least 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.","198":"a while loop checks if the condition is true or not first, if it was true, it excuses the statement.a do.. while loop executed the statement before it checks the condition. if the condition was true it would excuse the statement again. so a do...while loop would excuse the statement least once.","199":"of ANSWER","200":"A do...while loop will always execute least once, a while loop may never execute depending on the conditions.","201":"a while loop is pre-check (it checks the condition statement before it executed the code within the while block)a do while loop is post-check (it checks the condition AFTER the block executed, it runs at least once no matter what the condition statement is)","202":"))     That is the main difference between a while and a do...while statement?The do while construct consists of a block of code and a condition. First, the code within the block is executed, and then the condition is evacuated, this is done until it is prove false. The difference between the While loop is it tests the condition before the code within the block is executed.","203":"For us it is usually a set, get, and displayMessge or other messages that tell you what properties a class has but does not reveal its implementation. You could have anything you want in your own class definition.","204":"The attributes of said class. Also whether or not it is a subclass. Also whether it is public private or protected.","205":"Information telling the compilers what data members and member functions belong to the class.","206":"Since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and rationally access specified.  Example for specified would be public, private, and protected.  There is the eyford Glass and the Glass body is enclosed with brackets ({}). ","207":"In object and data.","208":"It is specific class name, includes only information defined by that class... implementation details... etc.","209":"data members and member functions.","210":"A class definition usually contains the function and its data members","211":"Data members and member functions","212":"member functions","213":"Member functions and data members belonging to the class.","214":"a public and private area that includes the functions and variable that are used in the class","215":"the eyford class followed by they class name, on the inside you declare public and private declarations of your class","216":"A class definition typically includes function definitions.","217":"It begins with Glass, followed by the class name, then usually a construction, data members and member functions that delineates the class is included in any class is definition.","218":"the data and methods ","219":"A construction, functions, and variable that are accessible to by that class, and possibly other classes depending on how they are done.","220":"Member functions and data members.","221":"public section and private section, and there must be a semicolon to set the end","222":"member functions and data members","223":"Data members and Member functions","224":"data members and member functions","225":"the class name and its public data types such as contractors, methods, functions.","226":"a construction and several data members, and at least one public data member or method","227":"class name, two curly prenthesis, public and private","228":"data members and member functions","229":"Data and functions","230":"functions and data members that belong to the class","231":"class variable, function definitions for the class","232":"A class is an expanded concept of a data structure, it holds both the data and the functions being executed ","233":" Data members are the data components of a particular class.  A member function are the sanctioning components of the class.","234":" A field variable is a variable that is declared as a member of a class. A local variable is variable that declared local to a method.","235":"Data members are declared inside the class, but outside of any member functions. Unlike with local variable, each object of the class keeps its own copy of the data members stored in memory.","236":"Data member are variable that represent an attribute in a class definition.  Local variable declared in a function body cannot be used outside of that function body.  When a function terminates the values of its local variable are lost.","237":"A local variable cannot be accessed outside the function in which it is declared. Data members normally are private. Variable of functions declared private are accessible only to member functions of the class in which they are declared.","238":"A data member is part of a C++ class or structure that stores data of a certain type... A local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.","239":"A local variable can only be accessed within the scope of its declaration.","240":"Data members are the attributes of the function and can be used outside the function.Local variable can not be used outside the function and the value is lost after the function terminates.","241":"data members are permanent attributes of the class, local variable inside a member function are lost when the scope of the member function ends.","242":"data members are declared in a class definition but outside the bodies of a class is member-function definitions. Local variable are declared in a function definition is body","243":"A data member is locally accessible, while a local variable is only accessible inside the member function.","244":"A variable inside a member function can only be accessed inside that member and a data member can be accessed throughout the program.","245":"Local variable are used only within the scope of its declaration","246":"A data member is a more general term describing all objects instantiated within a member function.  \"Local\" in local variable refers more to the scope of a variable, which may be located in anything from a control structure to a class.  Local variable whose scope are in a member function are the same as data members of member functions.","247":"A data member exists permanently in that program is memory as long as it is run.A local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.","248":"local variable can only be used within the function, where as data members can be set to public access and can be used throughout","249":"The local variable is lost once it exist the block of code, while the data member is not.","250":"Very member function can access and modify a data member.A local variable can only be used from the line of declaration to the next closing } before it is lost from memory.","251":"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes","252":"Data members are variable that are declared inside the class definition but outside of the bodies of the class member functions. Local variable can only be used within the function declaration.","253":"The data member can be accessed outside of the class, whereas the local variable cannot.","254":"Local variable cannot be used outside of that function body. When a function terminates the values of its local variable are lost. There as data members are variable in a class definition, and they exist throughout the life of the object.","255":"a local variable in a member function has to be static. a data member can change its value freely.","256":"a local variable is only unable within the function it is defined, whereas a data member is available to any method within its class","257":"Variable declared in a function definition is body cannot be used outside of that function.Data members accessible only to member function of that class.","258":"data members local variable are declared in a function definition\u2019s body.they Cannot be used outside of that function body.When a function terminates, the values of its local variable are lost.","259":"local variable is only available in the function.","260":"local variable are accessed inside member functions only while data members can be accessed throughout the class","261":"A data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exist.","262":"a Data member is encapsulated within a class or object,  it is static and can be shared by all instances of that class. however local variable is are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variable. ","263":" A construction initiatives an object or objects of a class.  A function of a class perform a task such as display a line of text or do some kind of mathematical operations.","264":"all contractors are functions but not all functions are contractors. Also functions can have nearly infinite purposes, while contractors always create an instance of whichever class you are using. You can change how a construction does something but not what it does. With functions you can change not only the how but also the what.","265":"Unlike regular functions, contractors are only used to initiative an object\u2019s data when it is created. Constructors must also be given the same name as the class and cannot return any values.","266":"A construction typically used to intialize data members and allocate resources, for instance memory, files, etc.  Also a construction cannot return values.  Functions are operations that maybe locally defined.","267":"Constructors cannot return values, so they cannot specify a return type. Normally, contractors are declared public.","268":"A construction is a method that starts new instances of a class. (Example: Employee employees(parameter) starts a new instance of object of type Employee). A function is simply a module w\/in a program that complete its single desired task.","269":"A construction is called whenever a new object of that class is made.","270":"A construction does not return any date and has no return type.Functions can return date or not return data can have a return type.","271":"A construction is automatically called whenever an instance of a class is created, a function must be explicitly called by the user. ","272":"contractors cannot return values, so they cannot specify a return type like functions can.","273":"A construction is a function used to initiative an object is data when it is created.","274":"a construction initiatives everything so that nothing is left empty or with random varioubles and a function modified those variable with data.","275":"A construction initialized values at the execution of its instantiation. It provides default values.","276":"A construction sets up the default values of variable when an object is instantiated, whereas a function allows interaction with that object.","277":"A construction is used to create an object that can be employed in the main function of a program.  His may or may not execute code along with it.A function is a set of code that executed when called, but does not create a new object.","278":"a construction initiatives data members but the functions actually perform tasks. Constructors can return values either. ","279":"a construction does not need a type, and it is used to initiative the variable.","280":"Constructors do not have a return type.","281":"construction creates the class object into memory where functions perform actions against that object","282":"contractors cannot return values","283":"A construction initiatives values and a function usual perform some sort of operation.","284":"A construction is a function used to initiative an object is data when it is created. It is call is made implicitly when the object is created and must be defined with the same name as the class. Instructor also cannot return a value like a function can.","285":"A construction is used to create an instance of a class and has the same name as that class. A function cannot have the same name as a class and computer data.","286":"a construction is a function that initiatives a class instance, a function perform whatever task it is written for","287":"A construction cannot return values, not even void, but function get a return value.","288":"a construction cannot return values, its not even void. it is used to initiative an object is data when it is created.whereas, a function is created to do a specific task, and it can return values.","289":"A construction initiatives an object. A function is part of an object.","290":"contractors initiative the data that is then used in the calculations of a function","291":"a construction is called when the class is created, a function can be called any time.","292":"construction is a special block of statements called when an object is created, either when it is declared ecstatically or constructed on the stick. However a function is a portion of code within a larger program, which perform a specific task and independent to the rest of the code. ","293":"The compilers creates a default construction when we do not define one in our class file","294":"during compilation","295":"When the class does not explicitly include a construction.","296":"When no parameter are set is when a default construction is used.  ","297":"When a class does not explicitly include a construction.","298":"When there are no arguments passed.","299":"when there is not one already for a specific class","300":"When it the programs compilers","301":"when a construction is not provided by the programme of the class","302":"In any class that does not explicitly include a construction.","303":"Before the main function of the code.","304":"whenever you dont specific your own","305":"When non are provided","306":"C++ will create a default construction when no other construction is present.","307":"When no construction was specified in the construction is class, but the class is instantiated in a program.","308":"When no construction exists when one is needed, a parameterless default construction is declared.","309":"The Compilers creates this automatically for you, unless you specifically create one.","310":"In any class that does not explicitly include a construction.","311":"when no user-defined construction exists","312":"Of a class does not explicitly include a construction, the compilers creates one.","313":"When you do not provide your own construction.","314":"When a class does not explicitly include a construction.","315":"C++ creates a default construction during compilation if one is not provided.","316":"when a class does not explicitly include a construction","317":"The compilers will provide one when class does not explicitly include a conductor.","318":"when the programme does not explicitly include a construction","319":"When one is not explicitly stated.","320":"when one is not explicitly included by a class","321":"When you dont specify any contractors.","322":"at the very beginning when you run a complied, matter a fact in C++ it generate its own default construction for the class provided if no other contractors have been provided by user","323":"Must one per class.","324":"Is many as you want so long as they have different parameter.","325":"There is no limit to the number of contractors in a class because like functions, contractors can be overloaded.","326":"It depends what type of class is being defined.  Typically you would have a construction call for each object.","327":"In C++, the construction can be overloaded in that there can be more than one construction for a class, each having different parameter.","328":"1","329":"any number you want","330":"One","331":"by default just one, but they may be overloaded to create as many contractors as necessary","332":"as many as you want","333":"Is many as you want, with different parameter.","334":"infinite","335":"as many as you need","336":"Is many as are needed, depending on how many variable one wishes to directly modify or leave as default when instantiating an object.","337":"A very large amount of contractors can be created for any given class through overlooking.  When two contractors with a different type or number of parameter are created, they are said to be overloaded, and C++ can recognize which construction to use based on the type of the variable that are passed\/returned.","338":"It depends on the number of objects. Each object should have a construction.","339":"Theoretically unlimited, as long as they are defined by the programme.","340":"Is many as needed.","341":"as many as wanted\/needed","342":"several","343":"One","344":"one","345":"There can be infinite contractors as long as the signature is different.","346":"that depends on the number of data members in the class","347":"one","348":"you can overcoat contractors as you need","349":"Is many as the programme wants to create. ","350":"one","351":"as many as you want, as long as they each have a unique argument list","352":"as many as the user decides to use. ","353":" A function definition does not require any additional information that needs to be passed inside its parenthesis to execute. While a definition prototype requires more than one parameter to be passed in order to complete its task.","354":"The FUNCTION PROTOTYPE is where the programme declares that he\/she is using a function other than main( ). His is like declaring a variable, the programme knows that he\/she will be using in the future, but has yet to say where they are going to use it, or how. His is answers the question who, it gives the function a name and character. The function prototype, by common practice is placed at the beginning of the program after the #includes and before main( ).The FUNCTION DEFINITION is the guns of the function. His is where the programme decides what the function is going to do and tells it how to do it. It takes whatever information it is given and perform the operations. It works sort of like the brain, the brain takes in input and based upon that input perform in some way producing an output. The function definition is placed outside of main( ) and any other functions. A function is its own entity and should be thought of as such.","355":"A function prototype tells the compilers the function name, return type and the number and type of parameter without revealing the implementation contained in the function definition.","356":"Function prototype is a declaration.  Function definitions (w\/multiple parameter) often require more than one piece of information. to perform their tasks.","357":"A function prototype is a declaration of a function that tells the compilers the function is name, its return type and the types of its parameter.","358":"A prototype shows only return types and necessary parameter. The definition includes names for those parameter and defines what the object is actually capable of doing.","359":"prototype only tells the user what data types go into a function and what type is returned.","360":"Function prototype is located in the .h file and only contains the access function name and parameter type.Function definition contains the code for the function to perform its activity.","361":"a function prototype is used to reference the compilers to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameter, etc...","362":"A function prototype describes a class is public interface without revealing the class is member function implementation","363":"Function definitions are just that, the definition. The prototype is what the compilers uses to check that calls to function are correct.","364":"a prototype does not include any actual code where the function has all the code that is executed in the program.","365":"a prototype declares what will be used in the program and the definition ","366":"A function prototype lays out the name, return type, and the number and types of parameter the function expects to receive in a certain order.  The details for function prototypes are in the function definition.","367":"A function definition is the code that defines the function placed in the {} brackets that determines that function is operation.A function prototype shows the function is public interface without exposing implementation.  It shows name, return type and type of parameter.","368":"A function prototype is just a declaration of the function existing, and can be used as an actual function. A function has to be created with a definition within to tell the compilers what the function does.","369":"the Prototype creates a framework to call the function definition. While a function definition is where the function is actually programme out and created into a final product.","370":"A function prototype describes the class is public interface without providing how the function works.A function definition contains the inner workings of the function.","371":"prototype states all functions in that class before compilation, where the definition actually holds the source for the functions","372":"Function prototypes tell the compilers the function names, its return type, and the types of its parameter where as, function definitions actually implement the member functions.","373":"A function prototype just specified parameter.  A function definition includes parameter and a code body.","374":"Function prototypes describe the class is public interface","375":"A prototype only declares name, return type, and input type.A definition also defines the scope, variable, process, and return function ","376":"a function prototype simply declares the functions parameter, the function definition includes any necessary variable and the function is actual code","377":"A function prototype is a declaration of a function , while function definition specified what a function does","378":"in a function prototype you include the return type, the name of the function, and its parameter if any are needed.in a function definition you write the code of what the function will do. ","379":"A function definition contains all the code for a function to work. A function prototype just shows the output, input and function name.","380":"function prototype describe the class is public interface without revealing the class is member function implementation,  function definitions show what implementation are being done","381":"A function prototype only names the function, its return type, and it is argument list, while a definition defines the above as well as what the function actually does.","382":"function prototype describes a classes interface without revising whatever is inside as for the function definition cannot do that. ","383":"the role of a header file list all the functions a class can do while hiding the inner workings of its functions","384":"The main role of header file is it is used to share information among various files.","385":"Leader files separate files in which classes are defined and allow the compilers to recognize classes when used elsewhere.","386":"To","387":"A header file consists of \"reliable\" source code such as a class in a file that by convention has a .h filename extension. His differs from .pp files that contain \"source-code.\"","388":"To provide information about the contents of a library. It includes the definition of classes, declarations of functions, data types, and constant.","389":"the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.","390":"Leader files declares the class member functions.","391":"A header file allows for the separation of declaration and implementation into separate files. ","392":"the header file has access to the C++ Standard Library and makes certain classes like class string work.","393":"\u201cInstruct\u201d the compilers on how to interface with library and user-written components.","394":"create a common area to contain reliable functions.","395":"to declare the functions being used in the classes","396":"#include \"hat.h\"  allows the use of the hat container, so called from the act of pulling names from a hat.  The header file for hat includes functions for storage and retrieved of it is contents, mainly put(), week(), and pull().","397":"To hold reliable content or nodules separate from the actual  source-code file that can be easily reference and employed for different programs.","398":"a header file is a file used to store a list of promote functions and data members.","399":"A header file is a cross communication method between source files, to help limit the size of each individual program. Without header files a program will be 1 large lump of code and thus fairly hard to debut and traverse.","400":"It contains reliable source code for use by other classes.","401":"to separate the source code from the main function, allows the methods\/classes to be included in the program without direct coming. allows re liability.","402":"Leader files have reliable source code in a file that a program can use. ","403":"To hide the definition and details of a class.  Also to help reliability of the main C++ file.","404":"To allow the compilers to recognize the classes when used elsewhere.","405":"A header file declares a class, its data, and functions available through that class.","406":"header files contain code which can be used in multiple files","407":"Allow compilers to recognize the classes when used elsewhere","408":"Allow compilers to recognize the classes when used elsewhere","409":"To promote function reusuablitly","410":"class definitions are placed here","411":"A header file usually contains class and\/or function prototypes.","412":"contains all the standard C++ library is i.e. string "},"keyLower":{"0":"to simulate the behaviour of portions of the desired software product. \n","1":"to simulate the behaviour of portions of the desired software product. \n","2":"to simulate the behaviour of portions of the desired software product. \n","3":"to simulate the behaviour of portions of the desired software product. \n","4":"to simulate the behaviour of portions of the desired software product. \n","5":"to simulate the behaviour of portions of the desired software product. \n","6":"to simulate the behaviour of portions of the desired software product. \n","7":"to simulate the behaviour of portions of the desired software product. \n","8":"to simulate the behaviour of portions of the desired software product. \n","9":"to simulate the behaviour of portions of the desired software product. \n","10":"to simulate the behaviour of portions of the desired software product. \n","11":"to simulate the behaviour of portions of the desired software product. \n","12":"to simulate the behaviour of portions of the desired software product. \n","13":"to simulate the behaviour of portions of the desired software product. \n","14":"to simulate the behaviour of portions of the desired software product. \n","15":"to simulate the behaviour of portions of the desired software product. \n","16":"to simulate the behaviour of portions of the desired software product. \n","17":"to simulate the behaviour of portions of the desired software product. \n","18":"to simulate the behaviour of portions of the desired software product. \n","19":"to simulate the behaviour of portions of the desired software product. \n","20":"to simulate the behaviour of portions of the desired software product. \n","21":"to simulate the behaviour of portions of the desired software product. \n","22":"to simulate the behaviour of portions of the desired software product. \n","23":"to simulate the behaviour of portions of the desired software product. \n","24":"to simulate the behaviour of portions of the desired software product. \n","25":"to simulate the behaviour of portions of the desired software product. \n","26":"to simulate the behaviour of portions of the desired software product. \n","27":"to simulate the behaviour of portions of the desired software product. \n","28":"to simulate the behaviour of portions of the desired software product. \n","29":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","30":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","31":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","32":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","33":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","34":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","35":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","36":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","37":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","38":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","39":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","40":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","41":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","42":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","43":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","44":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","45":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","46":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","47":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","48":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","49":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","50":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","51":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","52":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","53":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","54":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","55":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","56":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","57":"the testing stage can influence both the coming stage (phase 5) and the solution refinement stage (phase 7) ","58":"abstraction and reliability.","59":"abstraction and reliability.","60":"abstraction and reliability.","61":"abstraction and reliability.","62":"abstraction and reliability.","63":"abstraction and reliability.","64":"abstraction and reliability.","65":"abstraction and reliability.","66":"abstraction and reliability.","67":"abstraction and reliability.","68":"abstraction and reliability.","69":"abstraction and reliability.","70":"abstraction and reliability.","71":"abstraction and reliability.","72":"abstraction and reliability.","73":"abstraction and reliability.","74":"abstraction and reliability.","75":"abstraction and reliability.","76":"abstraction and reliability.","77":"abstraction and reliability.","78":"abstraction and reliability.","79":"abstraction and reliability.","80":"abstraction and reliability.","81":"abstraction and reliability.","82":"abstraction and reliability.","83":"abstraction and reliability.","84":"abstraction and reliability.","85":"abstraction and reliability.","86":"abstraction and reliability.","87":"it the main function.","88":"it the main function.","89":"it the main function.","90":"it the main function.","91":"it the main function.","92":"it the main function.","93":"it the main function.","94":"it the main function.","95":"it the main function.","96":"it the main function.","97":"it the main function.","98":"it the main function.","99":"it the main function.","100":"it the main function.","101":"it the main function.","102":"it the main function.","103":"it the main function.","104":"it the main function.","105":"it the main function.","106":"it the main function.","107":"it the main function.","108":"it the main function.","109":"it the main function.","110":"it the main function.","111":"it the main function.","112":"it the main function.","113":"it the main function.","114":"it the main function.","115":"it the main function.","116":"a location in memory that can store a value.","117":"a location in memory that can store a value.","118":"a location in memory that can store a value.","119":"a location in memory that can store a value.","120":"a location in memory that can store a value.","121":"a location in memory that can store a value.","122":"a location in memory that can store a value.","123":"a location in memory that can store a value.","124":"a location in memory that can store a value.","125":"a location in memory that can store a value.","126":"a location in memory that can store a value.","127":"a location in memory that can store a value.","128":"a location in memory that can store a value.","129":"a location in memory that can store a value.","130":"a location in memory that can store a value.","131":"a location in memory that can store a value.","132":"a location in memory that can store a value.","133":"a location in memory that can store a value.","134":"a location in memory that can store a value.","135":"a location in memory that can store a value.","136":"a location in memory that can store a value.","137":"a location in memory that can store a value.","138":"a location in memory that can store a value.","139":"a location in memory that can store a value.","140":"a location in memory that can store a value.","141":"a location in memory that can store a value.","142":"a location in memory that can store a value.","143":"a location in memory that can store a value.","144":"a location in memory that can store a value.","145":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","146":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","147":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","148":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","149":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","150":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","151":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","152":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","153":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","154":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","155":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","156":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","157":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","158":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","159":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","160":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","161":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","162":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","163":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","164":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","165":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","166":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","167":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","168":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","169":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","170":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","171":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","172":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","173":"variable can be declared anywhere in a program. they can be declared inside a function (local variable) or outside the functions (global variable)","174":"the block inside a do...while statement will execute at least once.","175":"the block inside a do...while statement will execute at least once.","176":"the block inside a do...while statement will execute at least once.","177":"the block inside a do...while statement will execute at least once.","178":"the block inside a do...while statement will execute at least once.","179":"the block inside a do...while statement will execute at least once.","180":"the block inside a do...while statement will execute at least once.","181":"the block inside a do...while statement will execute at least once.","182":"the block inside a do...while statement will execute at least once.","183":"the block inside a do...while statement will execute at least once.","184":"the block inside a do...while statement will execute at least once.","185":"the block inside a do...while statement will execute at least once.","186":"the block inside a do...while statement will execute at least once.","187":"the block inside a do...while statement will execute at least once.","188":"the block inside a do...while statement will execute at least once.","189":"the block inside a do...while statement will execute at least once.","190":"the block inside a do...while statement will execute at least once.","191":"the block inside a do...while statement will execute at least once.","192":"the block inside a do...while statement will execute at least once.","193":"the block inside a do...while statement will execute at least once.","194":"the block inside a do...while statement will execute at least once.","195":"the block inside a do...while statement will execute at least once.","196":"the block inside a do...while statement will execute at least once.","197":"the block inside a do...while statement will execute at least once.","198":"the block inside a do...while statement will execute at least once.","199":"the block inside a do...while statement will execute at least once.","200":"the block inside a do...while statement will execute at least once.","201":"the block inside a do...while statement will execute at least once.","202":"the block inside a do...while statement will execute at least once.","203":"data members (attributes) and member functions.","204":"data members (attributes) and member functions.","205":"data members (attributes) and member functions.","206":"data members (attributes) and member functions.","207":"data members (attributes) and member functions.","208":"data members (attributes) and member functions.","209":"data members (attributes) and member functions.","210":"data members (attributes) and member functions.","211":"data members (attributes) and member functions.","212":"data members (attributes) and member functions.","213":"data members (attributes) and member functions.","214":"data members (attributes) and member functions.","215":"data members (attributes) and member functions.","216":"data members (attributes) and member functions.","217":"data members (attributes) and member functions.","218":"data members (attributes) and member functions.","219":"data members (attributes) and member functions.","220":"data members (attributes) and member functions.","221":"data members (attributes) and member functions.","222":"data members (attributes) and member functions.","223":"data members (attributes) and member functions.","224":"data members (attributes) and member functions.","225":"data members (attributes) and member functions.","226":"data members (attributes) and member functions.","227":"data members (attributes) and member functions.","228":"data members (attributes) and member functions.","229":"data members (attributes) and member functions.","230":"data members (attributes) and member functions.","231":"data members (attributes) and member functions.","232":"data members (attributes) and member functions.","233":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","234":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","235":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","236":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","237":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","238":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","239":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","240":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","241":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","242":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","243":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","244":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","245":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","246":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","247":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","248":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","249":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","250":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","251":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","252":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","253":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","254":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","255":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","256":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","257":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","258":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","259":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","260":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","261":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","262":"data members can be accessed from any member functions inside the class definition. local variable can only be accessed inside the member function that defines them.","263":"a construction is called whenever an object is created, whereas a function needs to be ","264":"a construction is called whenever an object is created, whereas a function needs to be ","265":"a construction is called whenever an object is created, whereas a function needs to be ","266":"a construction is called whenever an object is created, whereas a function needs to be ","267":"a construction is called whenever an object is created, whereas a function needs to be ","268":"a construction is called whenever an object is created, whereas a function needs to be ","269":"a construction is called whenever an object is created, whereas a function needs to be ","270":"a construction is called whenever an object is created, whereas a function needs to be ","271":"a construction is called whenever an object is created, whereas a function needs to be ","272":"a construction is called whenever an object is created, whereas a function needs to be ","273":"a construction is called whenever an object is created, whereas a function needs to be ","274":"a construction is called whenever an object is created, whereas a function needs to be ","275":"a construction is called whenever an object is created, whereas a function needs to be ","276":"a construction is called whenever an object is created, whereas a function needs to be ","277":"a construction is called whenever an object is created, whereas a function needs to be ","278":"a construction is called whenever an object is created, whereas a function needs to be ","279":"a construction is called whenever an object is created, whereas a function needs to be ","280":"a construction is called whenever an object is created, whereas a function needs to be ","281":"a construction is called whenever an object is created, whereas a function needs to be ","282":"a construction is called whenever an object is created, whereas a function needs to be ","283":"a construction is called whenever an object is created, whereas a function needs to be ","284":"a construction is called whenever an object is created, whereas a function needs to be ","285":"a construction is called whenever an object is created, whereas a function needs to be ","286":"a construction is called whenever an object is created, whereas a function needs to be ","287":"a construction is called whenever an object is created, whereas a function needs to be ","288":"a construction is called whenever an object is created, whereas a function needs to be ","289":"a construction is called whenever an object is created, whereas a function needs to be ","290":"a construction is called whenever an object is created, whereas a function needs to be ","291":"a construction is called whenever an object is created, whereas a function needs to be ","292":"a construction is called whenever an object is created, whereas a function needs to be ","293":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","294":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","295":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","296":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","297":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","298":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","299":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","300":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","301":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","302":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","303":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","304":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","305":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","306":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","307":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","308":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","309":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","310":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","311":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","312":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","313":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","314":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","315":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","316":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","317":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","318":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","319":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","320":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","321":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","322":"of no construction is provided, the compilers provides one by default. of a construction is defined for a class, the compilers does not create a default construction.\n","323":"unlimited number.","324":"unlimited number.","325":"unlimited number.","326":"unlimited number.","327":"unlimited number.","328":"unlimited number.","329":"unlimited number.","330":"unlimited number.","331":"unlimited number.","332":"unlimited number.","333":"unlimited number.","334":"unlimited number.","335":"unlimited number.","336":"unlimited number.","337":"unlimited number.","338":"unlimited number.","339":"unlimited number.","340":"unlimited number.","341":"unlimited number.","342":"unlimited number.","343":"unlimited number.","344":"unlimited number.","345":"unlimited number.","346":"unlimited number.","347":"unlimited number.","348":"unlimited number.","349":"unlimited number.","350":"unlimited number.","351":"unlimited number.","352":"unlimited number.","353":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","354":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","355":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","356":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","357":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","358":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","359":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","360":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","361":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","362":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","363":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","364":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","365":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","366":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","367":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","368":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","369":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","370":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","371":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","372":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","373":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","374":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","375":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","376":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","377":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","378":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","379":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","380":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","381":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","382":"a function prototype includes the function signature, i.e., the name of the function, the return type, and the parameter' type. the function definition includes the actual body of the function. ","383":"to store a class interface, including data members and member function prototypes.","384":"to store a class interface, including data members and member function prototypes.","385":"to store a class interface, including data members and member function prototypes.","386":"to store a class interface, including data members and member function prototypes.","387":"to store a class interface, including data members and member function prototypes.","388":"to store a class interface, including data members and member function prototypes.","389":"to store a class interface, including data members and member function prototypes.","390":"to store a class interface, including data members and member function prototypes.","391":"to store a class interface, including data members and member function prototypes.","392":"to store a class interface, including data members and member function prototypes.","393":"to store a class interface, including data members and member function prototypes.","394":"to store a class interface, including data members and member function prototypes.","395":"to store a class interface, including data members and member function prototypes.","396":"to store a class interface, including data members and member function prototypes.","397":"to store a class interface, including data members and member function prototypes.","398":"to store a class interface, including data members and member function prototypes.","399":"to store a class interface, including data members and member function prototypes.","400":"to store a class interface, including data members and member function prototypes.","401":"to store a class interface, including data members and member function prototypes.","402":"to store a class interface, including data members and member function prototypes.","403":"to store a class interface, including data members and member function prototypes.","404":"to store a class interface, including data members and member function prototypes.","405":"to store a class interface, including data members and member function prototypes.","406":"to store a class interface, including data members and member function prototypes.","407":"to store a class interface, including data members and member function prototypes.","408":"to store a class interface, including data members and member function prototypes.","409":"to store a class interface, including data members and member function prototypes.","410":"to store a class interface, including data members and member function prototypes.","411":"to store a class interface, including data members and member function prototypes.","412":"to store a class interface, including data members and member function prototypes."},"studentLower":{"0":"high risk problems are address in the prototype program to make sure that the program is feasible.  a prototype may also be used to show a company that the software can be possibly programme.","1":"to simulate portions of the desired final product with a quick and easy program that does a small specific job. it is a way to help see what the problem is and how you may solve it in the final project.","2":"a prototype program simulates the behavior of portions of the desired software product to allow for error checking.","3":"defined in the specification phase a prototype stimulated the behavior of portions of the desired software product.  meaning, the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving.","4":"it is used to let the users have a first idea of the completed program and allow the clients to evaluate the program. his can generate much feedback including software specification and project estimation of the total project.","5":"to find problem and errors in a program before it is penalized","6":"to address major issues in the creation of the program. there is no way to account for all possible bags in the program, but it is possible to prove the program is tangible. ","7":"you can break the whole program into prototype programs to simulate parts of the final program","8":"to provide an example or model of how the finished program should perform. -provides foresight of some of the challenges that would be encountered. -provides opportunity to introduce changes to the finished program.","9":"simulating the behavior of only a portion of the desired software product.","10":"  a program that stimulated the behavior of portions of the desired software product.","11":"a program that simulates the behavior of portions of the desired software product.","12":"to lay out the basis and give you a starting point in the actual problem solving.","13":"to simulate problem solving for parts of the problem","14":"a prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem.","15":"a prototype program is a part of the specification phase of software problem solving.  it is employed to illustrate how the key problem or problems will be solved in a program, and sometimes serves as a base program to expand upon.","16":"program that simulates the behavior of portions of the desired software product","17":"it provides a limited proof of concept to verify with the client before actually programming the whole application.","18":"it tests the main function of the program while leaving out the finer details.","19":"to get early feedback from users in early stages of development.  to show users a first idea of what the program will do\/look like.  to make sure the program will meet requirements before intense programming begins.","20":"it simulates the behavior of portions of the desired software product","21":"it simulates the behavior of portions of the desired software product.","22":"a prototype program is used in problem solving to collect data for the problem.","23":"to ease the understanding of problem under discussion and to ease the understanding of the program itself","24":"it simulates the behavior of portions of the desired software product","25":"the role of a prototype program is to help spot key problems that may arise during the actual programming. ","26":"the prototype program gives a general idea of what the end product will do, without the time and effort to write out the entire program.","27":"to show that a certain part of the program works as it is supposed to","28":"prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem. i.e. book gave an example of a costume withdrawing money from a bank, the approach that was taking on a pseudo code level during the ooa\/design ll before proceeding into creating a solution. ","29":"defining and possibly the design if the testing phase reveals problems in the design. production can be affected if the program is unfordable in its current form which will lead to a later production time than originally estimated. also affects coming because after testing you may need to write the code for the program to remove errors.","30":"the implementation phase and the maintenance phase are effected","31":"purification, coming, refining the solution and maintenance are all influenced by the testing stage.","32":"in rup the stages in the software life cycle are influenced by the testing stage is:elaboration phase- refined project vision, operative development of core system, development of system requirements, more accurate time and cost estimates.construction phase- operative development of remaining system.transition phase-testing and employment of the system.","33":"defining the solution, production and maintenance are all influenced by the resting stage. ","34":"elaboration, construction, and transition are all affected by testing","35":"defining, production, maintenance","36":"defining the solution","37":"purification -debugging","38":"defining and going","39":"the second half of the elaboration phase, construction phase, and the transition phase.","40":"the refining step, the production step, and the maintenance stage. ","41":"elaboration, construction, transition","42":"defining.","43":"the testing stage has a direct influence on the final version of a program, being as it is the debugging and finalization of a software revision.","44":"directly: defining, coming.  because defining is right before the resting phase and going is right after the resting phase.indirectly: production, maintenance.  because defining occurs before these last two stages in the software life cycle.","45":"resting, refining, production, and maintenance.","46":"depending on how the work is done, resting is spread throughout the process as to prevent errors from showing up later on due to lack foresight.","47":"elaboration, construction, and transition.","48":"all stages are influenced except setting the program requirements.  of a test fails, it can change the whole design, implementation, etc of a program as well as the final outcome.","49":"defining, production, and maintenance","50":"coming and refining","51":"refining, production, maintenance.","52":"removing logical errors, testing for valid data, random data and actual data.","53":"1- specification- design- risk analysis- verification5- coming- testing- refining- production- maintenance","54":"defining stage, production stage, and maintenance stage.","55":"resting could affect all parts of the life cycle; it could make you go back to specification if it does not test well.","56":"coming","57":"the individual components and steps such as  analysis, design, and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage. i.e. pain output ","58":"modularability, the ability to refuse parts of the program later in another program sometimes with completely different goals for the program. also it makes it easier to debut code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debut. good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code. so allows you to use inheritance and polymorphism.","59":"his type of programming is more flexible, making it easier to add and modify the program.  it is also a type of a fail safe program, you check each individual module.  his eliminates redundant code and makes the program easier to read for other programme.  when debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program.","60":"the main advantages to object-tormented programming are that existing classes can be refused and program maintenance and purification are easier.","61":"the advantages is that oop allows us to build classes of objects.  three principles that make up oop are:encapsulation- objects combine data and operations.inheritance- glasses can inherit properties from other classes.polymorphism- objects can determine appropriate operations at execution time.","62":"some advantages are existing classes can be refused and program maintenance and purification are easier to accomplish.","63":"object tormented programming allows programme to use an object with classes that can be changed and manipulated while not affecting the entire object at once. the classes all hold attributes that affect the object.","64":"reusable components, extensibility, maintainability, it reduces large problems into smaller more manageable problems.","65":"encapsulation-objects combine data and operationsinheritance- classes can inherit properties from other classespolymorphism- objects can determine appropriate operations at execution time","66":" -easier to deluge  -reusability","67":"he-liability  and ease of maintenance","68":"  one of the main advantages is you can hide inner details a technique known by encapsulation. objects combine the data and operations but you cannot see how it works.  another advantage is you can refuse classes that have been defined earlier in the program, a method known as inheritance.  finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism.","69":"existing classes can be refused, and program maintenance and purification are easier.","70":"using different nodules allows for easier debugging","71":"data encapsulation concept,the use of functions or methods to manipulate data.","72":"nodular, reliable code, allowing faster employment of solutions, and a more general view of a solution.","73":"going and debugging programs are usually easier, as either the compilers will specify the object that is working incorrectly, or the function an object was assigned to will be easier to identify.  the code itself also looks more organized and is easier to read and will help to avoid redundant coming.  most-programming maintenance is also easier.also, nodules can be refused several times in other programs without too much haste.   abstraction is the art of breaking down one big problem into smaller, simpler problems and solving them.  any of the smaller problems are shared between unique complex problems, and creating nodules to these solve these smaller repeated problems can save time when you encounter them again.","74":"variable can remain private. the code is easily modified and reliable, as well as easily implements. not to mention easier to read and follow along as an observer.","75":"data abstraction and control... it is possible to isolate elementsfrom other elements a lot easier and prevent tapering of data.","76":"encapsulation - objects use operations without knowing how the operation works.inheritance - cuts redundancy by refusing earlier classes.polymorphism - objects select the correct operation to use in the situation.","77":"they make it easier to refuse and adapt previously written code and they separate complex programs into smaller, easier to understand classes.","78":"existing classes can be refused, program maintenance and purification are easier","79":"existing classes can be fused, program maintenance and purification are easier","80":"the main advantages to object-tormented programming  is data abstraction, easier maintenance, and re-liability.","81":"existing classes can be reusedprogram maintenance and verifications are easy","82":"1- existing classes can be refused- program maintenance and purification are easier ","83":"information can be hidden. it is easier to debut. programming is easier and more manageable. ","84":"existing classes can be refused, program maintenance and purification are easier.","85":"existing classes can be reusedprogram maintenance and purification are easier","86":"well for one encapsulation the values of the variable inside an object are private, unless methods are written to pass into outside of the object. is well as inheritance where each subclass inherit all variable and methods of its super class.  example in the book included obs clock and how obs alarm would still use clock from the first class. ","87":"it function \u2018in main ()\u2019","88":"the function main().","89":"c++ programs begin to execute in the main method.","90":"a c++ program will begin to execute at the main() function.","91":"they begin in the main() function.","92":"ant main()","93":"main method","94":"in the testing phase","95":"it the main function","96":"main","97":" they begin to execute at the function main().","98":"the main method.","99":"it the root","100":"in the main() function.","101":"c++ programs begin execution at main.","102":"in the pain function..?","103":"it the \"main()\" function","104":"the main function.","105":"the function main","106":"after loading the required include statements and libraries, the main method begins the execution.","107":"main function","108":"main","109":"c++ programs begin execution at the main function.","110":"it main","111":"they being to excuse at main","112":"at the main functionint main() {}","113":"c++ programs begin execution at the main function.","114":"in the \"main\" function","115":"within the main function","116":"variable can be a inter or a string in a program.","117":"in programming, a structure that holds data and is unique named by the programme. it holds the data assigned to it until a new value is assigned or the program is finished.","118":"a variable is a location in memory where a value can be stored.","119":" variable is a location in the computer is memory, in which a value can be stored and later can retrieve that value.","120":"a variable is a location in the computer is memory where a value can be stored for use by a program. each variable has a name, a value, a type and a size.","121":"a named object that can hold a numerical or letter value","122":"it is a symbol or name for a value\/number. example: 'a_used_number' can stand for any given number, and the programme can refer to that number by using the variable name.","123":"a variable is a location in the computers memory where a value can be stored for use by a program","124":" -in identified that holds a location in memory.","125":"a block of memory that holds a specific type of data","126":"  it is a location in the computer is memory where it can be stored for use by a program.","127":"a location in memory where value can be stored.","128":"a value\/word that can assume any of a set of values","129":"a pointer to a location in memory.","130":"a variable is the memory address for a specific type of stored data, or from a mathematical perspective, a symbol representing a fixed definition with changing values.","131":"a variable is a value that is subject to change in a computer is memory that can be used by programs.  programs can change the value of the variable and recall it later or act on it directly.","132":"a symbol that stands in for a value that may or may not change depending on the program. ","133":"a slaveholder to hold information used in the program...for example:in can hold: 1, 2, 3, 4, 68, 72, 256, etc.float can hold: 1.54, 55.55, 1.24, 5.657, 8.8123, et.chair can hold: a, b, c, d, e, f, !, 4, 5, 6, p, etc.","134":"a stored value used by the program","135":"a way to store different values into the program, such as numbers, words, letters, etc.","136":"in object with a location in memory where value can be stored","137":"location in memory where a value can be stored","138":"a variable is an object where data is stored.","139":"vocation in memory where a value can be stored.","140":"it is a location in memory where value can be stored","141":"a variable is the location in a computer is memory where a value can be stored for use by a program.","142":"a variable is a location in a computers memory where a value can be stored for use by a program.","143":"a location in memory where data can be stored and retrieved","144":"is a method or identified i would say,  we use to bind a data object to memory location; which is then stored in a location that can be accessed when and manipulated later when the variable name is called. ","145":"they can be declared right before they are used, but it is a good practice to declare them at the beginning of the program and label what they are food.","146":"in the function main() before using the variable.","147":"local variable are declared inside the method or function they will be used in at the beginning of the method. global variable are declared outside of any function or method, generally before functions are defined.","148":"variable are declared where ever it is defined either inside a block locally or outside a block locally.","149":"variable are declared before they are actually used. they can be declared before main() to use locally","150":"for good programming practice they should be declared before main(), but should at least be declared before they are used.","151":"they can be declared locally just before the main method (but also outside of it)... or variable can be subject to only the method they are scope within, but would still be declared at the beginning of that method (but inside of it).","152":"local variable are declared inside the method while global variable are declared in the body.","153":" -any where in the main function.","154":"locally for an entire program, and locally for individual functions (including for statements)","155":" they are usually declared at the beginning before they can be used in the program. they always contain a name and a data type.","156":"inside the method.","157":"at the top","158":"global variable are declared in the body of the code. local variable are declared in the function they are to be used (unless the function is being passed a variable). variable should always be declared before use.","159":"variable are usually declared at the beginning of a module of c++ code.","160":"in the main function, usually at the top of code.they can be declared almost anywhere, but must be declared before the code can use or act upon them.","161":"in the very beginning of the program. before the main() starts. ","162":"in the declaration of functions, for statements, and while statements.in the body of of, for, while, do while, statements, in namespaces, leaders, etc  ( almost anywhere. )anywhere in the program, as long as it is on it is own line.","163":"after declaration of the variable is data type.","164":"anywhere in the code, can be at the top, or in the middle of the code, or anywhere.","165":"before they are used.","166":"anywhere in the same scope before they are used","167":"variable can be declared in classes and methods.","168":"inside the function scope and outside of the function scope in case of global variable","169":"global variable are declared in the main functionlocal variable are declared in any other function","170":"variable are usually declared at the very beginning of a c++ program, but can be declared any in the program as long as they appear before they are called upon.","171":"variable are declared in the main function, before any operation is attempted with the variable.","172":"anywhere, but where you declare them depends on where you want them to be accessible (their scope)","173":"it depends if it\u2019s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc. which obviously doesn\u2019t need to be declared outside the variable seeing how it is used for the function or block its being called for. ","174":"the \u201cdo\u201d statement first evaluate the condition and then executed the lines of code in the statement 0 or more times.\tthe \u201cdo while\u201d statement executed the lines of code and then it evaluate the condition.","175":"do...while statements evaluate whether or not to loop after running the block contained within it at least once. to the main difference is that while statements have a possibility of never being used. to ... while statements on the other hand are always run at least once before evaluation whether to run again.","176":"the main difference between a while and a do...while loop is that the do...while loop always cycle through the loop at least once, but the while loop does not always do so.","177":"while loop used to execute a block of code as long as some condition is true.  a do...while loop used to execute a block of code as long as some condition is satisfied.  the difference between while and do...while is while loop tests its condition before the execution of its contents and the do...while loop tests its condition after the execution of its contents at least once.","178":"the termination condition of a do...while statement is usually at the end of the loop so it will run at least once. is for the while statement, if the condition is false to begin with, then the loop will never run.","179":"a while loop will check the statement to make sure it is true before executing. a do while loop will execute before checking the statement to see if it should run again.","180":"a while statement will test the condition of the while loop first - there is a chance the loop will never run. a do...while loop will always run once, and then the while test will determine if it will run again.","181":"a do while loop always executed once. a while loop is conditional statement has to be true for it to run.","182":"#name?","183":"while statements will evaluate the statement before executing a cycle of the loop, including the first cycle, meaning that a while loop will not always execute. a do...while will run evaluate the statement after running through a cycle of the loop, ensuring that the loop always executed at least one time.","184":"  the main difference between a do and a do...while statement is in a do...while statement is the statements in a do block are always executed least once.  the while statement will only execute if its condition is true.","185":"the loop of a do...while statement always executed once.","186":"a while statement will only process if the statement is met, while a do...while will always process once, then only continue if the statement is met.","187":"to ...while runs the embedded code at least once, the do command does not necessarily","188":"while tests for true first before running, do...while runs once first before checking.","189":"a do...while statement is body always executed at least once.  there as a while statement will not execute at all unless the condition for the while is true.","190":"the statements within the block of the do while loop will always be executed at least once regardless of the conditions. whereas the while loops may never be executed if the conditions are not met. ","191":"a do... while loop will always run through once, while an while loopperforms a test before running through the loop.","192":"a while statement tests the condition before it can start.a do...while statement loops through once before the condition is tested.","193":"a while loop terminates at the beginning of the loop, a do\/while terminates at the end of the loop.","194":"the loop body always executed at least once","195":"while loop evaluate its expression at the top of its loop and decides if it needs to execute, and the do-while always executed at least once and then evaluate its expression at the bottom of its loop.","196":"a do...while statement will always execute the \"do\" piece of code at least once before checking the condition. a while statement will always check the condition first.","197":"a do-while passes least 1 time before checking the condition, however, a while would fail to enter the loop if the condition fails in its first place.","198":"a while loop checks if the condition is true or not first, if it was true, it excuses the statement.a do.. while loop executed the statement before it checks the condition. if the condition was true it would excuse the statement again. so a do...while loop would excuse the statement least once.","199":"of answer","200":"a do...while loop will always execute least once, a while loop may never execute depending on the conditions.","201":"a while loop is pre-check (it checks the condition statement before it executed the code within the while block)a do while loop is post-check (it checks the condition after the block executed, it runs at least once no matter what the condition statement is)","202":"))     that is the main difference between a while and a do...while statement?the do while construct consists of a block of code and a condition. first, the code within the block is executed, and then the condition is evacuated, this is done until it is prove false. the difference between the while loop is it tests the condition before the code within the block is executed.","203":"for us it is usually a set, get, and displaymessge or other messages that tell you what properties a class has but does not reveal its implementation. you could have anything you want in your own class definition.","204":"the attributes of said class. also whether or not it is a subclass. also whether it is public private or protected.","205":"information telling the compilers what data members and member functions belong to the class.","206":"since class is user defined, the body of the declaration can contain members, that can be either data or function declarations, and rationally access specified.  example for specified would be public, private, and protected.  there is the eyford glass and the glass body is enclosed with brackets ({}). ","207":"in object and data.","208":"it is specific class name, includes only information defined by that class... implementation details... etc.","209":"data members and member functions.","210":"a class definition usually contains the function and its data members","211":"data members and member functions","212":"member functions","213":"member functions and data members belonging to the class.","214":"a public and private area that includes the functions and variable that are used in the class","215":"the eyford class followed by they class name, on the inside you declare public and private declarations of your class","216":"a class definition typically includes function definitions.","217":"it begins with glass, followed by the class name, then usually a construction, data members and member functions that delineates the class is included in any class is definition.","218":"the data and methods ","219":"a construction, functions, and variable that are accessible to by that class, and possibly other classes depending on how they are done.","220":"member functions and data members.","221":"public section and private section, and there must be a semicolon to set the end","222":"member functions and data members","223":"data members and member functions","224":"data members and member functions","225":"the class name and its public data types such as contractors, methods, functions.","226":"a construction and several data members, and at least one public data member or method","227":"class name, two curly prenthesis, public and private","228":"data members and member functions","229":"data and functions","230":"functions and data members that belong to the class","231":"class variable, function definitions for the class","232":"a class is an expanded concept of a data structure, it holds both the data and the functions being executed ","233":" data members are the data components of a particular class.  a member function are the sanctioning components of the class.","234":" a field variable is a variable that is declared as a member of a class. a local variable is variable that declared local to a method.","235":"data members are declared inside the class, but outside of any member functions. unlike with local variable, each object of the class keeps its own copy of the data members stored in memory.","236":"data member are variable that represent an attribute in a class definition.  local variable declared in a function body cannot be used outside of that function body.  when a function terminates the values of its local variable are lost.","237":"a local variable cannot be accessed outside the function in which it is declared. data members normally are private. variable of functions declared private are accessible only to member functions of the class in which they are declared.","238":"a data member is part of a c++ class or structure that stores data of a certain type... a local variable inside a member function is only available inside that function, and can be used to derive a desired outcome.","239":"a local variable can only be accessed within the scope of its declaration.","240":"data members are the attributes of the function and can be used outside the function.local variable can not be used outside the function and the value is lost after the function terminates.","241":"data members are permanent attributes of the class, local variable inside a member function are lost when the scope of the member function ends.","242":"data members are declared in a class definition but outside the bodies of a class is member-function definitions. local variable are declared in a function definition is body","243":"a data member is locally accessible, while a local variable is only accessible inside the member function.","244":"a variable inside a member function can only be accessed inside that member and a data member can be accessed throughout the program.","245":"local variable are used only within the scope of its declaration","246":"a data member is a more general term describing all objects instantiated within a member function.  \"local\" in local variable refers more to the scope of a variable, which may be located in anything from a control structure to a class.  local variable whose scope are in a member function are the same as data members of member functions.","247":"a data member exists permanently in that program is memory as long as it is run.a local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run.","248":"local variable can only be used within the function, where as data members can be set to public access and can be used throughout","249":"the local variable is lost once it exist the block of code, while the data member is not.","250":"very member function can access and modify a data member.a local variable can only be used from the line of declaration to the next closing } before it is lost from memory.","251":"data member is accessible to all functions in the class, where local variable is only available to the member function and value is lost when function closes","252":"data members are variable that are declared inside the class definition but outside of the bodies of the class member functions. local variable can only be used within the function declaration.","253":"the data member can be accessed outside of the class, whereas the local variable cannot.","254":"local variable cannot be used outside of that function body. when a function terminates the values of its local variable are lost. there as data members are variable in a class definition, and they exist throughout the life of the object.","255":"a local variable in a member function has to be static. a data member can change its value freely.","256":"a local variable is only unable within the function it is defined, whereas a data member is available to any method within its class","257":"variable declared in a function definition is body cannot be used outside of that function.data members accessible only to member function of that class.","258":"data members local variable are declared in a function definition\u2019s body.they cannot be used outside of that function body.when a function terminates, the values of its local variable are lost.","259":"local variable is only available in the function.","260":"local variable are accessed inside member functions only while data members can be accessed throughout the class","261":"a data member is accessible anywhere in the class, while i local variable in a member function is only accessible in that particular function, and is freed after the function exist.","262":"a data member is encapsulated within a class or object,  it is static and can be shared by all instances of that class. however local variable is are only used from the function or block in which it is declared and not the whole class. other wise they would be called global variable. ","263":" a construction initiatives an object or objects of a class.  a function of a class perform a task such as display a line of text or do some kind of mathematical operations.","264":"all contractors are functions but not all functions are contractors. also functions can have nearly infinite purposes, while contractors always create an instance of whichever class you are using. you can change how a construction does something but not what it does. with functions you can change not only the how but also the what.","265":"unlike regular functions, contractors are only used to initiative an object\u2019s data when it is created. constructors must also be given the same name as the class and cannot return any values.","266":"a construction typically used to intialize data members and allocate resources, for instance memory, files, etc.  also a construction cannot return values.  functions are operations that maybe locally defined.","267":"constructors cannot return values, so they cannot specify a return type. normally, contractors are declared public.","268":"a construction is a method that starts new instances of a class. (example: employee employees(parameter) starts a new instance of object of type employee). a function is simply a module w\/in a program that complete its single desired task.","269":"a construction is called whenever a new object of that class is made.","270":"a construction does not return any date and has no return type.functions can return date or not return data can have a return type.","271":"a construction is automatically called whenever an instance of a class is created, a function must be explicitly called by the user. ","272":"contractors cannot return values, so they cannot specify a return type like functions can.","273":"a construction is a function used to initiative an object is data when it is created.","274":"a construction initiatives everything so that nothing is left empty or with random varioubles and a function modified those variable with data.","275":"a construction initialized values at the execution of its instantiation. it provides default values.","276":"a construction sets up the default values of variable when an object is instantiated, whereas a function allows interaction with that object.","277":"a construction is used to create an object that can be employed in the main function of a program.  his may or may not execute code along with it.a function is a set of code that executed when called, but does not create a new object.","278":"a construction initiatives data members but the functions actually perform tasks. constructors can return values either. ","279":"a construction does not need a type, and it is used to initiative the variable.","280":"constructors do not have a return type.","281":"construction creates the class object into memory where functions perform actions against that object","282":"contractors cannot return values","283":"a construction initiatives values and a function usual perform some sort of operation.","284":"a construction is a function used to initiative an object is data when it is created. it is call is made implicitly when the object is created and must be defined with the same name as the class. instructor also cannot return a value like a function can.","285":"a construction is used to create an instance of a class and has the same name as that class. a function cannot have the same name as a class and computer data.","286":"a construction is a function that initiatives a class instance, a function perform whatever task it is written for","287":"a construction cannot return values, not even void, but function get a return value.","288":"a construction cannot return values, its not even void. it is used to initiative an object is data when it is created.whereas, a function is created to do a specific task, and it can return values.","289":"a construction initiatives an object. a function is part of an object.","290":"contractors initiative the data that is then used in the calculations of a function","291":"a construction is called when the class is created, a function can be called any time.","292":"construction is a special block of statements called when an object is created, either when it is declared ecstatically or constructed on the stick. however a function is a portion of code within a larger program, which perform a specific task and independent to the rest of the code. ","293":"the compilers creates a default construction when we do not define one in our class file","294":"during compilation","295":"when the class does not explicitly include a construction.","296":"when no parameter are set is when a default construction is used.  ","297":"when a class does not explicitly include a construction.","298":"when there are no arguments passed.","299":"when there is not one already for a specific class","300":"when it the programs compilers","301":"when a construction is not provided by the programme of the class","302":"in any class that does not explicitly include a construction.","303":"before the main function of the code.","304":"whenever you dont specific your own","305":"when non are provided","306":"c++ will create a default construction when no other construction is present.","307":"when no construction was specified in the construction is class, but the class is instantiated in a program.","308":"when no construction exists when one is needed, a parameterless default construction is declared.","309":"the compilers creates this automatically for you, unless you specifically create one.","310":"in any class that does not explicitly include a construction.","311":"when no user-defined construction exists","312":"of a class does not explicitly include a construction, the compilers creates one.","313":"when you do not provide your own construction.","314":"when a class does not explicitly include a construction.","315":"c++ creates a default construction during compilation if one is not provided.","316":"when a class does not explicitly include a construction","317":"the compilers will provide one when class does not explicitly include a conductor.","318":"when the programme does not explicitly include a construction","319":"when one is not explicitly stated.","320":"when one is not explicitly included by a class","321":"when you dont specify any contractors.","322":"at the very beginning when you run a complied, matter a fact in c++ it generate its own default construction for the class provided if no other contractors have been provided by user","323":"must one per class.","324":"is many as you want so long as they have different parameter.","325":"there is no limit to the number of contractors in a class because like functions, contractors can be overloaded.","326":"it depends what type of class is being defined.  typically you would have a construction call for each object.","327":"in c++, the construction can be overloaded in that there can be more than one construction for a class, each having different parameter.","328":"1","329":"any number you want","330":"one","331":"by default just one, but they may be overloaded to create as many contractors as necessary","332":"as many as you want","333":"is many as you want, with different parameter.","334":"infinite","335":"as many as you need","336":"is many as are needed, depending on how many variable one wishes to directly modify or leave as default when instantiating an object.","337":"a very large amount of contractors can be created for any given class through overlooking.  when two contractors with a different type or number of parameter are created, they are said to be overloaded, and c++ can recognize which construction to use based on the type of the variable that are passed\/returned.","338":"it depends on the number of objects. each object should have a construction.","339":"theoretically unlimited, as long as they are defined by the programme.","340":"is many as needed.","341":"as many as wanted\/needed","342":"several","343":"one","344":"one","345":"there can be infinite contractors as long as the signature is different.","346":"that depends on the number of data members in the class","347":"one","348":"you can overcoat contractors as you need","349":"is many as the programme wants to create. ","350":"one","351":"as many as you want, as long as they each have a unique argument list","352":"as many as the user decides to use. ","353":" a function definition does not require any additional information that needs to be passed inside its parenthesis to execute. while a definition prototype requires more than one parameter to be passed in order to complete its task.","354":"the function prototype is where the programme declares that he\/she is using a function other than main( ). his is like declaring a variable, the programme knows that he\/she will be using in the future, but has yet to say where they are going to use it, or how. his is answers the question who, it gives the function a name and character. the function prototype, by common practice is placed at the beginning of the program after the #includes and before main( ).the function definition is the guns of the function. his is where the programme decides what the function is going to do and tells it how to do it. it takes whatever information it is given and perform the operations. it works sort of like the brain, the brain takes in input and based upon that input perform in some way producing an output. the function definition is placed outside of main( ) and any other functions. a function is its own entity and should be thought of as such.","355":"a function prototype tells the compilers the function name, return type and the number and type of parameter without revealing the implementation contained in the function definition.","356":"function prototype is a declaration.  function definitions (w\/multiple parameter) often require more than one piece of information. to perform their tasks.","357":"a function prototype is a declaration of a function that tells the compilers the function is name, its return type and the types of its parameter.","358":"a prototype shows only return types and necessary parameter. the definition includes names for those parameter and defines what the object is actually capable of doing.","359":"prototype only tells the user what data types go into a function and what type is returned.","360":"function prototype is located in the .h file and only contains the access function name and parameter type.function definition contains the code for the function to perform its activity.","361":"a function prototype is used to reference the compilers to a function that will be defined later on, a function definition is the actual function itself, complete with return type, parameter, etc...","362":"a function prototype describes a class is public interface without revealing the class is member function implementation","363":"function definitions are just that, the definition. the prototype is what the compilers uses to check that calls to function are correct.","364":"a prototype does not include any actual code where the function has all the code that is executed in the program.","365":"a prototype declares what will be used in the program and the definition ","366":"a function prototype lays out the name, return type, and the number and types of parameter the function expects to receive in a certain order.  the details for function prototypes are in the function definition.","367":"a function definition is the code that defines the function placed in the {} brackets that determines that function is operation.a function prototype shows the function is public interface without exposing implementation.  it shows name, return type and type of parameter.","368":"a function prototype is just a declaration of the function existing, and can be used as an actual function. a function has to be created with a definition within to tell the compilers what the function does.","369":"the prototype creates a framework to call the function definition. while a function definition is where the function is actually programme out and created into a final product.","370":"a function prototype describes the class is public interface without providing how the function works.a function definition contains the inner workings of the function.","371":"prototype states all functions in that class before compilation, where the definition actually holds the source for the functions","372":"function prototypes tell the compilers the function names, its return type, and the types of its parameter where as, function definitions actually implement the member functions.","373":"a function prototype just specified parameter.  a function definition includes parameter and a code body.","374":"function prototypes describe the class is public interface","375":"a prototype only declares name, return type, and input type.a definition also defines the scope, variable, process, and return function ","376":"a function prototype simply declares the functions parameter, the function definition includes any necessary variable and the function is actual code","377":"a function prototype is a declaration of a function , while function definition specified what a function does","378":"in a function prototype you include the return type, the name of the function, and its parameter if any are needed.in a function definition you write the code of what the function will do. ","379":"a function definition contains all the code for a function to work. a function prototype just shows the output, input and function name.","380":"function prototype describe the class is public interface without revealing the class is member function implementation,  function definitions show what implementation are being done","381":"a function prototype only names the function, its return type, and it is argument list, while a definition defines the above as well as what the function actually does.","382":"function prototype describes a classes interface without revising whatever is inside as for the function definition cannot do that. ","383":"the role of a header file list all the functions a class can do while hiding the inner workings of its functions","384":"the main role of header file is it is used to share information among various files.","385":"leader files separate files in which classes are defined and allow the compilers to recognize classes when used elsewhere.","386":"to","387":"a header file consists of \"reliable\" source code such as a class in a file that by convention has a .h filename extension. his differs from .pp files that contain \"source-code.\"","388":"to provide information about the contents of a library. it includes the definition of classes, declarations of functions, data types, and constant.","389":"the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function.","390":"leader files declares the class member functions.","391":"a header file allows for the separation of declaration and implementation into separate files. ","392":"the header file has access to the c++ standard library and makes certain classes like class string work.","393":"\u201cinstruct\u201d the compilers on how to interface with library and user-written components.","394":"create a common area to contain reliable functions.","395":"to declare the functions being used in the classes","396":"#include \"hat.h\"  allows the use of the hat container, so called from the act of pulling names from a hat.  the header file for hat includes functions for storage and retrieved of it is contents, mainly put(), week(), and pull().","397":"to hold reliable content or nodules separate from the actual  source-code file that can be easily reference and employed for different programs.","398":"a header file is a file used to store a list of promote functions and data members.","399":"a header file is a cross communication method between source files, to help limit the size of each individual program. without header files a program will be 1 large lump of code and thus fairly hard to debut and traverse.","400":"it contains reliable source code for use by other classes.","401":"to separate the source code from the main function, allows the methods\/classes to be included in the program without direct coming. allows re liability.","402":"leader files have reliable source code in a file that a program can use. ","403":"to hide the definition and details of a class.  also to help reliability of the main c++ file.","404":"to allow the compilers to recognize the classes when used elsewhere.","405":"a header file declares a class, its data, and functions available through that class.","406":"header files contain code which can be used in multiple files","407":"allow compilers to recognize the classes when used elsewhere","408":"allow compilers to recognize the classes when used elsewhere","409":"to promote function reusuablitly","410":"class definitions are placed here","411":"a header file usually contains class and\/or function prototypes.","412":"contains all the standard c++ library is i.e. string "},"keyPunct":{"0":"to simulate the behaviour of portions of the desired software product \n","1":"to simulate the behaviour of portions of the desired software product \n","2":"to simulate the behaviour of portions of the desired software product \n","3":"to simulate the behaviour of portions of the desired software product \n","4":"to simulate the behaviour of portions of the desired software product \n","5":"to simulate the behaviour of portions of the desired software product \n","6":"to simulate the behaviour of portions of the desired software product \n","7":"to simulate the behaviour of portions of the desired software product \n","8":"to simulate the behaviour of portions of the desired software product \n","9":"to simulate the behaviour of portions of the desired software product \n","10":"to simulate the behaviour of portions of the desired software product \n","11":"to simulate the behaviour of portions of the desired software product \n","12":"to simulate the behaviour of portions of the desired software product \n","13":"to simulate the behaviour of portions of the desired software product \n","14":"to simulate the behaviour of portions of the desired software product \n","15":"to simulate the behaviour of portions of the desired software product \n","16":"to simulate the behaviour of portions of the desired software product \n","17":"to simulate the behaviour of portions of the desired software product \n","18":"to simulate the behaviour of portions of the desired software product \n","19":"to simulate the behaviour of portions of the desired software product \n","20":"to simulate the behaviour of portions of the desired software product \n","21":"to simulate the behaviour of portions of the desired software product \n","22":"to simulate the behaviour of portions of the desired software product \n","23":"to simulate the behaviour of portions of the desired software product \n","24":"to simulate the behaviour of portions of the desired software product \n","25":"to simulate the behaviour of portions of the desired software product \n","26":"to simulate the behaviour of portions of the desired software product \n","27":"to simulate the behaviour of portions of the desired software product \n","28":"to simulate the behaviour of portions of the desired software product \n","29":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","30":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","31":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","32":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","33":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","34":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","35":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","36":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","37":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","38":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","39":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","40":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","41":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","42":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","43":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","44":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","45":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","46":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","47":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","48":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","49":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","50":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","51":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","52":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","53":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","54":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","55":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","56":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","57":"the testing stage can influence both the coming stage phase 5 and the solution refinement stage phase 7 ","58":"abstraction and reliability","59":"abstraction and reliability","60":"abstraction and reliability","61":"abstraction and reliability","62":"abstraction and reliability","63":"abstraction and reliability","64":"abstraction and reliability","65":"abstraction and reliability","66":"abstraction and reliability","67":"abstraction and reliability","68":"abstraction and reliability","69":"abstraction and reliability","70":"abstraction and reliability","71":"abstraction and reliability","72":"abstraction and reliability","73":"abstraction and reliability","74":"abstraction and reliability","75":"abstraction and reliability","76":"abstraction and reliability","77":"abstraction and reliability","78":"abstraction and reliability","79":"abstraction and reliability","80":"abstraction and reliability","81":"abstraction and reliability","82":"abstraction and reliability","83":"abstraction and reliability","84":"abstraction and reliability","85":"abstraction and reliability","86":"abstraction and reliability","87":"it the main function","88":"it the main function","89":"it the main function","90":"it the main function","91":"it the main function","92":"it the main function","93":"it the main function","94":"it the main function","95":"it the main function","96":"it the main function","97":"it the main function","98":"it the main function","99":"it the main function","100":"it the main function","101":"it the main function","102":"it the main function","103":"it the main function","104":"it the main function","105":"it the main function","106":"it the main function","107":"it the main function","108":"it the main function","109":"it the main function","110":"it the main function","111":"it the main function","112":"it the main function","113":"it the main function","114":"it the main function","115":"it the main function","116":"a location in memory that can store a value","117":"a location in memory that can store a value","118":"a location in memory that can store a value","119":"a location in memory that can store a value","120":"a location in memory that can store a value","121":"a location in memory that can store a value","122":"a location in memory that can store a value","123":"a location in memory that can store a value","124":"a location in memory that can store a value","125":"a location in memory that can store a value","126":"a location in memory that can store a value","127":"a location in memory that can store a value","128":"a location in memory that can store a value","129":"a location in memory that can store a value","130":"a location in memory that can store a value","131":"a location in memory that can store a value","132":"a location in memory that can store a value","133":"a location in memory that can store a value","134":"a location in memory that can store a value","135":"a location in memory that can store a value","136":"a location in memory that can store a value","137":"a location in memory that can store a value","138":"a location in memory that can store a value","139":"a location in memory that can store a value","140":"a location in memory that can store a value","141":"a location in memory that can store a value","142":"a location in memory that can store a value","143":"a location in memory that can store a value","144":"a location in memory that can store a value","145":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","146":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","147":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","148":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","149":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","150":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","151":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","152":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","153":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","154":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","155":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","156":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","157":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","158":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","159":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","160":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","161":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","162":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","163":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","164":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","165":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","166":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","167":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","168":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","169":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","170":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","171":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","172":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","173":"variable can be declared anywhere in a program they can be declared inside a function local variable or outside the functions global variable","174":"the block inside a dowhile statement will execute at least once","175":"the block inside a dowhile statement will execute at least once","176":"the block inside a dowhile statement will execute at least once","177":"the block inside a dowhile statement will execute at least once","178":"the block inside a dowhile statement will execute at least once","179":"the block inside a dowhile statement will execute at least once","180":"the block inside a dowhile statement will execute at least once","181":"the block inside a dowhile statement will execute at least once","182":"the block inside a dowhile statement will execute at least once","183":"the block inside a dowhile statement will execute at least once","184":"the block inside a dowhile statement will execute at least once","185":"the block inside a dowhile statement will execute at least once","186":"the block inside a dowhile statement will execute at least once","187":"the block inside a dowhile statement will execute at least once","188":"the block inside a dowhile statement will execute at least once","189":"the block inside a dowhile statement will execute at least once","190":"the block inside a dowhile statement will execute at least once","191":"the block inside a dowhile statement will execute at least once","192":"the block inside a dowhile statement will execute at least once","193":"the block inside a dowhile statement will execute at least once","194":"the block inside a dowhile statement will execute at least once","195":"the block inside a dowhile statement will execute at least once","196":"the block inside a dowhile statement will execute at least once","197":"the block inside a dowhile statement will execute at least once","198":"the block inside a dowhile statement will execute at least once","199":"the block inside a dowhile statement will execute at least once","200":"the block inside a dowhile statement will execute at least once","201":"the block inside a dowhile statement will execute at least once","202":"the block inside a dowhile statement will execute at least once","203":"data members attributes and member functions","204":"data members attributes and member functions","205":"data members attributes and member functions","206":"data members attributes and member functions","207":"data members attributes and member functions","208":"data members attributes and member functions","209":"data members attributes and member functions","210":"data members attributes and member functions","211":"data members attributes and member functions","212":"data members attributes and member functions","213":"data members attributes and member functions","214":"data members attributes and member functions","215":"data members attributes and member functions","216":"data members attributes and member functions","217":"data members attributes and member functions","218":"data members attributes and member functions","219":"data members attributes and member functions","220":"data members attributes and member functions","221":"data members attributes and member functions","222":"data members attributes and member functions","223":"data members attributes and member functions","224":"data members attributes and member functions","225":"data members attributes and member functions","226":"data members attributes and member functions","227":"data members attributes and member functions","228":"data members attributes and member functions","229":"data members attributes and member functions","230":"data members attributes and member functions","231":"data members attributes and member functions","232":"data members attributes and member functions","233":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","234":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","235":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","236":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","237":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","238":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","239":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","240":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","241":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","242":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","243":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","244":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","245":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","246":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","247":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","248":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","249":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","250":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","251":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","252":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","253":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","254":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","255":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","256":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","257":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","258":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","259":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","260":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","261":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","262":"data members can be accessed from any member functions inside the class definition local variable can only be accessed inside the member function that defines them","263":"a construction is called whenever an object is created whereas a function needs to be ","264":"a construction is called whenever an object is created whereas a function needs to be ","265":"a construction is called whenever an object is created whereas a function needs to be ","266":"a construction is called whenever an object is created whereas a function needs to be ","267":"a construction is called whenever an object is created whereas a function needs to be ","268":"a construction is called whenever an object is created whereas a function needs to be ","269":"a construction is called whenever an object is created whereas a function needs to be ","270":"a construction is called whenever an object is created whereas a function needs to be ","271":"a construction is called whenever an object is created whereas a function needs to be ","272":"a construction is called whenever an object is created whereas a function needs to be ","273":"a construction is called whenever an object is created whereas a function needs to be ","274":"a construction is called whenever an object is created whereas a function needs to be ","275":"a construction is called whenever an object is created whereas a function needs to be ","276":"a construction is called whenever an object is created whereas a function needs to be ","277":"a construction is called whenever an object is created whereas a function needs to be ","278":"a construction is called whenever an object is created whereas a function needs to be ","279":"a construction is called whenever an object is created whereas a function needs to be ","280":"a construction is called whenever an object is created whereas a function needs to be ","281":"a construction is called whenever an object is created whereas a function needs to be ","282":"a construction is called whenever an object is created whereas a function needs to be ","283":"a construction is called whenever an object is created whereas a function needs to be ","284":"a construction is called whenever an object is created whereas a function needs to be ","285":"a construction is called whenever an object is created whereas a function needs to be ","286":"a construction is called whenever an object is created whereas a function needs to be ","287":"a construction is called whenever an object is created whereas a function needs to be ","288":"a construction is called whenever an object is created whereas a function needs to be ","289":"a construction is called whenever an object is created whereas a function needs to be ","290":"a construction is called whenever an object is created whereas a function needs to be ","291":"a construction is called whenever an object is created whereas a function needs to be ","292":"a construction is called whenever an object is created whereas a function needs to be ","293":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","294":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","295":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","296":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","297":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","298":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","299":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","300":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","301":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","302":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","303":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","304":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","305":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","306":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","307":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","308":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","309":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","310":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","311":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","312":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","313":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","314":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","315":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","316":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","317":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","318":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","319":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","320":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","321":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","322":"of no construction is provided the compilers provides one by default of a construction is defined for a class the compilers does not create a default construction\n","323":"unlimited number","324":"unlimited number","325":"unlimited number","326":"unlimited number","327":"unlimited number","328":"unlimited number","329":"unlimited number","330":"unlimited number","331":"unlimited number","332":"unlimited number","333":"unlimited number","334":"unlimited number","335":"unlimited number","336":"unlimited number","337":"unlimited number","338":"unlimited number","339":"unlimited number","340":"unlimited number","341":"unlimited number","342":"unlimited number","343":"unlimited number","344":"unlimited number","345":"unlimited number","346":"unlimited number","347":"unlimited number","348":"unlimited number","349":"unlimited number","350":"unlimited number","351":"unlimited number","352":"unlimited number","353":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","354":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","355":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","356":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","357":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","358":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","359":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","360":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","361":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","362":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","363":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","364":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","365":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","366":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","367":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","368":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","369":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","370":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","371":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","372":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","373":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","374":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","375":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","376":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","377":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","378":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","379":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","380":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","381":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","382":"a function prototype includes the function signature ie the name of the function the return type and the parameter type the function definition includes the actual body of the function ","383":"to store a class interface including data members and member function prototypes","384":"to store a class interface including data members and member function prototypes","385":"to store a class interface including data members and member function prototypes","386":"to store a class interface including data members and member function prototypes","387":"to store a class interface including data members and member function prototypes","388":"to store a class interface including data members and member function prototypes","389":"to store a class interface including data members and member function prototypes","390":"to store a class interface including data members and member function prototypes","391":"to store a class interface including data members and member function prototypes","392":"to store a class interface including data members and member function prototypes","393":"to store a class interface including data members and member function prototypes","394":"to store a class interface including data members and member function prototypes","395":"to store a class interface including data members and member function prototypes","396":"to store a class interface including data members and member function prototypes","397":"to store a class interface including data members and member function prototypes","398":"to store a class interface including data members and member function prototypes","399":"to store a class interface including data members and member function prototypes","400":"to store a class interface including data members and member function prototypes","401":"to store a class interface including data members and member function prototypes","402":"to store a class interface including data members and member function prototypes","403":"to store a class interface including data members and member function prototypes","404":"to store a class interface including data members and member function prototypes","405":"to store a class interface including data members and member function prototypes","406":"to store a class interface including data members and member function prototypes","407":"to store a class interface including data members and member function prototypes","408":"to store a class interface including data members and member function prototypes","409":"to store a class interface including data members and member function prototypes","410":"to store a class interface including data members and member function prototypes","411":"to store a class interface including data members and member function prototypes","412":"to store a class interface including data members and member function prototypes"},"studentPunct":{"0":"high risk problems are address in the prototype program to make sure that the program is feasible  a prototype may also be used to show a company that the software can be possibly programme","1":"to simulate portions of the desired final product with a quick and easy program that does a small specific job it is a way to help see what the problem is and how you may solve it in the final project","2":"a prototype program simulates the behavior of portions of the desired software product to allow for error checking","3":"defined in the specification phase a prototype stimulated the behavior of portions of the desired software product  meaning the role of a prototype is a temporary solution until the program itself is refined to be used extensively in problem solving","4":"it is used to let the users have a first idea of the completed program and allow the clients to evaluate the program his can generate much feedback including software specification and project estimation of the total project","5":"to find problem and errors in a program before it is penalized","6":"to address major issues in the creation of the program there is no way to account for all possible bags in the program but it is possible to prove the program is tangible ","7":"you can break the whole program into prototype programs to simulate parts of the final program","8":"to provide an example or model of how the finished program should perform provides foresight of some of the challenges that would be encountered provides opportunity to introduce changes to the finished program","9":"simulating the behavior of only a portion of the desired software product","10":"  a program that stimulated the behavior of portions of the desired software product","11":"a program that simulates the behavior of portions of the desired software product","12":"to lay out the basis and give you a starting point in the actual problem solving","13":"to simulate problem solving for parts of the problem","14":"a prototype program provides a basic groundwork from which to further enhance and improve a solution to a problem","15":"a prototype program is a part of the specification phase of software problem solving  it is employed to illustrate how the key problem or problems will be solved in a program and sometimes serves as a base program to expand upon","16":"program that simulates the behavior of portions of the desired software product","17":"it provides a limited proof of concept to verify with the client before actually programming the whole application","18":"it tests the main function of the program while leaving out the finer details","19":"to get early feedback from users in early stages of development  to show users a first idea of what the program will dolook like  to make sure the program will meet requirements before intense programming begins","20":"it simulates the behavior of portions of the desired software product","21":"it simulates the behavior of portions of the desired software product","22":"a prototype program is used in problem solving to collect data for the problem","23":"to ease the understanding of problem under discussion and to ease the understanding of the program itself","24":"it simulates the behavior of portions of the desired software product","25":"the role of a prototype program is to help spot key problems that may arise during the actual programming ","26":"the prototype program gives a general idea of what the end product will do without the time and effort to write out the entire program","27":"to show that a certain part of the program works as it is supposed to","28":"prototype programming is an approach to programming that enables one to take an organized approach to developing an effective program with minimal errors and a strategic pattern when solving a problem ie book gave an example of a costume withdrawing money from a bank the approach that was taking on a pseudo code level during the ooadesign ll before proceeding into creating a solution ","29":"defining and possibly the design if the testing phase reveals problems in the design production can be affected if the program is unfordable in its current form which will lead to a later production time than originally estimated also affects coming because after testing you may need to write the code for the program to remove errors","30":"the implementation phase and the maintenance phase are effected","31":"purification coming refining the solution and maintenance are all influenced by the testing stage","32":"in rup the stages in the software life cycle are influenced by the testing stage iselaboration phase refined project vision operative development of core system development of system requirements more accurate time and cost estimatesconstruction phase operative development of remaining systemtransition phasetesting and employment of the system","33":"defining the solution production and maintenance are all influenced by the resting stage ","34":"elaboration construction and transition are all affected by testing","35":"defining production maintenance","36":"defining the solution","37":"purification debugging","38":"defining and going","39":"the second half of the elaboration phase construction phase and the transition phase","40":"the refining step the production step and the maintenance stage ","41":"elaboration construction transition","42":"defining","43":"the testing stage has a direct influence on the final version of a program being as it is the debugging and finalization of a software revision","44":"directly defining coming  because defining is right before the resting phase and going is right after the resting phaseindirectly production maintenance  because defining occurs before these last two stages in the software life cycle","45":"resting refining production and maintenance","46":"depending on how the work is done resting is spread throughout the process as to prevent errors from showing up later on due to lack foresight","47":"elaboration construction and transition","48":"all stages are influenced except setting the program requirements  of a test fails it can change the whole design implementation etc of a program as well as the final outcome","49":"defining production and maintenance","50":"coming and refining","51":"refining production maintenance","52":"removing logical errors testing for valid data random data and actual data","53":"1 specification design risk analysis verification5 coming testing refining production maintenance","54":"defining stage production stage and maintenance stage","55":"resting could affect all parts of the life cycle it could make you go back to specification if it does not test well","56":"coming","57":"the individual components and steps such as  analysis design and implementing code  as well as the entire system are tested for execution of the requirements identified during the analysis stage ie pain output ","58":"modularability the ability to refuse parts of the program later in another program sometimes with completely different goals for the program also it makes it easier to debut code by dividing up the code into classes that each do a specific job and when the program fails at one job you only have one class to debut good for security purposes because it allows you to let someone use a program which sorts lists without having to give them access to the source code so allows you to use inheritance and polymorphism","59":"his type of programming is more flexible making it easier to add and modify the program  it is also a type of a fail safe program you check each individual module  his eliminates redundant code and makes the program easier to read for other programme  when debugging the program it is easier to track down the source of a problem within a module rather than a 2 million line program","60":"the main advantages to objecttormented programming are that existing classes can be refused and program maintenance and purification are easier","61":"the advantages is that oop allows us to build classes of objects  three principles that make up oop areencapsulation objects combine data and operationsinheritance glasses can inherit properties from other classespolymorphism objects can determine appropriate operations at execution time","62":"some advantages are existing classes can be refused and program maintenance and purification are easier to accomplish","63":"object tormented programming allows programme to use an object with classes that can be changed and manipulated while not affecting the entire object at once the classes all hold attributes that affect the object","64":"reusable components extensibility maintainability it reduces large problems into smaller more manageable problems","65":"encapsulationobjects combine data and operationsinheritance classes can inherit properties from other classespolymorphism objects can determine appropriate operations at execution time","66":" easier to deluge  reusability","67":"heliability  and ease of maintenance","68":"  one of the main advantages is you can hide inner details a technique known by encapsulation objects combine the data and operations but you cannot see how it works  another advantage is you can refuse classes that have been defined earlier in the program a method known as inheritance  finally another advantage is objects can determine appropriate operations at execution time a technique known as polymorphism","69":"existing classes can be refused and program maintenance and purification are easier","70":"using different nodules allows for easier debugging","71":"data encapsulation conceptthe use of functions or methods to manipulate data","72":"nodular reliable code allowing faster employment of solutions and a more general view of a solution","73":"going and debugging programs are usually easier as either the compilers will specify the object that is working incorrectly or the function an object was assigned to will be easier to identify  the code itself also looks more organized and is easier to read and will help to avoid redundant coming  mostprogramming maintenance is also easieralso nodules can be refused several times in other programs without too much haste   abstraction is the art of breaking down one big problem into smaller simpler problems and solving them  any of the smaller problems are shared between unique complex problems and creating nodules to these solve these smaller repeated problems can save time when you encounter them again","74":"variable can remain private the code is easily modified and reliable as well as easily implements not to mention easier to read and follow along as an observer","75":"data abstraction and control it is possible to isolate elementsfrom other elements a lot easier and prevent tapering of data","76":"encapsulation  objects use operations without knowing how the operation worksinheritance  cuts redundancy by refusing earlier classespolymorphism  objects select the correct operation to use in the situation","77":"they make it easier to refuse and adapt previously written code and they separate complex programs into smaller easier to understand classes","78":"existing classes can be refused program maintenance and purification are easier","79":"existing classes can be fused program maintenance and purification are easier","80":"the main advantages to objecttormented programming  is data abstraction easier maintenance and reliability","81":"existing classes can be reusedprogram maintenance and verifications are easy","82":"1 existing classes can be refused program maintenance and purification are easier ","83":"information can be hidden it is easier to debut programming is easier and more manageable ","84":"existing classes can be refused program maintenance and purification are easier","85":"existing classes can be reusedprogram maintenance and purification are easier","86":"well for one encapsulation the values of the variable inside an object are private unless methods are written to pass into outside of the object is well as inheritance where each subclass inherit all variable and methods of its super class  example in the book included obs clock and how obs alarm would still use clock from the first class ","87":"it function \u2018in main \u2019","88":"the function main","89":"c programs begin to execute in the main method","90":"a c program will begin to execute at the main function","91":"they begin in the main function","92":"ant main","93":"main method","94":"in the testing phase","95":"it the main function","96":"main","97":" they begin to execute at the function main","98":"the main method","99":"it the root","100":"in the main function","101":"c programs begin execution at main","102":"in the pain function","103":"it the main function","104":"the main function","105":"the function main","106":"after loading the required include statements and libraries the main method begins the execution","107":"main function","108":"main","109":"c programs begin execution at the main function","110":"it main","111":"they being to excuse at main","112":"at the main functionint main ","113":"c programs begin execution at the main function","114":"in the main function","115":"within the main function","116":"variable can be a inter or a string in a program","117":"in programming a structure that holds data and is unique named by the programme it holds the data assigned to it until a new value is assigned or the program is finished","118":"a variable is a location in memory where a value can be stored","119":" variable is a location in the computer is memory in which a value can be stored and later can retrieve that value","120":"a variable is a location in the computer is memory where a value can be stored for use by a program each variable has a name a value a type and a size","121":"a named object that can hold a numerical or letter value","122":"it is a symbol or name for a valuenumber example ausednumber can stand for any given number and the programme can refer to that number by using the variable name","123":"a variable is a location in the computers memory where a value can be stored for use by a program","124":" in identified that holds a location in memory","125":"a block of memory that holds a specific type of data","126":"  it is a location in the computer is memory where it can be stored for use by a program","127":"a location in memory where value can be stored","128":"a valueword that can assume any of a set of values","129":"a pointer to a location in memory","130":"a variable is the memory address for a specific type of stored data or from a mathematical perspective a symbol representing a fixed definition with changing values","131":"a variable is a value that is subject to change in a computer is memory that can be used by programs  programs can change the value of the variable and recall it later or act on it directly","132":"a symbol that stands in for a value that may or may not change depending on the program ","133":"a slaveholder to hold information used in the programfor examplein can hold 1 2 3 4 68 72 256 etcfloat can hold 154 5555 124 5657 88123 etchair can hold a b c d e f  4 5 6 p etc","134":"a stored value used by the program","135":"a way to store different values into the program such as numbers words letters etc","136":"in object with a location in memory where value can be stored","137":"location in memory where a value can be stored","138":"a variable is an object where data is stored","139":"vocation in memory where a value can be stored","140":"it is a location in memory where value can be stored","141":"a variable is the location in a computer is memory where a value can be stored for use by a program","142":"a variable is a location in a computers memory where a value can be stored for use by a program","143":"a location in memory where data can be stored and retrieved","144":"is a method or identified i would say  we use to bind a data object to memory location which is then stored in a location that can be accessed when and manipulated later when the variable name is called ","145":"they can be declared right before they are used but it is a good practice to declare them at the beginning of the program and label what they are food","146":"in the function main before using the variable","147":"local variable are declared inside the method or function they will be used in at the beginning of the method global variable are declared outside of any function or method generally before functions are defined","148":"variable are declared where ever it is defined either inside a block locally or outside a block locally","149":"variable are declared before they are actually used they can be declared before main to use locally","150":"for good programming practice they should be declared before main but should at least be declared before they are used","151":"they can be declared locally just before the main method but also outside of it or variable can be subject to only the method they are scope within but would still be declared at the beginning of that method but inside of it","152":"local variable are declared inside the method while global variable are declared in the body","153":" any where in the main function","154":"locally for an entire program and locally for individual functions including for statements","155":" they are usually declared at the beginning before they can be used in the program they always contain a name and a data type","156":"inside the method","157":"at the top","158":"global variable are declared in the body of the code local variable are declared in the function they are to be used unless the function is being passed a variable variable should always be declared before use","159":"variable are usually declared at the beginning of a module of c code","160":"in the main function usually at the top of codethey can be declared almost anywhere but must be declared before the code can use or act upon them","161":"in the very beginning of the program before the main starts ","162":"in the declaration of functions for statements and while statementsin the body of of for while do while statements in namespaces leaders etc   almost anywhere anywhere in the program as long as it is on it is own line","163":"after declaration of the variable is data type","164":"anywhere in the code can be at the top or in the middle of the code or anywhere","165":"before they are used","166":"anywhere in the same scope before they are used","167":"variable can be declared in classes and methods","168":"inside the function scope and outside of the function scope in case of global variable","169":"global variable are declared in the main functionlocal variable are declared in any other function","170":"variable are usually declared at the very beginning of a c program but can be declared any in the program as long as they appear before they are called upon","171":"variable are declared in the main function before any operation is attempted with the variable","172":"anywhere but where you declare them depends on where you want them to be accessible their scope","173":"it depends if it\u2019s a global then they have to be declared out side the source code to be used in every scope however a local variable is one declared in a local function etc which obviously doesn\u2019t need to be declared outside the variable seeing how it is used for the function or block its being called for ","174":"the \u201cdo\u201d statement first evaluate the condition and then executed the lines of code in the statement 0 or more times\tthe \u201cdo while\u201d statement executed the lines of code and then it evaluate the condition","175":"dowhile statements evaluate whether or not to loop after running the block contained within it at least once to the main difference is that while statements have a possibility of never being used to  while statements on the other hand are always run at least once before evaluation whether to run again","176":"the main difference between a while and a dowhile loop is that the dowhile loop always cycle through the loop at least once but the while loop does not always do so","177":"while loop used to execute a block of code as long as some condition is true  a dowhile loop used to execute a block of code as long as some condition is satisfied  the difference between while and dowhile is while loop tests its condition before the execution of its contents and the dowhile loop tests its condition after the execution of its contents at least once","178":"the termination condition of a dowhile statement is usually at the end of the loop so it will run at least once is for the while statement if the condition is false to begin with then the loop will never run","179":"a while loop will check the statement to make sure it is true before executing a do while loop will execute before checking the statement to see if it should run again","180":"a while statement will test the condition of the while loop first  there is a chance the loop will never run a dowhile loop will always run once and then the while test will determine if it will run again","181":"a do while loop always executed once a while loop is conditional statement has to be true for it to run","182":"name","183":"while statements will evaluate the statement before executing a cycle of the loop including the first cycle meaning that a while loop will not always execute a dowhile will run evaluate the statement after running through a cycle of the loop ensuring that the loop always executed at least one time","184":"  the main difference between a do and a dowhile statement is in a dowhile statement is the statements in a do block are always executed least once  the while statement will only execute if its condition is true","185":"the loop of a dowhile statement always executed once","186":"a while statement will only process if the statement is met while a dowhile will always process once then only continue if the statement is met","187":"to while runs the embedded code at least once the do command does not necessarily","188":"while tests for true first before running dowhile runs once first before checking","189":"a dowhile statement is body always executed at least once  there as a while statement will not execute at all unless the condition for the while is true","190":"the statements within the block of the do while loop will always be executed at least once regardless of the conditions whereas the while loops may never be executed if the conditions are not met ","191":"a do while loop will always run through once while an while loopperforms a test before running through the loop","192":"a while statement tests the condition before it can starta dowhile statement loops through once before the condition is tested","193":"a while loop terminates at the beginning of the loop a dowhile terminates at the end of the loop","194":"the loop body always executed at least once","195":"while loop evaluate its expression at the top of its loop and decides if it needs to execute and the dowhile always executed at least once and then evaluate its expression at the bottom of its loop","196":"a dowhile statement will always execute the do piece of code at least once before checking the condition a while statement will always check the condition first","197":"a dowhile passes least 1 time before checking the condition however a while would fail to enter the loop if the condition fails in its first place","198":"a while loop checks if the condition is true or not first if it was true it excuses the statementa do while loop executed the statement before it checks the condition if the condition was true it would excuse the statement again so a dowhile loop would excuse the statement least once","199":"of answer","200":"a dowhile loop will always execute least once a while loop may never execute depending on the conditions","201":"a while loop is precheck it checks the condition statement before it executed the code within the while blocka do while loop is postcheck it checks the condition after the block executed it runs at least once no matter what the condition statement is","202":"     that is the main difference between a while and a dowhile statementthe do while construct consists of a block of code and a condition first the code within the block is executed and then the condition is evacuated this is done until it is prove false the difference between the while loop is it tests the condition before the code within the block is executed","203":"for us it is usually a set get and displaymessge or other messages that tell you what properties a class has but does not reveal its implementation you could have anything you want in your own class definition","204":"the attributes of said class also whether or not it is a subclass also whether it is public private or protected","205":"information telling the compilers what data members and member functions belong to the class","206":"since class is user defined the body of the declaration can contain members that can be either data or function declarations and rationally access specified  example for specified would be public private and protected  there is the eyford glass and the glass body is enclosed with brackets  ","207":"in object and data","208":"it is specific class name includes only information defined by that class implementation details etc","209":"data members and member functions","210":"a class definition usually contains the function and its data members","211":"data members and member functions","212":"member functions","213":"member functions and data members belonging to the class","214":"a public and private area that includes the functions and variable that are used in the class","215":"the eyford class followed by they class name on the inside you declare public and private declarations of your class","216":"a class definition typically includes function definitions","217":"it begins with glass followed by the class name then usually a construction data members and member functions that delineates the class is included in any class is definition","218":"the data and methods ","219":"a construction functions and variable that are accessible to by that class and possibly other classes depending on how they are done","220":"member functions and data members","221":"public section and private section and there must be a semicolon to set the end","222":"member functions and data members","223":"data members and member functions","224":"data members and member functions","225":"the class name and its public data types such as contractors methods functions","226":"a construction and several data members and at least one public data member or method","227":"class name two curly prenthesis public and private","228":"data members and member functions","229":"data and functions","230":"functions and data members that belong to the class","231":"class variable function definitions for the class","232":"a class is an expanded concept of a data structure it holds both the data and the functions being executed ","233":" data members are the data components of a particular class  a member function are the sanctioning components of the class","234":" a field variable is a variable that is declared as a member of a class a local variable is variable that declared local to a method","235":"data members are declared inside the class but outside of any member functions unlike with local variable each object of the class keeps its own copy of the data members stored in memory","236":"data member are variable that represent an attribute in a class definition  local variable declared in a function body cannot be used outside of that function body  when a function terminates the values of its local variable are lost","237":"a local variable cannot be accessed outside the function in which it is declared data members normally are private variable of functions declared private are accessible only to member functions of the class in which they are declared","238":"a data member is part of a c class or structure that stores data of a certain type a local variable inside a member function is only available inside that function and can be used to derive a desired outcome","239":"a local variable can only be accessed within the scope of its declaration","240":"data members are the attributes of the function and can be used outside the functionlocal variable can not be used outside the function and the value is lost after the function terminates","241":"data members are permanent attributes of the class local variable inside a member function are lost when the scope of the member function ends","242":"data members are declared in a class definition but outside the bodies of a class is memberfunction definitions local variable are declared in a function definition is body","243":"a data member is locally accessible while a local variable is only accessible inside the member function","244":"a variable inside a member function can only be accessed inside that member and a data member can be accessed throughout the program","245":"local variable are used only within the scope of its declaration","246":"a data member is a more general term describing all objects instantiated within a member function  local in local variable refers more to the scope of a variable which may be located in anything from a control structure to a class  local variable whose scope are in a member function are the same as data members of member functions","247":"a data member exists permanently in that program is memory as long as it is runa local variable inside a member function is temporal and only used to operate in the function and exists as long as the function is run","248":"local variable can only be used within the function where as data members can be set to public access and can be used throughout","249":"the local variable is lost once it exist the block of code while the data member is not","250":"very member function can access and modify a data membera local variable can only be used from the line of declaration to the next closing  before it is lost from memory","251":"data member is accessible to all functions in the class where local variable is only available to the member function and value is lost when function closes","252":"data members are variable that are declared inside the class definition but outside of the bodies of the class member functions local variable can only be used within the function declaration","253":"the data member can be accessed outside of the class whereas the local variable cannot","254":"local variable cannot be used outside of that function body when a function terminates the values of its local variable are lost there as data members are variable in a class definition and they exist throughout the life of the object","255":"a local variable in a member function has to be static a data member can change its value freely","256":"a local variable is only unable within the function it is defined whereas a data member is available to any method within its class","257":"variable declared in a function definition is body cannot be used outside of that functiondata members accessible only to member function of that class","258":"data members local variable are declared in a function definition\u2019s bodythey cannot be used outside of that function bodywhen a function terminates the values of its local variable are lost","259":"local variable is only available in the function","260":"local variable are accessed inside member functions only while data members can be accessed throughout the class","261":"a data member is accessible anywhere in the class while i local variable in a member function is only accessible in that particular function and is freed after the function exist","262":"a data member is encapsulated within a class or object  it is static and can be shared by all instances of that class however local variable is are only used from the function or block in which it is declared and not the whole class other wise they would be called global variable ","263":" a construction initiatives an object or objects of a class  a function of a class perform a task such as display a line of text or do some kind of mathematical operations","264":"all contractors are functions but not all functions are contractors also functions can have nearly infinite purposes while contractors always create an instance of whichever class you are using you can change how a construction does something but not what it does with functions you can change not only the how but also the what","265":"unlike regular functions contractors are only used to initiative an object\u2019s data when it is created constructors must also be given the same name as the class and cannot return any values","266":"a construction typically used to intialize data members and allocate resources for instance memory files etc  also a construction cannot return values  functions are operations that maybe locally defined","267":"constructors cannot return values so they cannot specify a return type normally contractors are declared public","268":"a construction is a method that starts new instances of a class example employee employeesparameter starts a new instance of object of type employee a function is simply a module win a program that complete its single desired task","269":"a construction is called whenever a new object of that class is made","270":"a construction does not return any date and has no return typefunctions can return date or not return data can have a return type","271":"a construction is automatically called whenever an instance of a class is created a function must be explicitly called by the user ","272":"contractors cannot return values so they cannot specify a return type like functions can","273":"a construction is a function used to initiative an object is data when it is created","274":"a construction initiatives everything so that nothing is left empty or with random varioubles and a function modified those variable with data","275":"a construction initialized values at the execution of its instantiation it provides default values","276":"a construction sets up the default values of variable when an object is instantiated whereas a function allows interaction with that object","277":"a construction is used to create an object that can be employed in the main function of a program  his may or may not execute code along with ita function is a set of code that executed when called but does not create a new object","278":"a construction initiatives data members but the functions actually perform tasks constructors can return values either ","279":"a construction does not need a type and it is used to initiative the variable","280":"constructors do not have a return type","281":"construction creates the class object into memory where functions perform actions against that object","282":"contractors cannot return values","283":"a construction initiatives values and a function usual perform some sort of operation","284":"a construction is a function used to initiative an object is data when it is created it is call is made implicitly when the object is created and must be defined with the same name as the class instructor also cannot return a value like a function can","285":"a construction is used to create an instance of a class and has the same name as that class a function cannot have the same name as a class and computer data","286":"a construction is a function that initiatives a class instance a function perform whatever task it is written for","287":"a construction cannot return values not even void but function get a return value","288":"a construction cannot return values its not even void it is used to initiative an object is data when it is createdwhereas a function is created to do a specific task and it can return values","289":"a construction initiatives an object a function is part of an object","290":"contractors initiative the data that is then used in the calculations of a function","291":"a construction is called when the class is created a function can be called any time","292":"construction is a special block of statements called when an object is created either when it is declared ecstatically or constructed on the stick however a function is a portion of code within a larger program which perform a specific task and independent to the rest of the code ","293":"the compilers creates a default construction when we do not define one in our class file","294":"during compilation","295":"when the class does not explicitly include a construction","296":"when no parameter are set is when a default construction is used  ","297":"when a class does not explicitly include a construction","298":"when there are no arguments passed","299":"when there is not one already for a specific class","300":"when it the programs compilers","301":"when a construction is not provided by the programme of the class","302":"in any class that does not explicitly include a construction","303":"before the main function of the code","304":"whenever you dont specific your own","305":"when non are provided","306":"c will create a default construction when no other construction is present","307":"when no construction was specified in the construction is class but the class is instantiated in a program","308":"when no construction exists when one is needed a parameterless default construction is declared","309":"the compilers creates this automatically for you unless you specifically create one","310":"in any class that does not explicitly include a construction","311":"when no userdefined construction exists","312":"of a class does not explicitly include a construction the compilers creates one","313":"when you do not provide your own construction","314":"when a class does not explicitly include a construction","315":"c creates a default construction during compilation if one is not provided","316":"when a class does not explicitly include a construction","317":"the compilers will provide one when class does not explicitly include a conductor","318":"when the programme does not explicitly include a construction","319":"when one is not explicitly stated","320":"when one is not explicitly included by a class","321":"when you dont specify any contractors","322":"at the very beginning when you run a complied matter a fact in c it generate its own default construction for the class provided if no other contractors have been provided by user","323":"must one per class","324":"is many as you want so long as they have different parameter","325":"there is no limit to the number of contractors in a class because like functions contractors can be overloaded","326":"it depends what type of class is being defined  typically you would have a construction call for each object","327":"in c the construction can be overloaded in that there can be more than one construction for a class each having different parameter","328":"1","329":"any number you want","330":"one","331":"by default just one but they may be overloaded to create as many contractors as necessary","332":"as many as you want","333":"is many as you want with different parameter","334":"infinite","335":"as many as you need","336":"is many as are needed depending on how many variable one wishes to directly modify or leave as default when instantiating an object","337":"a very large amount of contractors can be created for any given class through overlooking  when two contractors with a different type or number of parameter are created they are said to be overloaded and c can recognize which construction to use based on the type of the variable that are passedreturned","338":"it depends on the number of objects each object should have a construction","339":"theoretically unlimited as long as they are defined by the programme","340":"is many as needed","341":"as many as wantedneeded","342":"several","343":"one","344":"one","345":"there can be infinite contractors as long as the signature is different","346":"that depends on the number of data members in the class","347":"one","348":"you can overcoat contractors as you need","349":"is many as the programme wants to create ","350":"one","351":"as many as you want as long as they each have a unique argument list","352":"as many as the user decides to use ","353":" a function definition does not require any additional information that needs to be passed inside its parenthesis to execute while a definition prototype requires more than one parameter to be passed in order to complete its task","354":"the function prototype is where the programme declares that heshe is using a function other than main  his is like declaring a variable the programme knows that heshe will be using in the future but has yet to say where they are going to use it or how his is answers the question who it gives the function a name and character the function prototype by common practice is placed at the beginning of the program after the includes and before main the function definition is the guns of the function his is where the programme decides what the function is going to do and tells it how to do it it takes whatever information it is given and perform the operations it works sort of like the brain the brain takes in input and based upon that input perform in some way producing an output the function definition is placed outside of main  and any other functions a function is its own entity and should be thought of as such","355":"a function prototype tells the compilers the function name return type and the number and type of parameter without revealing the implementation contained in the function definition","356":"function prototype is a declaration  function definitions wmultiple parameter often require more than one piece of information to perform their tasks","357":"a function prototype is a declaration of a function that tells the compilers the function is name its return type and the types of its parameter","358":"a prototype shows only return types and necessary parameter the definition includes names for those parameter and defines what the object is actually capable of doing","359":"prototype only tells the user what data types go into a function and what type is returned","360":"function prototype is located in the h file and only contains the access function name and parameter typefunction definition contains the code for the function to perform its activity","361":"a function prototype is used to reference the compilers to a function that will be defined later on a function definition is the actual function itself complete with return type parameter etc","362":"a function prototype describes a class is public interface without revealing the class is member function implementation","363":"function definitions are just that the definition the prototype is what the compilers uses to check that calls to function are correct","364":"a prototype does not include any actual code where the function has all the code that is executed in the program","365":"a prototype declares what will be used in the program and the definition ","366":"a function prototype lays out the name return type and the number and types of parameter the function expects to receive in a certain order  the details for function prototypes are in the function definition","367":"a function definition is the code that defines the function placed in the  brackets that determines that function is operationa function prototype shows the function is public interface without exposing implementation  it shows name return type and type of parameter","368":"a function prototype is just a declaration of the function existing and can be used as an actual function a function has to be created with a definition within to tell the compilers what the function does","369":"the prototype creates a framework to call the function definition while a function definition is where the function is actually programme out and created into a final product","370":"a function prototype describes the class is public interface without providing how the function worksa function definition contains the inner workings of the function","371":"prototype states all functions in that class before compilation where the definition actually holds the source for the functions","372":"function prototypes tell the compilers the function names its return type and the types of its parameter where as function definitions actually implement the member functions","373":"a function prototype just specified parameter  a function definition includes parameter and a code body","374":"function prototypes describe the class is public interface","375":"a prototype only declares name return type and input typea definition also defines the scope variable process and return function ","376":"a function prototype simply declares the functions parameter the function definition includes any necessary variable and the function is actual code","377":"a function prototype is a declaration of a function  while function definition specified what a function does","378":"in a function prototype you include the return type the name of the function and its parameter if any are neededin a function definition you write the code of what the function will do ","379":"a function definition contains all the code for a function to work a function prototype just shows the output input and function name","380":"function prototype describe the class is public interface without revealing the class is member function implementation  function definitions show what implementation are being done","381":"a function prototype only names the function its return type and it is argument list while a definition defines the above as well as what the function actually does","382":"function prototype describes a classes interface without revising whatever is inside as for the function definition cannot do that ","383":"the role of a header file list all the functions a class can do while hiding the inner workings of its functions","384":"the main role of header file is it is used to share information among various files","385":"leader files separate files in which classes are defined and allow the compilers to recognize classes when used elsewhere","386":"to","387":"a header file consists of reliable source code such as a class in a file that by convention has a h filename extension his differs from pp files that contain sourcecode","388":"to provide information about the contents of a library it includes the definition of classes declarations of functions data types and constant","389":"the header file shows the user what types go into and come out of a function but does not allow a user to manipulate the actual code for the function","390":"leader files declares the class member functions","391":"a header file allows for the separation of declaration and implementation into separate files ","392":"the header file has access to the c standard library and makes certain classes like class string work","393":"\u201cinstruct\u201d the compilers on how to interface with library and userwritten components","394":"create a common area to contain reliable functions","395":"to declare the functions being used in the classes","396":"include hath  allows the use of the hat container so called from the act of pulling names from a hat  the header file for hat includes functions for storage and retrieved of it is contents mainly put week and pull","397":"to hold reliable content or nodules separate from the actual  sourcecode file that can be easily reference and employed for different programs","398":"a header file is a file used to store a list of promote functions and data members","399":"a header file is a cross communication method between source files to help limit the size of each individual program without header files a program will be 1 large lump of code and thus fairly hard to debut and traverse","400":"it contains reliable source code for use by other classes","401":"to separate the source code from the main function allows the methodsclasses to be included in the program without direct coming allows re liability","402":"leader files have reliable source code in a file that a program can use ","403":"to hide the definition and details of a class  also to help reliability of the main c file","404":"to allow the compilers to recognize the classes when used elsewhere","405":"a header file declares a class its data and functions available through that class","406":"header files contain code which can be used in multiple files","407":"allow compilers to recognize the classes when used elsewhere","408":"allow compilers to recognize the classes when used elsewhere","409":"to promote function reusuablitly","410":"class definitions are placed here","411":"a header file usually contains class andor function prototypes","412":"contains all the standard c library is ie string "},"keyStopword":{"0":"simulate behaviour portions desired software product","1":"simulate behaviour portions desired software product","2":"simulate behaviour portions desired software product","3":"simulate behaviour portions desired software product","4":"simulate behaviour portions desired software product","5":"simulate behaviour portions desired software product","6":"simulate behaviour portions desired software product","7":"simulate behaviour portions desired software product","8":"simulate behaviour portions desired software product","9":"simulate behaviour portions desired software product","10":"simulate behaviour portions desired software product","11":"simulate behaviour portions desired software product","12":"simulate behaviour portions desired software product","13":"simulate behaviour portions desired software product","14":"simulate behaviour portions desired software product","15":"simulate behaviour portions desired software product","16":"simulate behaviour portions desired software product","17":"simulate behaviour portions desired software product","18":"simulate behaviour portions desired software product","19":"simulate behaviour portions desired software product","20":"simulate behaviour portions desired software product","21":"simulate behaviour portions desired software product","22":"simulate behaviour portions desired software product","23":"simulate behaviour portions desired software product","24":"simulate behaviour portions desired software product","25":"simulate behaviour portions desired software product","26":"simulate behaviour portions desired software product","27":"simulate behaviour portions desired software product","28":"simulate behaviour portions desired software product","29":"testing stage influence coming stage phase 5 solution refinement stage phase 7","30":"testing stage influence coming stage phase 5 solution refinement stage phase 7","31":"testing stage influence coming stage phase 5 solution refinement stage phase 7","32":"testing stage influence coming stage phase 5 solution refinement stage phase 7","33":"testing stage influence coming stage phase 5 solution refinement stage phase 7","34":"testing stage influence coming stage phase 5 solution refinement stage phase 7","35":"testing stage influence coming stage phase 5 solution refinement stage phase 7","36":"testing stage influence coming stage phase 5 solution refinement stage phase 7","37":"testing stage influence coming stage phase 5 solution refinement stage phase 7","38":"testing stage influence coming stage phase 5 solution refinement stage phase 7","39":"testing stage influence coming stage phase 5 solution refinement stage phase 7","40":"testing stage influence coming stage phase 5 solution refinement stage phase 7","41":"testing stage influence coming stage phase 5 solution refinement stage phase 7","42":"testing stage influence coming stage phase 5 solution refinement stage phase 7","43":"testing stage influence coming stage phase 5 solution refinement stage phase 7","44":"testing stage influence coming stage phase 5 solution refinement stage phase 7","45":"testing stage influence coming stage phase 5 solution refinement stage phase 7","46":"testing stage influence coming stage phase 5 solution refinement stage phase 7","47":"testing stage influence coming stage phase 5 solution refinement stage phase 7","48":"testing stage influence coming stage phase 5 solution refinement stage phase 7","49":"testing stage influence coming stage phase 5 solution refinement stage phase 7","50":"testing stage influence coming stage phase 5 solution refinement stage phase 7","51":"testing stage influence coming stage phase 5 solution refinement stage phase 7","52":"testing stage influence coming stage phase 5 solution refinement stage phase 7","53":"testing stage influence coming stage phase 5 solution refinement stage phase 7","54":"testing stage influence coming stage phase 5 solution refinement stage phase 7","55":"testing stage influence coming stage phase 5 solution refinement stage phase 7","56":"testing stage influence coming stage phase 5 solution refinement stage phase 7","57":"testing stage influence coming stage phase 5 solution refinement stage phase 7","58":"abstraction reliability","59":"abstraction reliability","60":"abstraction reliability","61":"abstraction reliability","62":"abstraction reliability","63":"abstraction reliability","64":"abstraction reliability","65":"abstraction reliability","66":"abstraction reliability","67":"abstraction reliability","68":"abstraction reliability","69":"abstraction reliability","70":"abstraction reliability","71":"abstraction reliability","72":"abstraction reliability","73":"abstraction reliability","74":"abstraction reliability","75":"abstraction reliability","76":"abstraction reliability","77":"abstraction reliability","78":"abstraction reliability","79":"abstraction reliability","80":"abstraction reliability","81":"abstraction reliability","82":"abstraction reliability","83":"abstraction reliability","84":"abstraction reliability","85":"abstraction reliability","86":"abstraction reliability","87":"main function","88":"main function","89":"main function","90":"main function","91":"main function","92":"main function","93":"main function","94":"main function","95":"main function","96":"main function","97":"main function","98":"main function","99":"main function","100":"main function","101":"main function","102":"main function","103":"main function","104":"main function","105":"main function","106":"main function","107":"main function","108":"main function","109":"main function","110":"main function","111":"main function","112":"main function","113":"main function","114":"main function","115":"main function","116":"location memory store value","117":"location memory store value","118":"location memory store value","119":"location memory store value","120":"location memory store value","121":"location memory store value","122":"location memory store value","123":"location memory store value","124":"location memory store value","125":"location memory store value","126":"location memory store value","127":"location memory store value","128":"location memory store value","129":"location memory store value","130":"location memory store value","131":"location memory store value","132":"location memory store value","133":"location memory store value","134":"location memory store value","135":"location memory store value","136":"location memory store value","137":"location memory store value","138":"location memory store value","139":"location memory store value","140":"location memory store value","141":"location memory store value","142":"location memory store value","143":"location memory store value","144":"location memory store value","145":"variable declared anywhere program declared inside function local variable outside functions global variable","146":"variable declared anywhere program declared inside function local variable outside functions global variable","147":"variable declared anywhere program declared inside function local variable outside functions global variable","148":"variable declared anywhere program declared inside function local variable outside functions global variable","149":"variable declared anywhere program declared inside function local variable outside functions global variable","150":"variable declared anywhere program declared inside function local variable outside functions global variable","151":"variable declared anywhere program declared inside function local variable outside functions global variable","152":"variable declared anywhere program declared inside function local variable outside functions global variable","153":"variable declared anywhere program declared inside function local variable outside functions global variable","154":"variable declared anywhere program declared inside function local variable outside functions global variable","155":"variable declared anywhere program declared inside function local variable outside functions global variable","156":"variable declared anywhere program declared inside function local variable outside functions global variable","157":"variable declared anywhere program declared inside function local variable outside functions global variable","158":"variable declared anywhere program declared inside function local variable outside functions global variable","159":"variable declared anywhere program declared inside function local variable outside functions global variable","160":"variable declared anywhere program declared inside function local variable outside functions global variable","161":"variable declared anywhere program declared inside function local variable outside functions global variable","162":"variable declared anywhere program declared inside function local variable outside functions global variable","163":"variable declared anywhere program declared inside function local variable outside functions global variable","164":"variable declared anywhere program declared inside function local variable outside functions global variable","165":"variable declared anywhere program declared inside function local variable outside functions global variable","166":"variable declared anywhere program declared inside function local variable outside functions global variable","167":"variable declared anywhere program declared inside function local variable outside functions global variable","168":"variable declared anywhere program declared inside function local variable outside functions global variable","169":"variable declared anywhere program declared inside function local variable outside functions global variable","170":"variable declared anywhere program declared inside function local variable outside functions global variable","171":"variable declared anywhere program declared inside function local variable outside functions global variable","172":"variable declared anywhere program declared inside function local variable outside functions global variable","173":"variable declared anywhere program declared inside function local variable outside functions global variable","174":"block inside dowhile statement execute least","175":"block inside dowhile statement execute least","176":"block inside dowhile statement execute least","177":"block inside dowhile statement execute least","178":"block inside dowhile statement execute least","179":"block inside dowhile statement execute least","180":"block inside dowhile statement execute least","181":"block inside dowhile statement execute least","182":"block inside dowhile statement execute least","183":"block inside dowhile statement execute least","184":"block inside dowhile statement execute least","185":"block inside dowhile statement execute least","186":"block inside dowhile statement execute least","187":"block inside dowhile statement execute least","188":"block inside dowhile statement execute least","189":"block inside dowhile statement execute least","190":"block inside dowhile statement execute least","191":"block inside dowhile statement execute least","192":"block inside dowhile statement execute least","193":"block inside dowhile statement execute least","194":"block inside dowhile statement execute least","195":"block inside dowhile statement execute least","196":"block inside dowhile statement execute least","197":"block inside dowhile statement execute least","198":"block inside dowhile statement execute least","199":"block inside dowhile statement execute least","200":"block inside dowhile statement execute least","201":"block inside dowhile statement execute least","202":"block inside dowhile statement execute least","203":"data members attributes member functions","204":"data members attributes member functions","205":"data members attributes member functions","206":"data members attributes member functions","207":"data members attributes member functions","208":"data members attributes member functions","209":"data members attributes member functions","210":"data members attributes member functions","211":"data members attributes member functions","212":"data members attributes member functions","213":"data members attributes member functions","214":"data members attributes member functions","215":"data members attributes member functions","216":"data members attributes member functions","217":"data members attributes member functions","218":"data members attributes member functions","219":"data members attributes member functions","220":"data members attributes member functions","221":"data members attributes member functions","222":"data members attributes member functions","223":"data members attributes member functions","224":"data members attributes member functions","225":"data members attributes member functions","226":"data members attributes member functions","227":"data members attributes member functions","228":"data members attributes member functions","229":"data members attributes member functions","230":"data members attributes member functions","231":"data members attributes member functions","232":"data members attributes member functions","233":"data members accessed member functions inside class definition local variable accessed inside member function defines","234":"data members accessed member functions inside class definition local variable accessed inside member function defines","235":"data members accessed member functions inside class definition local variable accessed inside member function defines","236":"data members accessed member functions inside class definition local variable accessed inside member function defines","237":"data members accessed member functions inside class definition local variable accessed inside member function defines","238":"data members accessed member functions inside class definition local variable accessed inside member function defines","239":"data members accessed member functions inside class definition local variable accessed inside member function defines","240":"data members accessed member functions inside class definition local variable accessed inside member function defines","241":"data members accessed member functions inside class definition local variable accessed inside member function defines","242":"data members accessed member functions inside class definition local variable accessed inside member function defines","243":"data members accessed member functions inside class definition local variable accessed inside member function defines","244":"data members accessed member functions inside class definition local variable accessed inside member function defines","245":"data members accessed member functions inside class definition local variable accessed inside member function defines","246":"data members accessed member functions inside class definition local variable accessed inside member function defines","247":"data members accessed member functions inside class definition local variable accessed inside member function defines","248":"data members accessed member functions inside class definition local variable accessed inside member function defines","249":"data members accessed member functions inside class definition local variable accessed inside member function defines","250":"data members accessed member functions inside class definition local variable accessed inside member function defines","251":"data members accessed member functions inside class definition local variable accessed inside member function defines","252":"data members accessed member functions inside class definition local variable accessed inside member function defines","253":"data members accessed member functions inside class definition local variable accessed inside member function defines","254":"data members accessed member functions inside class definition local variable accessed inside member function defines","255":"data members accessed member functions inside class definition local variable accessed inside member function defines","256":"data members accessed member functions inside class definition local variable accessed inside member function defines","257":"data members accessed member functions inside class definition local variable accessed inside member function defines","258":"data members accessed member functions inside class definition local variable accessed inside member function defines","259":"data members accessed member functions inside class definition local variable accessed inside member function defines","260":"data members accessed member functions inside class definition local variable accessed inside member function defines","261":"data members accessed member functions inside class definition local variable accessed inside member function defines","262":"data members accessed member functions inside class definition local variable accessed inside member function defines","263":"construction called whenever object created whereas function needs","264":"construction called whenever object created whereas function needs","265":"construction called whenever object created whereas function needs","266":"construction called whenever object created whereas function needs","267":"construction called whenever object created whereas function needs","268":"construction called whenever object created whereas function needs","269":"construction called whenever object created whereas function needs","270":"construction called whenever object created whereas function needs","271":"construction called whenever object created whereas function needs","272":"construction called whenever object created whereas function needs","273":"construction called whenever object created whereas function needs","274":"construction called whenever object created whereas function needs","275":"construction called whenever object created whereas function needs","276":"construction called whenever object created whereas function needs","277":"construction called whenever object created whereas function needs","278":"construction called whenever object created whereas function needs","279":"construction called whenever object created whereas function needs","280":"construction called whenever object created whereas function needs","281":"construction called whenever object created whereas function needs","282":"construction called whenever object created whereas function needs","283":"construction called whenever object created whereas function needs","284":"construction called whenever object created whereas function needs","285":"construction called whenever object created whereas function needs","286":"construction called whenever object created whereas function needs","287":"construction called whenever object created whereas function needs","288":"construction called whenever object created whereas function needs","289":"construction called whenever object created whereas function needs","290":"construction called whenever object created whereas function needs","291":"construction called whenever object created whereas function needs","292":"construction called whenever object created whereas function needs","293":"construction provided compilers provides one default construction defined class compilers create default construction","294":"construction provided compilers provides one default construction defined class compilers create default construction","295":"construction provided compilers provides one default construction defined class compilers create default construction","296":"construction provided compilers provides one default construction defined class compilers create default construction","297":"construction provided compilers provides one default construction defined class compilers create default construction","298":"construction provided compilers provides one default construction defined class compilers create default construction","299":"construction provided compilers provides one default construction defined class compilers create default construction","300":"construction provided compilers provides one default construction defined class compilers create default construction","301":"construction provided compilers provides one default construction defined class compilers create default construction","302":"construction provided compilers provides one default construction defined class compilers create default construction","303":"construction provided compilers provides one default construction defined class compilers create default construction","304":"construction provided compilers provides one default construction defined class compilers create default construction","305":"construction provided compilers provides one default construction defined class compilers create default construction","306":"construction provided compilers provides one default construction defined class compilers create default construction","307":"construction provided compilers provides one default construction defined class compilers create default construction","308":"construction provided compilers provides one default construction defined class compilers create default construction","309":"construction provided compilers provides one default construction defined class compilers create default construction","310":"construction provided compilers provides one default construction defined class compilers create default construction","311":"construction provided compilers provides one default construction defined class compilers create default construction","312":"construction provided compilers provides one default construction defined class compilers create default construction","313":"construction provided compilers provides one default construction defined class compilers create default construction","314":"construction provided compilers provides one default construction defined class compilers create default construction","315":"construction provided compilers provides one default construction defined class compilers create default construction","316":"construction provided compilers provides one default construction defined class compilers create default construction","317":"construction provided compilers provides one default construction defined class compilers create default construction","318":"construction provided compilers provides one default construction defined class compilers create default construction","319":"construction provided compilers provides one default construction defined class compilers create default construction","320":"construction provided compilers provides one default construction defined class compilers create default construction","321":"construction provided compilers provides one default construction defined class compilers create default construction","322":"construction provided compilers provides one default construction defined class compilers create default construction","323":"unlimited number","324":"unlimited number","325":"unlimited number","326":"unlimited number","327":"unlimited number","328":"unlimited number","329":"unlimited number","330":"unlimited number","331":"unlimited number","332":"unlimited number","333":"unlimited number","334":"unlimited number","335":"unlimited number","336":"unlimited number","337":"unlimited number","338":"unlimited number","339":"unlimited number","340":"unlimited number","341":"unlimited number","342":"unlimited number","343":"unlimited number","344":"unlimited number","345":"unlimited number","346":"unlimited number","347":"unlimited number","348":"unlimited number","349":"unlimited number","350":"unlimited number","351":"unlimited number","352":"unlimited number","353":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","354":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","355":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","356":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","357":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","358":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","359":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","360":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","361":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","362":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","363":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","364":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","365":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","366":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","367":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","368":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","369":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","370":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","371":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","372":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","373":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","374":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","375":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","376":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","377":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","378":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","379":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","380":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","381":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","382":"function prototype includes function signature ie name function return type parameter type function definition includes actual body function","383":"store class interface including data members member function prototypes","384":"store class interface including data members member function prototypes","385":"store class interface including data members member function prototypes","386":"store class interface including data members member function prototypes","387":"store class interface including data members member function prototypes","388":"store class interface including data members member function prototypes","389":"store class interface including data members member function prototypes","390":"store class interface including data members member function prototypes","391":"store class interface including data members member function prototypes","392":"store class interface including data members member function prototypes","393":"store class interface including data members member function prototypes","394":"store class interface including data members member function prototypes","395":"store class interface including data members member function prototypes","396":"store class interface including data members member function prototypes","397":"store class interface including data members member function prototypes","398":"store class interface including data members member function prototypes","399":"store class interface including data members member function prototypes","400":"store class interface including data members member function prototypes","401":"store class interface including data members member function prototypes","402":"store class interface including data members member function prototypes","403":"store class interface including data members member function prototypes","404":"store class interface including data members member function prototypes","405":"store class interface including data members member function prototypes","406":"store class interface including data members member function prototypes","407":"store class interface including data members member function prototypes","408":"store class interface including data members member function prototypes","409":"store class interface including data members member function prototypes","410":"store class interface including data members member function prototypes","411":"store class interface including data members member function prototypes","412":"store class interface including data members member function prototypes"},"studentStopword":{"0":"high risk problems address prototype program make sure program feasible prototype may also used show company software possibly programme","1":"simulate portions desired final product quick easy program small specific job way help see problem may solve final project","2":"prototype program simulates behavior portions desired software product allow error checking","3":"defined specification phase prototype stimulated behavior portions desired software product meaning role prototype temporary solution program refined used extensively problem solving","4":"used let users first idea completed program allow clients evaluate program generate much feedback including software specification project estimation total project","5":"find problem errors program penalized","6":"address major issues creation program way account possible bags program possible prove program tangible","7":"break whole program prototype programs simulate parts final program","8":"provide example model finished program perform provides foresight challenges would encountered provides opportunity introduce changes finished program","9":"simulating behavior portion desired software product","10":"program stimulated behavior portions desired software product","11":"program simulates behavior portions desired software product","12":"lay basis give starting point actual problem solving","13":"simulate problem solving parts problem","14":"prototype program provides basic groundwork enhance improve solution problem","15":"prototype program part specification phase software problem solving employed illustrate key problem problems solved program sometimes serves base program expand upon","16":"program simulates behavior portions desired software product","17":"provides limited proof concept verify client actually programming whole application","18":"tests main function program leaving finer details","19":"get early feedback users early stages development show users first idea program dolook like make sure program meet requirements intense programming begins","20":"simulates behavior portions desired software product","21":"simulates behavior portions desired software product","22":"prototype program used problem solving collect data problem","23":"ease understanding problem discussion ease understanding program","24":"simulates behavior portions desired software product","25":"role prototype program help spot key problems may arise actual programming","26":"prototype program gives general idea end product without time effort write entire program","27":"show certain part program works supposed","28":"prototype programming approach programming enables one take organized approach developing effective program minimal errors strategic pattern solving problem ie book gave example costume withdrawing money bank approach taking pseudo code level ooadesign proceeding creating solution","29":"defining possibly design testing phase reveals problems design production affected program unfordable current form lead later production time originally estimated also affects coming testing may need write code program remove errors","30":"implementation phase maintenance phase effected","31":"purification coming refining solution maintenance influenced testing stage","32":"rup stages software life cycle influenced testing stage iselaboration phase refined project vision operative development core system development system requirements accurate time cost estimatesconstruction phase operative development remaining systemtransition phasetesting employment system","33":"defining solution production maintenance influenced resting stage","34":"elaboration construction transition affected testing","35":"defining production maintenance","36":"defining solution","37":"purification debugging","38":"defining going","39":"second half elaboration phase construction phase transition phase","40":"refining step production step maintenance stage","41":"elaboration construction transition","42":"defining","43":"testing stage direct influence final version program debugging finalization software revision","44":"directly defining coming defining right resting phase going right resting phaseindirectly production maintenance defining occurs last two stages software life cycle","45":"resting refining production maintenance","46":"depending work done resting spread throughout process prevent errors showing later due lack foresight","47":"elaboration construction transition","48":"stages influenced except setting program requirements test fails change whole design implementation etc program well final outcome","49":"defining production maintenance","50":"coming refining","51":"refining production maintenance","52":"removing logical errors testing valid data random data actual data","53":"1 specification design risk analysis verification5 coming testing refining production maintenance","54":"defining stage production stage maintenance stage","55":"resting could affect parts life cycle could make go back specification test well","56":"coming","57":"individual components steps analysis design implementing code well entire system tested execution requirements identified analysis stage ie pain output","58":"modularability ability refuse parts program later another program sometimes completely different goals program also makes easier debut code dividing code classes specific job program fails one job one class debut good security purposes allows let someone use program sorts lists without give access source code allows use inheritance polymorphism","59":"type programming flexible making easier add modify program also type fail safe program check individual module eliminates redundant code makes program easier read programme debugging program easier track source problem within module rather 2 million line program","60":"main advantages objecttormented programming existing classes refused program maintenance purification easier","61":"advantages oop allows us build classes objects three principles make oop areencapsulation objects combine data operationsinheritance glasses inherit properties classespolymorphism objects determine appropriate operations execution time","62":"advantages existing classes refused program maintenance purification easier accomplish","63":"object tormented programming allows programme use object classes changed manipulated affecting entire object classes hold attributes affect object","64":"reusable components extensibility maintainability reduces large problems smaller manageable problems","65":"encapsulationobjects combine data operationsinheritance classes inherit properties classespolymorphism objects determine appropriate operations execution time","66":"easier deluge reusability","67":"heliability ease maintenance","68":"one main advantages hide inner details technique known encapsulation objects combine data operations cannot see works another advantage refuse classes defined earlier program method known inheritance finally another advantage objects determine appropriate operations execution time technique known polymorphism","69":"existing classes refused program maintenance purification easier","70":"using different nodules allows easier debugging","71":"data encapsulation conceptthe use functions methods manipulate data","72":"nodular reliable code allowing faster employment solutions general view solution","73":"going debugging programs usually easier either compilers specify object working incorrectly function object assigned easier identify code also looks organized easier read help avoid redundant coming mostprogramming maintenance also easieralso nodules refused several times programs without much haste abstraction art breaking one big problem smaller simpler problems solving smaller problems shared unique complex problems creating nodules solve smaller repeated problems save time encounter","74":"variable remain private code easily modified reliable well easily implements mention easier read follow along observer","75":"data abstraction control possible isolate elementsfrom elements lot easier prevent tapering data","76":"encapsulation objects use operations without knowing operation worksinheritance cuts redundancy refusing earlier classespolymorphism objects select correct operation use situation","77":"make easier refuse adapt previously written code separate complex programs smaller easier understand classes","78":"existing classes refused program maintenance purification easier","79":"existing classes fused program maintenance purification easier","80":"main advantages objecttormented programming data abstraction easier maintenance reliability","81":"existing classes reusedprogram maintenance verifications easy","82":"1 existing classes refused program maintenance purification easier","83":"information hidden easier debut programming easier manageable","84":"existing classes refused program maintenance purification easier","85":"existing classes reusedprogram maintenance purification easier","86":"well one encapsulation values variable inside object private unless methods written pass outside object well inheritance subclass inherit variable methods super class example book included obs clock obs alarm would still use clock first class","87":"function \u2018in main \u2019","88":"function main","89":"c programs begin execute main method","90":"c program begin execute main function","91":"begin main function","92":"ant main","93":"main method","94":"testing phase","95":"main function","96":"main","97":"begin execute function main","98":"main method","99":"root","100":"main function","101":"c programs begin execution main","102":"pain function","103":"main function","104":"main function","105":"function main","106":"loading required include statements libraries main method begins execution","107":"main function","108":"main","109":"c programs begin execution main function","110":"main","111":"excuse main","112":"main functionint main","113":"c programs begin execution main function","114":"main function","115":"within main function","116":"variable inter string program","117":"programming structure holds data unique named programme holds data assigned new value assigned program finished","118":"variable location memory value stored","119":"variable location computer memory value stored later retrieve value","120":"variable location computer memory value stored use program variable name value type size","121":"named object hold numerical letter value","122":"symbol name valuenumber example ausednumber stand given number programme refer number using variable name","123":"variable location computers memory value stored use program","124":"identified holds location memory","125":"block memory holds specific type data","126":"location computer memory stored use program","127":"location memory value stored","128":"valueword assume set values","129":"pointer location memory","130":"variable memory address specific type stored data mathematical perspective symbol representing fixed definition changing values","131":"variable value subject change computer memory used programs programs change value variable recall later act directly","132":"symbol stands value may may change depending program","133":"slaveholder hold information used programfor examplein hold 1 2 3 4 68 72 256 etcfloat hold 154 5555 124 5657 88123 etchair hold b c e f 4 5 6 p etc","134":"stored value used program","135":"way store different values program numbers words letters etc","136":"object location memory value stored","137":"location memory value stored","138":"variable object data stored","139":"vocation memory value stored","140":"location memory value stored","141":"variable location computer memory value stored use program","142":"variable location computers memory value stored use program","143":"location memory data stored retrieved","144":"method identified would say use bind data object memory location stored location accessed manipulated later variable name called","145":"declared right used good practice declare beginning program label food","146":"function main using variable","147":"local variable declared inside method function used beginning method global variable declared outside function method generally functions defined","148":"variable declared ever defined either inside block locally outside block locally","149":"variable declared actually used declared main use locally","150":"good programming practice declared main least declared used","151":"declared locally main method also outside variable subject method scope within would still declared beginning method inside","152":"local variable declared inside method global variable declared body","153":"main function","154":"locally entire program locally individual functions including statements","155":"usually declared beginning used program always contain name data type","156":"inside method","157":"top","158":"global variable declared body code local variable declared function used unless function passed variable variable always declared use","159":"variable usually declared beginning module c code","160":"main function usually top codethey declared almost anywhere must declared code use act upon","161":"beginning program main starts","162":"declaration functions statements statementsin body statements namespaces leaders etc almost anywhere anywhere program long line","163":"declaration variable data type","164":"anywhere code top middle code anywhere","165":"used","166":"anywhere scope used","167":"variable declared classes methods","168":"inside function scope outside function scope case global variable","169":"global variable declared main functionlocal variable declared function","170":"variable usually declared beginning c program declared program long appear called upon","171":"variable declared main function operation attempted variable","172":"anywhere declare depends want accessible scope","173":"depends it\u2019s global declared side source code used every scope however local variable one declared local function etc obviously doesn\u2019t need declared outside variable seeing used function block called","174":"\u201cdo\u201d statement first evaluate condition executed lines code statement 0 times \u201cdo while\u201d statement executed lines code evaluate condition","175":"dowhile statements evaluate whether loop running block contained within least main difference statements possibility never used statements hand always run least evaluation whether run","176":"main difference dowhile loop dowhile loop always cycle loop least loop always","177":"loop used execute block code long condition true dowhile loop used execute block code long condition satisfied difference dowhile loop tests condition execution contents dowhile loop tests condition execution contents least","178":"termination condition dowhile statement usually end loop run least statement condition false begin loop never run","179":"loop check statement make sure true executing loop execute checking statement see run","180":"statement test condition loop first chance loop never run dowhile loop always run test determine run","181":"loop always executed loop conditional statement true run","182":"name","183":"statements evaluate statement executing cycle loop including first cycle meaning loop always execute dowhile run evaluate statement running cycle loop ensuring loop always executed least one time","184":"main difference dowhile statement dowhile statement statements block always executed least statement execute condition true","185":"loop dowhile statement always executed","186":"statement process statement met dowhile always process continue statement met","187":"runs embedded code least command necessarily","188":"tests true first running dowhile runs first checking","189":"dowhile statement body always executed least statement execute unless condition true","190":"statements within block loop always executed least regardless conditions whereas loops may never executed conditions met","191":"loop always run loopperforms test running loop","192":"statement tests condition starta dowhile statement loops condition tested","193":"loop terminates beginning loop dowhile terminates end loop","194":"loop body always executed least","195":"loop evaluate expression top loop decides needs execute dowhile always executed least evaluate expression bottom loop","196":"dowhile statement always execute piece code least checking condition statement always check condition first","197":"dowhile passes least 1 time checking condition however would fail enter loop condition fails first place","198":"loop checks condition true first true excuses statementa loop executed statement checks condition condition true would excuse statement dowhile loop would excuse statement least","199":"answer","200":"dowhile loop always execute least loop may never execute depending conditions","201":"loop precheck checks condition statement executed code within blocka loop postcheck checks condition block executed runs least matter condition statement","202":"main difference dowhile statementthe construct consists block code condition first code within block executed condition evacuated done prove false difference loop tests condition code within block executed","203":"us usually set get displaymessge messages tell properties class reveal implementation could anything want class definition","204":"attributes said class also whether subclass also whether public private protected","205":"information telling compilers data members member functions belong class","206":"since class user defined body declaration contain members either data function declarations rationally access specified example specified would public private protected eyford glass glass body enclosed brackets","207":"object data","208":"specific class name includes information defined class implementation details etc","209":"data members member functions","210":"class definition usually contains function data members","211":"data members member functions","212":"member functions","213":"member functions data members belonging class","214":"public private area includes functions variable used class","215":"eyford class followed class name inside declare public private declarations class","216":"class definition typically includes function definitions","217":"begins glass followed class name usually construction data members member functions delineates class included class definition","218":"data methods","219":"construction functions variable accessible class possibly classes depending done","220":"member functions data members","221":"public section private section must semicolon set end","222":"member functions data members","223":"data members member functions","224":"data members member functions","225":"class name public data types contractors methods functions","226":"construction several data members least one public data member method","227":"class name two curly prenthesis public private","228":"data members member functions","229":"data functions","230":"functions data members belong class","231":"class variable function definitions class","232":"class expanded concept data structure holds data functions executed","233":"data members data components particular class member function sanctioning components class","234":"field variable variable declared member class local variable variable declared local method","235":"data members declared inside class outside member functions unlike local variable object class keeps copy data members stored memory","236":"data member variable represent attribute class definition local variable declared function body cannot used outside function body function terminates values local variable lost","237":"local variable cannot accessed outside function declared data members normally private variable functions declared private accessible member functions class declared","238":"data member part c class structure stores data certain type local variable inside member function available inside function used derive desired outcome","239":"local variable accessed within scope declaration","240":"data members attributes function used outside functionlocal variable used outside function value lost function terminates","241":"data members permanent attributes class local variable inside member function lost scope member function ends","242":"data members declared class definition outside bodies class memberfunction definitions local variable declared function definition body","243":"data member locally accessible local variable accessible inside member function","244":"variable inside member function accessed inside member data member accessed throughout program","245":"local variable used within scope declaration","246":"data member general term describing objects instantiated within member function local local variable refers scope variable may located anything control structure class local variable whose scope member function data members member functions","247":"data member exists permanently program memory long runa local variable inside member function temporal used operate function exists long function run","248":"local variable used within function data members set public access used throughout","249":"local variable lost exist block code data member","250":"member function access modify data membera local variable used line declaration next closing lost memory","251":"data member accessible functions class local variable available member function value lost function closes","252":"data members variable declared inside class definition outside bodies class member functions local variable used within function declaration","253":"data member accessed outside class whereas local variable cannot","254":"local variable cannot used outside function body function terminates values local variable lost data members variable class definition exist throughout life object","255":"local variable member function static data member change value freely","256":"local variable unable within function defined whereas data member available method within class","257":"variable declared function definition body cannot used outside functiondata members accessible member function class","258":"data members local variable declared function definition\u2019s bodythey cannot used outside function bodywhen function terminates values local variable lost","259":"local variable available function","260":"local variable accessed inside member functions data members accessed throughout class","261":"data member accessible anywhere class local variable member function accessible particular function freed function exist","262":"data member encapsulated within class object static shared instances class however local variable used function block declared whole class wise would called global variable","263":"construction initiatives object objects class function class perform task display line text kind mathematical operations","264":"contractors functions functions contractors also functions nearly infinite purposes contractors always create instance whichever class using change construction something functions change also","265":"unlike regular functions contractors used initiative object\u2019s data created constructors must also given name class cannot return values","266":"construction typically used intialize data members allocate resources instance memory files etc also construction cannot return values functions operations maybe locally defined","267":"constructors cannot return values cannot specify return type normally contractors declared public","268":"construction method starts new instances class example employee employeesparameter starts new instance object type employee function simply module win program complete single desired task","269":"construction called whenever new object class made","270":"construction return date return typefunctions return date return data return type","271":"construction automatically called whenever instance class created function must explicitly called user","272":"contractors cannot return values cannot specify return type like functions","273":"construction function used initiative object data created","274":"construction initiatives everything nothing left empty random varioubles function modified variable data","275":"construction initialized values execution instantiation provides default values","276":"construction sets default values variable object instantiated whereas function allows interaction object","277":"construction used create object employed main function program may may execute code along ita function set code executed called create new object","278":"construction initiatives data members functions actually perform tasks constructors return values either","279":"construction need type used initiative variable","280":"constructors return type","281":"construction creates class object memory functions perform actions object","282":"contractors cannot return values","283":"construction initiatives values function usual perform sort operation","284":"construction function used initiative object data created call made implicitly object created must defined name class instructor also cannot return value like function","285":"construction used create instance class name class function cannot name class computer data","286":"construction function initiatives class instance function perform whatever task written","287":"construction cannot return values even void function get return value","288":"construction cannot return values even void used initiative object data createdwhereas function created specific task return values","289":"construction initiatives object function part object","290":"contractors initiative data used calculations function","291":"construction called class created function called time","292":"construction special block statements called object created either declared ecstatically constructed stick however function portion code within larger program perform specific task independent rest code","293":"compilers creates default construction define one class file","294":"compilation","295":"class explicitly include construction","296":"parameter set default construction used","297":"class explicitly include construction","298":"arguments passed","299":"one already specific class","300":"programs compilers","301":"construction provided programme class","302":"class explicitly include construction","303":"main function code","304":"whenever dont specific","305":"non provided","306":"c create default construction construction present","307":"construction specified construction class class instantiated program","308":"construction exists one needed parameterless default construction declared","309":"compilers creates automatically unless specifically create one","310":"class explicitly include construction","311":"userdefined construction exists","312":"class explicitly include construction compilers creates one","313":"provide construction","314":"class explicitly include construction","315":"c creates default construction compilation one provided","316":"class explicitly include construction","317":"compilers provide one class explicitly include conductor","318":"programme explicitly include construction","319":"one explicitly stated","320":"one explicitly included class","321":"dont specify contractors","322":"beginning run complied matter fact c generate default construction class provided contractors provided user","323":"must one per class","324":"many want long different parameter","325":"limit number contractors class like functions contractors overloaded","326":"depends type class defined typically would construction call object","327":"c construction overloaded one construction class different parameter","328":"1","329":"number want","330":"one","331":"default one may overloaded create many contractors necessary","332":"many want","333":"many want different parameter","334":"infinite","335":"many need","336":"many needed depending many variable one wishes directly modify leave default instantiating object","337":"large amount contractors created given class overlooking two contractors different type number parameter created said overloaded c recognize construction use based type variable passedreturned","338":"depends number objects object construction","339":"theoretically unlimited long defined programme","340":"many needed","341":"many wantedneeded","342":"several","343":"one","344":"one","345":"infinite contractors long signature different","346":"depends number data members class","347":"one","348":"overcoat contractors need","349":"many programme wants create","350":"one","351":"many want long unique argument list","352":"many user decides use","353":"function definition require additional information needs passed inside parenthesis execute definition prototype requires one parameter passed order complete task","354":"function prototype programme declares heshe using function main like declaring variable programme knows heshe using future yet say going use answers question gives function name character function prototype common practice placed beginning program includes main function definition guns function programme decides function going tells takes whatever information given perform operations works sort like brain brain takes input based upon input perform way producing output function definition placed outside main functions function entity thought","355":"function prototype tells compilers function name return type number type parameter without revealing implementation contained function definition","356":"function prototype declaration function definitions wmultiple parameter often require one piece information perform tasks","357":"function prototype declaration function tells compilers function name return type types parameter","358":"prototype shows return types necessary parameter definition includes names parameter defines object actually capable","359":"prototype tells user data types go function type returned","360":"function prototype located h file contains access function name parameter typefunction definition contains code function perform activity","361":"function prototype used reference compilers function defined later function definition actual function complete return type parameter etc","362":"function prototype describes class public interface without revealing class member function implementation","363":"function definitions definition prototype compilers uses check calls function correct","364":"prototype include actual code function code executed program","365":"prototype declares used program definition","366":"function prototype lays name return type number types parameter function expects receive certain order details function prototypes function definition","367":"function definition code defines function placed brackets determines function operationa function prototype shows function public interface without exposing implementation shows name return type type parameter","368":"function prototype declaration function existing used actual function function created definition within tell compilers function","369":"prototype creates framework call function definition function definition function actually programme created final product","370":"function prototype describes class public interface without providing function worksa function definition contains inner workings function","371":"prototype states functions class compilation definition actually holds source functions","372":"function prototypes tell compilers function names return type types parameter function definitions actually implement member functions","373":"function prototype specified parameter function definition includes parameter code body","374":"function prototypes describe class public interface","375":"prototype declares name return type input typea definition also defines scope variable process return function","376":"function prototype simply declares functions parameter function definition includes necessary variable function actual code","377":"function prototype declaration function function definition specified function","378":"function prototype include return type name function parameter neededin function definition write code function","379":"function definition contains code function work function prototype shows output input function name","380":"function prototype describe class public interface without revealing class member function implementation function definitions show implementation done","381":"function prototype names function return type argument list definition defines well function actually","382":"function prototype describes classes interface without revising whatever inside function definition cannot","383":"role header file list functions class hiding inner workings functions","384":"main role header file used share information among various files","385":"leader files separate files classes defined allow compilers recognize classes used elsewhere","386":"","387":"header file consists reliable source code class file convention h filename extension differs pp files contain sourcecode","388":"provide information contents library includes definition classes declarations functions data types constant","389":"header file shows user types go come function allow user manipulate actual code function","390":"leader files declares class member functions","391":"header file allows separation declaration implementation separate files","392":"header file access c standard library makes certain classes like class string work","393":"\u201cinstruct\u201d compilers interface library userwritten components","394":"create common area contain reliable functions","395":"declare functions used classes","396":"include hath allows use hat container called act pulling names hat header file hat includes functions storage retrieved contents mainly put week pull","397":"hold reliable content nodules separate actual sourcecode file easily reference employed different programs","398":"header file file used store list promote functions data members","399":"header file cross communication method source files help limit size individual program without header files program 1 large lump code thus fairly hard debut traverse","400":"contains reliable source code use classes","401":"separate source code main function allows methodsclasses included program without direct coming allows liability","402":"leader files reliable source code file program use","403":"hide definition details class also help reliability main c file","404":"allow compilers recognize classes used elsewhere","405":"header file declares class data functions available class","406":"header files contain code used multiple files","407":"allow compilers recognize classes used elsewhere","408":"allow compilers recognize classes used elsewhere","409":"promote function reusuablitly","410":"class definitions placed","411":"header file usually contains class andor function prototypes","412":"contains standard c library ie string"},"studentStem":{"0":"high risk problem address prototyp program make sure program feasibl prototyp may also use show compani softwar possibl programm","1":"simul portion desir final product quick easi program small specif job way help see problem may solv final project","2":"prototyp program simul behavior portion desir softwar product allow error check","3":"defin specif phase prototyp stimul behavior portion desir softwar product mean role prototyp temporari solut program refin use extens problem solv","4":"use let user first idea complet program allow client evalu program generat much feedback includ softwar specif project estim total project","5":"find problem error program penal","6":"address major issu creation program way account possibl bag program possibl prove program tangibl","7":"break whole program prototyp program simul part final program","8":"provid exampl model finish program perform provid foresight challeng would encount provid opportun introduc chang finish program","9":"simul behavior portion desir softwar product","10":"program stimul behavior portion desir softwar product","11":"program simul behavior portion desir softwar product","12":"lay basi give start point actual problem solv","13":"simul problem solv part problem","14":"prototyp program provid basic groundwork enhanc improv solut problem","15":"prototyp program part specif phase softwar problem solv employ illustr key problem problem solv program sometim serv base program expand upon","16":"program simul behavior portion desir softwar product","17":"provid limit proof concept verifi client actual program whole applic","18":"test main function program leav finer detail","19":"get earli feedback user earli stage develop show user first idea program dolook like make sure program meet requir intens program begin","20":"simul behavior portion desir softwar product","21":"simul behavior portion desir softwar product","22":"prototyp program use problem solv collect data problem","23":"eas understand problem discuss eas understand program","24":"simul behavior portion desir softwar product","25":"role prototyp program help spot key problem may aris actual program","26":"prototyp program give general idea end product without time effort write entir program","27":"show certain part program work suppos","28":"prototyp program approach program enabl one take organ approach develop effect program minim error strateg pattern solv problem ie book gave exampl costum withdraw money bank approach take pseudo code level ooadesign proceed creat solut","29":"defin possibl design test phase reveal problem design product affect program unford current form lead later product time origin estim also affect come test may need write code program remov error","30":"implement phase mainten phase effect","31":"purif come refin solut mainten influenc test stage","32":"rup stage softwar life cycl influenc test stage iselabor phase refin project vision oper develop core system develop system requir accur time cost estimatesconstruct phase oper develop remain systemtransit phasetest employ system","33":"defin solut product mainten influenc rest stage","34":"elabor construct transit affect test","35":"defin product mainten","36":"defin solut","37":"purif debug","38":"defin go","39":"second half elabor phase construct phase transit phase","40":"refin step product step mainten stage","41":"elabor construct transit","42":"defin","43":"test stage direct influenc final version program debug final softwar revis","44":"direct defin come defin right rest phase go right rest phaseindirect product mainten defin occur last two stage softwar life cycl","45":"rest refin product mainten","46":"depend work done rest spread throughout process prevent error show later due lack foresight","47":"elabor construct transit","48":"stage influenc except set program requir test fail chang whole design implement etc program well final outcom","49":"defin product mainten","50":"come refin","51":"refin product mainten","52":"remov logic error test valid data random data actual data","53":"1 specif design risk analysi verification5 come test refin product mainten","54":"defin stage product stage mainten stage","55":"rest could affect part life cycl could make go back specif test well","56":"come","57":"individu compon step analysi design implement code well entir system test execut requir identifi analysi stage ie pain output","58":"modular abil refus part program later anoth program sometim complet differ goal program also make easier debut code divid code class specif job program fail one job one class debut good secur purpos allow let someon use program sort list without give access sourc code allow use inherit polymorph","59":"type program flexibl make easier add modifi program also type fail safe program check individu modul elimin redund code make program easier read programm debug program easier track sourc problem within modul rather 2 million line program","60":"main advantag objecttor program exist class refus program mainten purif easier","61":"advantag oop allow us build class object three principl make oop areencapsul object combin data operationsinherit glass inherit properti classespolymorph object determin appropri oper execut time","62":"advantag exist class refus program mainten purif easier accomplish","63":"object torment program allow programm use object class chang manipul affect entir object class hold attribut affect object","64":"reusabl compon extens maintain reduc larg problem smaller manag problem","65":"encapsulationobject combin data operationsinherit class inherit properti classespolymorph object determin appropri oper execut time","66":"easier delug reusabl","67":"heliabl eas mainten","68":"one main advantag hide inner detail techniqu known encapsul object combin data oper cannot see work anoth advantag refus class defin earlier program method known inherit final anoth advantag object determin appropri oper execut time techniqu known polymorph","69":"exist class refus program mainten purif easier","70":"use differ nodul allow easier debug","71":"data encapsul conceptth use function method manipul data","72":"nodular reliabl code allow faster employ solut general view solut","73":"go debug program usual easier either compil specifi object work incorrect function object assign easier identifi code also look organ easier read help avoid redund come mostprogram mainten also easieralso nodul refus sever time program without much hast abstract art break one big problem smaller simpler problem solv smaller problem share uniqu complex problem creat nodul solv smaller repeat problem save time encount","74":"variabl remain privat code easili modifi reliabl well easili implement mention easier read follow along observ","75":"data abstract control possibl isol elementsfrom element lot easier prevent taper data","76":"encapsul object use oper without know oper worksinherit cut redund refus earlier classespolymorph object select correct oper use situat","77":"make easier refus adapt previous written code separ complex program smaller easier understand class","78":"exist class refus program mainten purif easier","79":"exist class fuse program mainten purif easier","80":"main advantag objecttor program data abstract easier mainten reliabl","81":"exist class reusedprogram mainten verif easi","82":"1 exist class refus program mainten purif easier","83":"inform hidden easier debut program easier manag","84":"exist class refus program mainten purif easier","85":"exist class reusedprogram mainten purif easier","86":"well one encapsul valu variabl insid object privat unless method written pass outsid object well inherit subclass inherit variabl method super class exampl book includ ob clock ob alarm would still use clock first class","87":"function in main \u2019","88":"function main","89":"c program begin execut main method","90":"c program begin execut main function","91":"begin main function","92":"ant main","93":"main method","94":"test phase","95":"main function","96":"main","97":"begin execut function main","98":"main method","99":"root","100":"main function","101":"c program begin execut main","102":"pain function","103":"main function","104":"main function","105":"function main","106":"load requir includ statement librari main method begin execut","107":"main function","108":"main","109":"c program begin execut main function","110":"main","111":"excus main","112":"main functionint main","113":"c program begin execut main function","114":"main function","115":"within main function","116":"variabl inter string program","117":"program structur hold data uniqu name programm hold data assign new valu assign program finish","118":"variabl locat memori valu store","119":"variabl locat comput memori valu store later retriev valu","120":"variabl locat comput memori valu store use program variabl name valu type size","121":"name object hold numer letter valu","122":"symbol name valuenumb exampl ausednumb stand given number programm refer number use variabl name","123":"variabl locat comput memori valu store use program","124":"identifi hold locat memori","125":"block memori hold specif type data","126":"locat comput memori store use program","127":"locat memori valu store","128":"valueword assum set valu","129":"pointer locat memori","130":"variabl memori address specif type store data mathemat perspect symbol repres fix definit chang valu","131":"variabl valu subject chang comput memori use program program chang valu variabl recal later act direct","132":"symbol stand valu may may chang depend program","133":"slavehold hold inform use programfor examplein hold 1 2 3 4 68 72 256 etcfloat hold 154 5555 124 5657 88123 etchair hold b c e f 4 5 6 p etc","134":"store valu use program","135":"way store differ valu program number word letter etc","136":"object locat memori valu store","137":"locat memori valu store","138":"variabl object data store","139":"vocat memori valu store","140":"locat memori valu store","141":"variabl locat comput memori valu store use program","142":"variabl locat comput memori valu store use program","143":"locat memori data store retriev","144":"method identifi would say use bind data object memori locat store locat access manipul later variabl name call","145":"declar right use good practic declar begin program label food","146":"function main use variabl","147":"local variabl declar insid method function use begin method global variabl declar outsid function method general function defin","148":"variabl declar ever defin either insid block local outsid block local","149":"variabl declar actual use declar main use local","150":"good program practic declar main least declar use","151":"declar local main method also outsid variabl subject method scope within would still declar begin method insid","152":"local variabl declar insid method global variabl declar bodi","153":"main function","154":"local entir program local individu function includ statement","155":"usual declar begin use program alway contain name data type","156":"insid method","157":"top","158":"global variabl declar bodi code local variabl declar function use unless function pass variabl variabl alway declar use","159":"variabl usual declar begin modul c code","160":"main function usual top codethey declar almost anywher must declar code use act upon","161":"begin program main start","162":"declar function statement statementsin bodi statement namespac leader etc almost anywher anywher program long line","163":"declar variabl data type","164":"anywher code top middl code anywher","165":"use","166":"anywher scope use","167":"variabl declar class method","168":"insid function scope outsid function scope case global variabl","169":"global variabl declar main functionloc variabl declar function","170":"variabl usual declar begin c program declar program long appear call upon","171":"variabl declar main function oper attempt variabl","172":"anywher declar depend want access scope","173":"depend it global declar side sourc code use everi scope howev local variabl one declar local function etc obvious doesn't need declar outsid variabl see use function block call","174":"\u201cdo\u201d statement first evalu condit execut line code statement 0 time \u201cdo while\u201d statement execut line code evalu condit","175":"dowhil statement evalu whether loop run block contain within least main differ statement possibl never use statement hand alway run least evalu whether run","176":"main differ dowhil loop dowhil loop alway cycl loop least loop alway","177":"loop use execut block code long condit true dowhil loop use execut block code long condit satisfi differ dowhil loop test condit execut content dowhil loop test condit execut content least","178":"termin condit dowhil statement usual end loop run least statement condit fals begin loop never run","179":"loop check statement make sure true execut loop execut check statement see run","180":"statement test condit loop first chanc loop never run dowhil loop alway run test determin run","181":"loop alway execut loop condit statement true run","182":"name","183":"statement evalu statement execut cycl loop includ first cycl mean loop alway execut dowhil run evalu statement run cycl loop ensur loop alway execut least one time","184":"main differ dowhil statement dowhil statement statement block alway execut least statement execut condit true","185":"loop dowhil statement alway execut","186":"statement process statement met dowhil alway process continu statement met","187":"run embed code least command necessarili","188":"test true first run dowhil run first check","189":"dowhil statement bodi alway execut least statement execut unless condit true","190":"statement within block loop alway execut least regardless condit wherea loop may never execut condit met","191":"loop alway run loopperform test run loop","192":"statement test condit starta dowhil statement loop condit test","193":"loop termin begin loop dowhil termin end loop","194":"loop bodi alway execut least","195":"loop evalu express top loop decid need execut dowhil alway execut least evalu express bottom loop","196":"dowhil statement alway execut piec code least check condit statement alway check condit first","197":"dowhil pass least 1 time check condit howev would fail enter loop condit fail first place","198":"loop check condit true first true excus statementa loop execut statement check condit condit true would excus statement dowhil loop would excus statement least","199":"answer","200":"dowhil loop alway execut least loop may never execut depend condit","201":"loop precheck check condit statement execut code within blocka loop postcheck check condit block execut run least matter condit statement","202":"main differ dowhil statementth construct consist block code condit first code within block execut condit evacu done prove fals differ loop test condit code within block execut","203":"us usual set get displaymessg messag tell properti class reveal implement could anyth want class definit","204":"attribut said class also whether subclass also whether public privat protect","205":"inform tell compil data member member function belong class","206":"sinc class user defin bodi declar contain member either data function declar ration access specifi exampl specifi would public privat protect eyford glass glass bodi enclos bracket","207":"object data","208":"specif class name includ inform defin class implement detail etc","209":"data member member function","210":"class definit usual contain function data member","211":"data member member function","212":"member function","213":"member function data member belong class","214":"public privat area includ function variabl use class","215":"eyford class follow class name insid declar public privat declar class","216":"class definit typic includ function definit","217":"begin glass follow class name usual construct data member member function delin class includ class definit","218":"data method","219":"construct function variabl access class possibl class depend done","220":"member function data member","221":"public section privat section must semicolon set end","222":"member function data member","223":"data member member function","224":"data member member function","225":"class name public data type contractor method function","226":"construct sever data member least one public data member method","227":"class name two cur prenthesi public privat","228":"data member member function","229":"data function","230":"function data member belong class","231":"class variabl function definit class","232":"class expand concept data structur hold data function execut","233":"data member data compon particular class member function sanction compon class","234":"field variabl variabl declar member class local variabl variabl declar local method","235":"data member declar insid class outsid member function unlik local variabl object class keep copi data member store memori","236":"data member variabl repres attribut class definit local variabl declar function bodi cannot use outsid function bodi function termin valu local variabl lost","237":"local variabl cannot access outsid function declar data member normal privat variabl function declar privat access member function class declar","238":"data member part c class structur store data certain type local variabl insid member function avail insid function use deriv desir outcom","239":"local variabl access within scope declar","240":"data member attribut function use outsid functionloc variabl use outsid function valu lost function termin","241":"data member perman attribut class local variabl insid member function lost scope member function end","242":"data member declar class definit outsid bodi class memberfunct definit local variabl declar function definit bodi","243":"data member local access local variabl access insid member function","244":"variabl insid member function access insid member data member access throughout program","245":"local variabl use within scope declar","246":"data member general term describ object instanti within member function local local variabl refer scope variabl may locat anyth control structur class local variabl whose scope member function data member member function","247":"data member exist perman program memori long runa local variabl insid member function tempor use oper function exist long function run","248":"local variabl use within function data member set public access use throughout","249":"local variabl lost exist block code data member","250":"member function access modifi data membera local variabl use line declar next close lost memori","251":"data member access function class local variabl avail member function valu lost function close","252":"data member variabl declar insid class definit outsid bodi class member function local variabl use within function declar","253":"data member access outsid class wherea local variabl cannot","254":"local variabl cannot use outsid function bodi function termin valu local variabl lost data member variabl class definit exist throughout life object","255":"local variabl member function static data member chang valu freeli","256":"local variabl unabl within function defin wherea data member avail method within class","257":"variabl declar function definit bodi cannot use outsid functiondata member access member function class","258":"data member local variabl declar function definit bodythey cannot use outsid function bodywhen function termin valu local variabl lost","259":"local variabl avail function","260":"local variabl access insid member function data member access throughout class","261":"data member access anywher class local variabl member function access particular function freed function exist","262":"data member encapsul within class object static share instanc class howev local variabl use function block declar whole class wise would call global variabl","263":"construct initi object object class function class perform task display line text kind mathemat oper","264":"contractor function function contractor also function near infinit purpos contractor alway creat instanc whichev class use chang construct someth function chang also","265":"unlik regular function contractor use initi object data creat constructor must also given name class cannot return valu","266":"construct typic use intial data member alloc resourc instanc memori file etc also construct cannot return valu function oper mayb local defin","267":"constructor cannot return valu cannot specifi return type normal contractor declar public","268":"construct method start new instanc class exampl employe employeesparamet start new instanc object type employe function simpli modul win program complet singl desir task","269":"construct call whenev new object class made","270":"construct return date return typefunct return date return data return type","271":"construct automat call whenev instanc class creat function must explicit call user","272":"contractor cannot return valu cannot specifi return type like function","273":"construct function use initi object data creat","274":"construct initi everyth noth left empti random varioubl function modifi variabl data","275":"construct initi valu execut instanti provid default valu","276":"construct set default valu variabl object instanti wherea function allow interact object","277":"construct use creat object employ main function program may may execut code along ita function set code execut call creat new object","278":"construct initi data member function actual perform task constructor return valu either","279":"construct need type use initi variabl","280":"constructor return type","281":"construct creat class object memori function perform action object","282":"contractor cannot return valu","283":"construct initi valu function usual perform sort oper","284":"construct function use initi object data creat call made implicit object creat must defin name class instructor also cannot return valu like function","285":"construct use creat instanc class name class function cannot name class comput data","286":"construct function initi class instanc function perform whatev task written","287":"construct cannot return valu even void function get return valu","288":"construct cannot return valu even void use initi object data createdwherea function creat specif task return valu","289":"construct initi object function part object","290":"contractor initi data use calcul function","291":"construct call class creat function call time","292":"construct special block statement call object creat either declar ecstat construct stick howev function portion code within larger program perform specif task independ rest code","293":"compil creat default construct defin one class file","294":"compil","295":"class explicit includ construct","296":"paramet set default construct use","297":"class explicit includ construct","298":"argument pass","299":"one alreadi specif class","300":"program compil","301":"construct provid programm class","302":"class explicit includ construct","303":"main function code","304":"whenev dont specif","305":"non provid","306":"c creat default construct construct present","307":"construct specifi construct class class instanti program","308":"construct exist one need parameterless default construct declar","309":"compil creat automat unless specif creat one","310":"class explicit includ construct","311":"userdefin construct exist","312":"class explicit includ construct compil creat one","313":"provid construct","314":"class explicit includ construct","315":"c creat default construct compil one provid","316":"class explicit includ construct","317":"compil provid one class explicit includ conductor","318":"programm explicit includ construct","319":"one explicit state","320":"one explicit includ class","321":"dont specifi contractor","322":"begin run compli matter fact c generat default construct class provid contractor provid user","323":"must one per class","324":"mani want long differ paramet","325":"limit number contractor class like function contractor overload","326":"depend type class defin typic would construct call object","327":"c construct overload one construct class differ paramet","328":"1","329":"number want","330":"one","331":"default one may overload creat mani contractor necessari","332":"mani want","333":"mani want differ paramet","334":"infinit","335":"mani need","336":"mani need depend mani variabl one wish direct modifi leav default instanti object","337":"larg amount contractor creat given class overlook two contractor differ type number paramet creat said overload c recogn construct use base type variabl passedreturn","338":"depend number object object construct","339":"theoret unlimit long defin programm","340":"mani need","341":"mani wantedneed","342":"sever","343":"one","344":"one","345":"infinit contractor long signatur differ","346":"depend number data member class","347":"one","348":"overcoat contractor need","349":"mani programm want creat","350":"one","351":"mani want long uniqu argument list","352":"mani user decid use","353":"function definit requir addit inform need pass insid parenthesi execut definit prototyp requir one paramet pass order complet task","354":"function prototyp programm declar hesh use function main like declar variabl programm know hesh use futur yet say go use answer question give function name charact function prototyp common practic place begin program includ main function definit gun function programm decid function go tell take whatev inform given perform oper work sort like brain brain take input base upon input perform way produc output function definit place outsid main function function entiti thought","355":"function prototyp tell compil function name return type number type paramet without reveal implement contain function definit","356":"function prototyp declar function definit wmultipl paramet often requir one piec inform perform task","357":"function prototyp declar function tell compil function name return type type paramet","358":"prototyp show return type necessari paramet definit includ name paramet defin object actual capabl","359":"prototyp tell user data type go function type return","360":"function prototyp locat h file contain access function name paramet typefunct definit contain code function perform activ","361":"function prototyp use refer compil function defin later function definit actual function complet return type paramet etc","362":"function prototyp describ class public interfac without reveal class member function implement","363":"function definit definit prototyp compil use check call function correct","364":"prototyp includ actual code function code execut program","365":"prototyp declar use program definit","366":"function prototyp lay name return type number type paramet function expect receiv certain order detail function prototyp function definit","367":"function definit code defin function place bracket determin function operationa function prototyp show function public interfac without expos implement show name return type type paramet","368":"function prototyp declar function exist use actual function function creat definit within tell compil function","369":"prototyp creat framework call function definit function definit function actual programm creat final product","370":"function prototyp describ class public interfac without provid function worksa function definit contain inner work function","371":"prototyp state function class compil definit actual hold sourc function","372":"function prototyp tell compil function name return type type paramet function definit actual implement member function","373":"function prototyp specifi paramet function definit includ paramet code bodi","374":"function prototyp describ class public interfac","375":"prototyp declar name return type input typea definit also defin scope variabl process return function","376":"function prototyp simpli declar function paramet function definit includ necessari variabl function actual code","377":"function prototyp declar function function definit specifi function","378":"function prototyp includ return type name function paramet neededin function definit write code function","379":"function definit contain code function work function prototyp show output input function name","380":"function prototyp describ class public interfac without reveal class member function implement function definit show implement done","381":"function prototyp name function return type argument list definit defin well function actual","382":"function prototyp describ class interfac without revis whatev insid function definit cannot","383":"role header file list function class hide inner work function","384":"main role header file use share inform among various file","385":"leader file separ file class defin allow compil recogn class use elsewher","386":"","387":"header file consist reliabl sourc code class file convent h filenam extens differ pp file contain sourcecod","388":"provid inform content librari includ definit class declar function data type constant","389":"header file show user type go come function allow user manipul actual code function","390":"leader file declar class member function","391":"header file allow separ declar implement separ file","392":"header file access c standard librari make certain class like class string work","393":"\u201cinstruct\u201d compil interfac librari userwritten compon","394":"creat common area contain reliabl function","395":"declar function use class","396":"includ hath allow use hat contain call act pull name hat header file hat includ function storag retriev content main put week pull","397":"hold reliabl content nodul separ actual sourcecod file easili refer employ differ program","398":"header file file use store list promot function data member","399":"header file cross communic method sourc file help limit size individu program without header file program 1 larg lump code thus fair hard debut travers","400":"contain reliabl sourc code use class","401":"separ sourc code main function allow methodsclass includ program without direct come allow liabil","402":"leader file reliabl sourc code file program use","403":"hide definit detail class also help reliabl main c file","404":"allow compil recogn class use elsewher","405":"header file declar class data function avail class","406":"header file contain code use multipl file","407":"allow compil recogn class use elsewher","408":"allow compil recogn class use elsewher","409":"promot function reusuablit","410":"class definit place","411":"header file usual contain class andor function prototyp","412":"contain standard c librari ie string"},"keyStem":{"0":"simul behaviour portion desir softwar product","1":"simul behaviour portion desir softwar product","2":"simul behaviour portion desir softwar product","3":"simul behaviour portion desir softwar product","4":"simul behaviour portion desir softwar product","5":"simul behaviour portion desir softwar product","6":"simul behaviour portion desir softwar product","7":"simul behaviour portion desir softwar product","8":"simul behaviour portion desir softwar product","9":"simul behaviour portion desir softwar product","10":"simul behaviour portion desir softwar product","11":"simul behaviour portion desir softwar product","12":"simul behaviour portion desir softwar product","13":"simul behaviour portion desir softwar product","14":"simul behaviour portion desir softwar product","15":"simul behaviour portion desir softwar product","16":"simul behaviour portion desir softwar product","17":"simul behaviour portion desir softwar product","18":"simul behaviour portion desir softwar product","19":"simul behaviour portion desir softwar product","20":"simul behaviour portion desir softwar product","21":"simul behaviour portion desir softwar product","22":"simul behaviour portion desir softwar product","23":"simul behaviour portion desir softwar product","24":"simul behaviour portion desir softwar product","25":"simul behaviour portion desir softwar product","26":"simul behaviour portion desir softwar product","27":"simul behaviour portion desir softwar product","28":"simul behaviour portion desir softwar product","29":"test stage influenc come stage phase 5 solut refin stage phase 7","30":"test stage influenc come stage phase 5 solut refin stage phase 7","31":"test stage influenc come stage phase 5 solut refin stage phase 7","32":"test stage influenc come stage phase 5 solut refin stage phase 7","33":"test stage influenc come stage phase 5 solut refin stage phase 7","34":"test stage influenc come stage phase 5 solut refin stage phase 7","35":"test stage influenc come stage phase 5 solut refin stage phase 7","36":"test stage influenc come stage phase 5 solut refin stage phase 7","37":"test stage influenc come stage phase 5 solut refin stage phase 7","38":"test stage influenc come stage phase 5 solut refin stage phase 7","39":"test stage influenc come stage phase 5 solut refin stage phase 7","40":"test stage influenc come stage phase 5 solut refin stage phase 7","41":"test stage influenc come stage phase 5 solut refin stage phase 7","42":"test stage influenc come stage phase 5 solut refin stage phase 7","43":"test stage influenc come stage phase 5 solut refin stage phase 7","44":"test stage influenc come stage phase 5 solut refin stage phase 7","45":"test stage influenc come stage phase 5 solut refin stage phase 7","46":"test stage influenc come stage phase 5 solut refin stage phase 7","47":"test stage influenc come stage phase 5 solut refin stage phase 7","48":"test stage influenc come stage phase 5 solut refin stage phase 7","49":"test stage influenc come stage phase 5 solut refin stage phase 7","50":"test stage influenc come stage phase 5 solut refin stage phase 7","51":"test stage influenc come stage phase 5 solut refin stage phase 7","52":"test stage influenc come stage phase 5 solut refin stage phase 7","53":"test stage influenc come stage phase 5 solut refin stage phase 7","54":"test stage influenc come stage phase 5 solut refin stage phase 7","55":"test stage influenc come stage phase 5 solut refin stage phase 7","56":"test stage influenc come stage phase 5 solut refin stage phase 7","57":"test stage influenc come stage phase 5 solut refin stage phase 7","58":"abstract reliabl","59":"abstract reliabl","60":"abstract reliabl","61":"abstract reliabl","62":"abstract reliabl","63":"abstract reliabl","64":"abstract reliabl","65":"abstract reliabl","66":"abstract reliabl","67":"abstract reliabl","68":"abstract reliabl","69":"abstract reliabl","70":"abstract reliabl","71":"abstract reliabl","72":"abstract reliabl","73":"abstract reliabl","74":"abstract reliabl","75":"abstract reliabl","76":"abstract reliabl","77":"abstract reliabl","78":"abstract reliabl","79":"abstract reliabl","80":"abstract reliabl","81":"abstract reliabl","82":"abstract reliabl","83":"abstract reliabl","84":"abstract reliabl","85":"abstract reliabl","86":"abstract reliabl","87":"main function","88":"main function","89":"main function","90":"main function","91":"main function","92":"main function","93":"main function","94":"main function","95":"main function","96":"main function","97":"main function","98":"main function","99":"main function","100":"main function","101":"main function","102":"main function","103":"main function","104":"main function","105":"main function","106":"main function","107":"main function","108":"main function","109":"main function","110":"main function","111":"main function","112":"main function","113":"main function","114":"main function","115":"main function","116":"locat memori store valu","117":"locat memori store valu","118":"locat memori store valu","119":"locat memori store valu","120":"locat memori store valu","121":"locat memori store valu","122":"locat memori store valu","123":"locat memori store valu","124":"locat memori store valu","125":"locat memori store valu","126":"locat memori store valu","127":"locat memori store valu","128":"locat memori store valu","129":"locat memori store valu","130":"locat memori store valu","131":"locat memori store valu","132":"locat memori store valu","133":"locat memori store valu","134":"locat memori store valu","135":"locat memori store valu","136":"locat memori store valu","137":"locat memori store valu","138":"locat memori store valu","139":"locat memori store valu","140":"locat memori store valu","141":"locat memori store valu","142":"locat memori store valu","143":"locat memori store valu","144":"locat memori store valu","145":"variabl declar anywher program declar insid function local variabl outsid function global variabl","146":"variabl declar anywher program declar insid function local variabl outsid function global variabl","147":"variabl declar anywher program declar insid function local variabl outsid function global variabl","148":"variabl declar anywher program declar insid function local variabl outsid function global variabl","149":"variabl declar anywher program declar insid function local variabl outsid function global variabl","150":"variabl declar anywher program declar insid function local variabl outsid function global variabl","151":"variabl declar anywher program declar insid function local variabl outsid function global variabl","152":"variabl declar anywher program declar insid function local variabl outsid function global variabl","153":"variabl declar anywher program declar insid function local variabl outsid function global variabl","154":"variabl declar anywher program declar insid function local variabl outsid function global variabl","155":"variabl declar anywher program declar insid function local variabl outsid function global variabl","156":"variabl declar anywher program declar insid function local variabl outsid function global variabl","157":"variabl declar anywher program declar insid function local variabl outsid function global variabl","158":"variabl declar anywher program declar insid function local variabl outsid function global variabl","159":"variabl declar anywher program declar insid function local variabl outsid function global variabl","160":"variabl declar anywher program declar insid function local variabl outsid function global variabl","161":"variabl declar anywher program declar insid function local variabl outsid function global variabl","162":"variabl declar anywher program declar insid function local variabl outsid function global variabl","163":"variabl declar anywher program declar insid function local variabl outsid function global variabl","164":"variabl declar anywher program declar insid function local variabl outsid function global variabl","165":"variabl declar anywher program declar insid function local variabl outsid function global variabl","166":"variabl declar anywher program declar insid function local variabl outsid function global variabl","167":"variabl declar anywher program declar insid function local variabl outsid function global variabl","168":"variabl declar anywher program declar insid function local variabl outsid function global variabl","169":"variabl declar anywher program declar insid function local variabl outsid function global variabl","170":"variabl declar anywher program declar insid function local variabl outsid function global variabl","171":"variabl declar anywher program declar insid function local variabl outsid function global variabl","172":"variabl declar anywher program declar insid function local variabl outsid function global variabl","173":"variabl declar anywher program declar insid function local variabl outsid function global variabl","174":"block insid dowhil statement execut least","175":"block insid dowhil statement execut least","176":"block insid dowhil statement execut least","177":"block insid dowhil statement execut least","178":"block insid dowhil statement execut least","179":"block insid dowhil statement execut least","180":"block insid dowhil statement execut least","181":"block insid dowhil statement execut least","182":"block insid dowhil statement execut least","183":"block insid dowhil statement execut least","184":"block insid dowhil statement execut least","185":"block insid dowhil statement execut least","186":"block insid dowhil statement execut least","187":"block insid dowhil statement execut least","188":"block insid dowhil statement execut least","189":"block insid dowhil statement execut least","190":"block insid dowhil statement execut least","191":"block insid dowhil statement execut least","192":"block insid dowhil statement execut least","193":"block insid dowhil statement execut least","194":"block insid dowhil statement execut least","195":"block insid dowhil statement execut least","196":"block insid dowhil statement execut least","197":"block insid dowhil statement execut least","198":"block insid dowhil statement execut least","199":"block insid dowhil statement execut least","200":"block insid dowhil statement execut least","201":"block insid dowhil statement execut least","202":"block insid dowhil statement execut least","203":"data member attribut member function","204":"data member attribut member function","205":"data member attribut member function","206":"data member attribut member function","207":"data member attribut member function","208":"data member attribut member function","209":"data member attribut member function","210":"data member attribut member function","211":"data member attribut member function","212":"data member attribut member function","213":"data member attribut member function","214":"data member attribut member function","215":"data member attribut member function","216":"data member attribut member function","217":"data member attribut member function","218":"data member attribut member function","219":"data member attribut member function","220":"data member attribut member function","221":"data member attribut member function","222":"data member attribut member function","223":"data member attribut member function","224":"data member attribut member function","225":"data member attribut member function","226":"data member attribut member function","227":"data member attribut member function","228":"data member attribut member function","229":"data member attribut member function","230":"data member attribut member function","231":"data member attribut member function","232":"data member attribut member function","233":"data member access member function insid class definit local variabl access insid member function defin","234":"data member access member function insid class definit local variabl access insid member function defin","235":"data member access member function insid class definit local variabl access insid member function defin","236":"data member access member function insid class definit local variabl access insid member function defin","237":"data member access member function insid class definit local variabl access insid member function defin","238":"data member access member function insid class definit local variabl access insid member function defin","239":"data member access member function insid class definit local variabl access insid member function defin","240":"data member access member function insid class definit local variabl access insid member function defin","241":"data member access member function insid class definit local variabl access insid member function defin","242":"data member access member function insid class definit local variabl access insid member function defin","243":"data member access member function insid class definit local variabl access insid member function defin","244":"data member access member function insid class definit local variabl access insid member function defin","245":"data member access member function insid class definit local variabl access insid member function defin","246":"data member access member function insid class definit local variabl access insid member function defin","247":"data member access member function insid class definit local variabl access insid member function defin","248":"data member access member function insid class definit local variabl access insid member function defin","249":"data member access member function insid class definit local variabl access insid member function defin","250":"data member access member function insid class definit local variabl access insid member function defin","251":"data member access member function insid class definit local variabl access insid member function defin","252":"data member access member function insid class definit local variabl access insid member function defin","253":"data member access member function insid class definit local variabl access insid member function defin","254":"data member access member function insid class definit local variabl access insid member function defin","255":"data member access member function insid class definit local variabl access insid member function defin","256":"data member access member function insid class definit local variabl access insid member function defin","257":"data member access member function insid class definit local variabl access insid member function defin","258":"data member access member function insid class definit local variabl access insid member function defin","259":"data member access member function insid class definit local variabl access insid member function defin","260":"data member access member function insid class definit local variabl access insid member function defin","261":"data member access member function insid class definit local variabl access insid member function defin","262":"data member access member function insid class definit local variabl access insid member function defin","263":"construct call whenev object creat wherea function need","264":"construct call whenev object creat wherea function need","265":"construct call whenev object creat wherea function need","266":"construct call whenev object creat wherea function need","267":"construct call whenev object creat wherea function need","268":"construct call whenev object creat wherea function need","269":"construct call whenev object creat wherea function need","270":"construct call whenev object creat wherea function need","271":"construct call whenev object creat wherea function need","272":"construct call whenev object creat wherea function need","273":"construct call whenev object creat wherea function need","274":"construct call whenev object creat wherea function need","275":"construct call whenev object creat wherea function need","276":"construct call whenev object creat wherea function need","277":"construct call whenev object creat wherea function need","278":"construct call whenev object creat wherea function need","279":"construct call whenev object creat wherea function need","280":"construct call whenev object creat wherea function need","281":"construct call whenev object creat wherea function need","282":"construct call whenev object creat wherea function need","283":"construct call whenev object creat wherea function need","284":"construct call whenev object creat wherea function need","285":"construct call whenev object creat wherea function need","286":"construct call whenev object creat wherea function need","287":"construct call whenev object creat wherea function need","288":"construct call whenev object creat wherea function need","289":"construct call whenev object creat wherea function need","290":"construct call whenev object creat wherea function need","291":"construct call whenev object creat wherea function need","292":"construct call whenev object creat wherea function need","293":"construct provid compil provid one default construct defin class compil creat default construct","294":"construct provid compil provid one default construct defin class compil creat default construct","295":"construct provid compil provid one default construct defin class compil creat default construct","296":"construct provid compil provid one default construct defin class compil creat default construct","297":"construct provid compil provid one default construct defin class compil creat default construct","298":"construct provid compil provid one default construct defin class compil creat default construct","299":"construct provid compil provid one default construct defin class compil creat default construct","300":"construct provid compil provid one default construct defin class compil creat default construct","301":"construct provid compil provid one default construct defin class compil creat default construct","302":"construct provid compil provid one default construct defin class compil creat default construct","303":"construct provid compil provid one default construct defin class compil creat default construct","304":"construct provid compil provid one default construct defin class compil creat default construct","305":"construct provid compil provid one default construct defin class compil creat default construct","306":"construct provid compil provid one default construct defin class compil creat default construct","307":"construct provid compil provid one default construct defin class compil creat default construct","308":"construct provid compil provid one default construct defin class compil creat default construct","309":"construct provid compil provid one default construct defin class compil creat default construct","310":"construct provid compil provid one default construct defin class compil creat default construct","311":"construct provid compil provid one default construct defin class compil creat default construct","312":"construct provid compil provid one default construct defin class compil creat default construct","313":"construct provid compil provid one default construct defin class compil creat default construct","314":"construct provid compil provid one default construct defin class compil creat default construct","315":"construct provid compil provid one default construct defin class compil creat default construct","316":"construct provid compil provid one default construct defin class compil creat default construct","317":"construct provid compil provid one default construct defin class compil creat default construct","318":"construct provid compil provid one default construct defin class compil creat default construct","319":"construct provid compil provid one default construct defin class compil creat default construct","320":"construct provid compil provid one default construct defin class compil creat default construct","321":"construct provid compil provid one default construct defin class compil creat default construct","322":"construct provid compil provid one default construct defin class compil creat default construct","323":"unlimit number","324":"unlimit number","325":"unlimit number","326":"unlimit number","327":"unlimit number","328":"unlimit number","329":"unlimit number","330":"unlimit number","331":"unlimit number","332":"unlimit number","333":"unlimit number","334":"unlimit number","335":"unlimit number","336":"unlimit number","337":"unlimit number","338":"unlimit number","339":"unlimit number","340":"unlimit number","341":"unlimit number","342":"unlimit number","343":"unlimit number","344":"unlimit number","345":"unlimit number","346":"unlimit number","347":"unlimit number","348":"unlimit number","349":"unlimit number","350":"unlimit number","351":"unlimit number","352":"unlimit number","353":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","354":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","355":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","356":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","357":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","358":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","359":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","360":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","361":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","362":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","363":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","364":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","365":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","366":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","367":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","368":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","369":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","370":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","371":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","372":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","373":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","374":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","375":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","376":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","377":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","378":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","379":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","380":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","381":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","382":"function prototyp includ function signatur ie name function return type paramet type function definit includ actual bodi function","383":"store class interfac includ data member member function prototyp","384":"store class interfac includ data member member function prototyp","385":"store class interfac includ data member member function prototyp","386":"store class interfac includ data member member function prototyp","387":"store class interfac includ data member member function prototyp","388":"store class interfac includ data member member function prototyp","389":"store class interfac includ data member member function prototyp","390":"store class interfac includ data member member function prototyp","391":"store class interfac includ data member member function prototyp","392":"store class interfac includ data member member function prototyp","393":"store class interfac includ data member member function prototyp","394":"store class interfac includ data member member function prototyp","395":"store class interfac includ data member member function prototyp","396":"store class interfac includ data member member function prototyp","397":"store class interfac includ data member member function prototyp","398":"store class interfac includ data member member function prototyp","399":"store class interfac includ data member member function prototyp","400":"store class interfac includ data member member function prototyp","401":"store class interfac includ data member member function prototyp","402":"store class interfac includ data member member function prototyp","403":"store class interfac includ data member member function prototyp","404":"store class interfac includ data member member function prototyp","405":"store class interfac includ data member member function prototyp","406":"store class interfac includ data member member function prototyp","407":"store class interfac includ data member member function prototyp","408":"store class interfac includ data member member function prototyp","409":"store class interfac includ data member member function prototyp","410":"store class interfac includ data member member function prototyp","411":"store class interfac includ data member member function prototyp","412":"store class interfac includ data member member function prototyp"},"studentSplit":{"0":["high","risk","problems","address","prototype","program","make","sure","program","feasible","prototype","may","also","used","show","company","software","possibly","programme"],"1":["simulate","portions","desired","final","product","quick","easy","program","small","specific","job","way","help","see","problem","may","solve","final","project"],"2":["prototype","program","simulates","behavior","portions","desired","software","product","allow","error","checking"],"3":["defined","specification","phase","prototype","stimulated","behavior","portions","desired","software","product","meaning","role","prototype","temporary","solution","program","refined","used","extensively","problem","solving"],"4":["used","let","users","first","idea","completed","program","allow","clients","evaluate","program","generate","much","feedback","including","software","specification","project","estimation","total","project"],"5":["find","problem","errors","program","penalized"],"6":["address","major","issues","creation","program","way","account","possible","bags","program","possible","prove","program","tangible"],"7":["break","whole","program","prototype","programs","simulate","parts","final","program"],"8":["provide","example","model","finished","program","perform","provides","foresight","challenges","would","encountered","provides","opportunity","introduce","changes","finished","program"],"9":["simulating","behavior","portion","desired","software","product"],"10":["program","stimulated","behavior","portions","desired","software","product"],"11":["program","simulates","behavior","portions","desired","software","product"],"12":["lay","basis","give","starting","point","actual","problem","solving"],"13":["simulate","problem","solving","parts","problem"],"14":["prototype","program","provides","basic","groundwork","enhance","improve","solution","problem"],"15":["prototype","program","part","specification","phase","software","problem","solving","employed","illustrate","key","problem","problems","solved","program","sometimes","serves","base","program","expand","upon"],"16":["program","simulates","behavior","portions","desired","software","product"],"17":["provides","limited","proof","concept","verify","client","actually","programming","whole","application"],"18":["tests","main","function","program","leaving","finer","details"],"19":["get","early","feedback","users","early","stages","development","show","users","first","idea","program","dolook","like","make","sure","program","meet","requirements","intense","programming","begins"],"20":["simulates","behavior","portions","desired","software","product"],"21":["simulates","behavior","portions","desired","software","product"],"22":["prototype","program","used","problem","solving","collect","data","problem"],"23":["ease","understanding","problem","discussion","ease","understanding","program"],"24":["simulates","behavior","portions","desired","software","product"],"25":["role","prototype","program","help","spot","key","problems","may","arise","actual","programming"],"26":["prototype","program","gives","general","idea","end","product","without","time","effort","write","entire","program"],"27":["show","certain","part","program","works","supposed"],"28":["prototype","programming","approach","programming","enables","one","take","organized","approach","developing","effective","program","minimal","errors","strategic","pattern","solving","problem","ie","book","gave","example","costume","withdrawing","money","bank","approach","taking","pseudo","code","level","ooadesign","proceeding","creating","solution"],"29":["defining","possibly","design","testing","phase","reveals","problems","design","production","affected","program","unfordable","current","form","lead","later","production","time","originally","estimated","also","affects","coming","testing","may","need","write","code","program","remove","errors"],"30":["implementation","phase","maintenance","phase","effected"],"31":["purification","coming","refining","solution","maintenance","influenced","testing","stage"],"32":["rup","stages","software","life","cycle","influenced","testing","stage","iselaboration","phase","refined","project","vision","operative","development","core","system","development","system","requirements","accurate","time","cost","estimatesconstruction","phase","operative","development","remaining","systemtransition","phasetesting","employment","system"],"33":["defining","solution","production","maintenance","influenced","resting","stage"],"34":["elaboration","construction","transition","affected","testing"],"35":["defining","production","maintenance"],"36":["defining","solution"],"37":["purification","debugging"],"38":["defining","going"],"39":["second","half","elaboration","phase","construction","phase","transition","phase"],"40":["refining","step","production","step","maintenance","stage"],"41":["elaboration","construction","transition"],"42":["defining"],"43":["testing","stage","direct","influence","final","version","program","debugging","finalization","software","revision"],"44":["directly","defining","coming","defining","right","resting","phase","going","right","resting","phaseindirectly","production","maintenance","defining","occurs","last","two","stages","software","life","cycle"],"45":["resting","refining","production","maintenance"],"46":["depending","work","done","resting","spread","throughout","process","prevent","errors","showing","later","due","lack","foresight"],"47":["elaboration","construction","transition"],"48":["stages","influenced","except","setting","program","requirements","test","fails","change","whole","design","implementation","etc","program","well","final","outcome"],"49":["defining","production","maintenance"],"50":["coming","refining"],"51":["refining","production","maintenance"],"52":["removing","logical","errors","testing","valid","data","random","data","actual","data"],"53":["1","specification","design","risk","analysis","verification5","coming","testing","refining","production","maintenance"],"54":["defining","stage","production","stage","maintenance","stage"],"55":["resting","could","affect","parts","life","cycle","could","make","go","back","specification","test","well"],"56":["coming"],"57":["individual","components","steps","analysis","design","implementing","code","well","entire","system","tested","execution","requirements","identified","analysis","stage","ie","pain","output"],"58":["modularability","ability","refuse","parts","program","later","another","program","sometimes","completely","different","goals","program","also","makes","easier","debut","code","dividing","code","classes","specific","job","program","fails","one","job","one","class","debut","good","security","purposes","allows","let","someone","use","program","sorts","lists","without","give","access","source","code","allows","use","inheritance","polymorphism"],"59":["type","programming","flexible","making","easier","add","modify","program","also","type","fail","safe","program","check","individual","module","eliminates","redundant","code","makes","program","easier","read","programme","debugging","program","easier","track","source","problem","within","module","rather","2","million","line","program"],"60":["main","advantages","objecttormented","programming","existing","classes","refused","program","maintenance","purification","easier"],"61":["advantages","oop","allows","us","build","classes","objects","three","principles","make","oop","areencapsulation","objects","combine","data","operationsinheritance","glasses","inherit","properties","classespolymorphism","objects","determine","appropriate","operations","execution","time"],"62":["advantages","existing","classes","refused","program","maintenance","purification","easier","accomplish"],"63":["object","tormented","programming","allows","programme","use","object","classes","changed","manipulated","affecting","entire","object","classes","hold","attributes","affect","object"],"64":["reusable","components","extensibility","maintainability","reduces","large","problems","smaller","manageable","problems"],"65":["encapsulationobjects","combine","data","operationsinheritance","classes","inherit","properties","classespolymorphism","objects","determine","appropriate","operations","execution","time"],"66":["easier","deluge","reusability"],"67":["heliability","ease","maintenance"],"68":["one","main","advantages","hide","inner","details","technique","known","encapsulation","objects","combine","data","operations","can","not","see","works","another","advantage","refuse","classes","defined","earlier","program","method","known","inheritance","finally","another","advantage","objects","determine","appropriate","operations","execution","time","technique","known","polymorphism"],"69":["existing","classes","refused","program","maintenance","purification","easier"],"70":["using","different","nodules","allows","easier","debugging"],"71":["data","encapsulation","conceptthe","use","functions","methods","manipulate","data"],"72":["nodular","reliable","code","allowing","faster","employment","solutions","general","view","solution"],"73":["going","debugging","programs","usually","easier","either","compilers","specify","object","working","incorrectly","function","object","assigned","easier","identify","code","also","looks","organized","easier","read","help","avoid","redundant","coming","mostprogramming","maintenance","also","easieralso","nodules","refused","several","times","programs","without","much","haste","abstraction","art","breaking","one","big","problem","smaller","simpler","problems","solving","smaller","problems","shared","unique","complex","problems","creating","nodules","solve","smaller","repeated","problems","save","time","encounter"],"74":["variable","remain","private","code","easily","modified","reliable","well","easily","implements","mention","easier","read","follow","along","observer"],"75":["data","abstraction","control","possible","isolate","elementsfrom","elements","lot","easier","prevent","tapering","data"],"76":["encapsulation","objects","use","operations","without","knowing","operation","worksinheritance","cuts","redundancy","refusing","earlier","classespolymorphism","objects","select","correct","operation","use","situation"],"77":["make","easier","refuse","adapt","previously","written","code","separate","complex","programs","smaller","easier","understand","classes"],"78":["existing","classes","refused","program","maintenance","purification","easier"],"79":["existing","classes","fused","program","maintenance","purification","easier"],"80":["main","advantages","objecttormented","programming","data","abstraction","easier","maintenance","reliability"],"81":["existing","classes","reusedprogram","maintenance","verifications","easy"],"82":["1","existing","classes","refused","program","maintenance","purification","easier"],"83":["information","hidden","easier","debut","programming","easier","manageable"],"84":["existing","classes","refused","program","maintenance","purification","easier"],"85":["existing","classes","reusedprogram","maintenance","purification","easier"],"86":["well","one","encapsulation","values","variable","inside","object","private","unless","methods","written","pass","outside","object","well","inheritance","subclass","inherit","variable","methods","super","class","example","book","included","obs","clock","obs","alarm","would","still","use","clock","first","class"],"87":["function","\u2018","in","main","\u2019"],"88":["function","main"],"89":["c","programs","begin","execute","main","method"],"90":["c","program","begin","execute","main","function"],"91":["begin","main","function"],"92":["ant","main"],"93":["main","method"],"94":["testing","phase"],"95":["main","function"],"96":["main"],"97":["begin","execute","function","main"],"98":["main","method"],"99":["root"],"100":["main","function"],"101":["c","programs","begin","execution","main"],"102":["pain","function"],"103":["main","function"],"104":["main","function"],"105":["function","main"],"106":["loading","required","include","statements","libraries","main","method","begins","execution"],"107":["main","function"],"108":["main"],"109":["c","programs","begin","execution","main","function"],"110":["main"],"111":["excuse","main"],"112":["main","functionint","main"],"113":["c","programs","begin","execution","main","function"],"114":["main","function"],"115":["within","main","function"],"116":["variable","inter","string","program"],"117":["programming","structure","holds","data","unique","named","programme","holds","data","assigned","new","value","assigned","program","finished"],"118":["variable","location","memory","value","stored"],"119":["variable","location","computer","memory","value","stored","later","retrieve","value"],"120":["variable","location","computer","memory","value","stored","use","program","variable","name","value","type","size"],"121":["named","object","hold","numerical","letter","value"],"122":["symbol","name","valuenumber","example","ausednumber","stand","given","number","programme","refer","number","using","variable","name"],"123":["variable","location","computers","memory","value","stored","use","program"],"124":["identified","holds","location","memory"],"125":["block","memory","holds","specific","type","data"],"126":["location","computer","memory","stored","use","program"],"127":["location","memory","value","stored"],"128":["valueword","assume","set","values"],"129":["pointer","location","memory"],"130":["variable","memory","address","specific","type","stored","data","mathematical","perspective","symbol","representing","fixed","definition","changing","values"],"131":["variable","value","subject","change","computer","memory","used","programs","programs","change","value","variable","recall","later","act","directly"],"132":["symbol","stands","value","may","may","change","depending","program"],"133":["slaveholder","hold","information","used","programfor","examplein","hold","1","2","3","4","68","72","256","etcfloat","hold","154","5555","124","5657","88123","etchair","hold","b","c","e","f","4","5","6","p","etc"],"134":["stored","value","used","program"],"135":["way","store","different","values","program","numbers","words","letters","etc"],"136":["object","location","memory","value","stored"],"137":["location","memory","value","stored"],"138":["variable","object","data","stored"],"139":["vocation","memory","value","stored"],"140":["location","memory","value","stored"],"141":["variable","location","computer","memory","value","stored","use","program"],"142":["variable","location","computers","memory","value","stored","use","program"],"143":["location","memory","data","stored","retrieved"],"144":["method","identified","would","say","use","bind","data","object","memory","location","stored","location","accessed","manipulated","later","variable","name","called"],"145":["declared","right","used","good","practice","declare","beginning","program","label","food"],"146":["function","main","using","variable"],"147":["local","variable","declared","inside","method","function","used","beginning","method","global","variable","declared","outside","function","method","generally","functions","defined"],"148":["variable","declared","ever","defined","either","inside","block","locally","outside","block","locally"],"149":["variable","declared","actually","used","declared","main","use","locally"],"150":["good","programming","practice","declared","main","least","declared","used"],"151":["declared","locally","main","method","also","outside","variable","subject","method","scope","within","would","still","declared","beginning","method","inside"],"152":["local","variable","declared","inside","method","global","variable","declared","body"],"153":["main","function"],"154":["locally","entire","program","locally","individual","functions","including","statements"],"155":["usually","declared","beginning","used","program","always","contain","name","data","type"],"156":["inside","method"],"157":["top"],"158":["global","variable","declared","body","code","local","variable","declared","function","used","unless","function","passed","variable","variable","always","declared","use"],"159":["variable","usually","declared","beginning","module","c","code"],"160":["main","function","usually","top","codethey","declared","almost","anywhere","must","declared","code","use","act","upon"],"161":["beginning","program","main","starts"],"162":["declaration","functions","statements","statementsin","body","statements","namespaces","leaders","etc","almost","anywhere","anywhere","program","long","line"],"163":["declaration","variable","data","type"],"164":["anywhere","code","top","middle","code","anywhere"],"165":["used"],"166":["anywhere","scope","used"],"167":["variable","declared","classes","methods"],"168":["inside","function","scope","outside","function","scope","case","global","variable"],"169":["global","variable","declared","main","functionlocal","variable","declared","function"],"170":["variable","usually","declared","beginning","c","program","declared","program","long","appear","called","upon"],"171":["variable","declared","main","function","operation","attempted","variable"],"172":["anywhere","declare","depends","want","accessible","scope"],"173":["depends","it","\u2019","s","global","declared","side","source","code","used","every","scope","however","local","variable","one","declared","local","function","etc","obviously","doesn","\u2019","t","need","declared","outside","variable","seeing","used","function","block","called"],"174":["\u201c","do","\u201d","statement","first","evaluate","condition","executed","lines","code","statement","0","times","\u201c","do","while","\u201d","statement","executed","lines","code","evaluate","condition"],"175":["dowhile","statements","evaluate","whether","loop","running","block","contained","within","least","main","difference","statements","possibility","never","used","statements","hand","always","run","least","evaluation","whether","run"],"176":["main","difference","dowhile","loop","dowhile","loop","always","cycle","loop","least","loop","always"],"177":["loop","used","execute","block","code","long","condition","true","dowhile","loop","used","execute","block","code","long","condition","satisfied","difference","dowhile","loop","tests","condition","execution","contents","dowhile","loop","tests","condition","execution","contents","least"],"178":["termination","condition","dowhile","statement","usually","end","loop","run","least","statement","condition","false","begin","loop","never","run"],"179":["loop","check","statement","make","sure","true","executing","loop","execute","checking","statement","see","run"],"180":["statement","test","condition","loop","first","chance","loop","never","run","dowhile","loop","always","run","test","determine","run"],"181":["loop","always","executed","loop","conditional","statement","true","run"],"182":["name"],"183":["statements","evaluate","statement","executing","cycle","loop","including","first","cycle","meaning","loop","always","execute","dowhile","run","evaluate","statement","running","cycle","loop","ensuring","loop","always","executed","least","one","time"],"184":["main","difference","dowhile","statement","dowhile","statement","statements","block","always","executed","least","statement","execute","condition","true"],"185":["loop","dowhile","statement","always","executed"],"186":["statement","process","statement","met","dowhile","always","process","continue","statement","met"],"187":["runs","embedded","code","least","command","necessarily"],"188":["tests","true","first","running","dowhile","runs","first","checking"],"189":["dowhile","statement","body","always","executed","least","statement","execute","unless","condition","true"],"190":["statements","within","block","loop","always","executed","least","regardless","conditions","whereas","loops","may","never","executed","conditions","met"],"191":["loop","always","run","loopperforms","test","running","loop"],"192":["statement","tests","condition","starta","dowhile","statement","loops","condition","tested"],"193":["loop","terminates","beginning","loop","dowhile","terminates","end","loop"],"194":["loop","body","always","executed","least"],"195":["loop","evaluate","expression","top","loop","decides","needs","execute","dowhile","always","executed","least","evaluate","expression","bottom","loop"],"196":["dowhile","statement","always","execute","piece","code","least","checking","condition","statement","always","check","condition","first"],"197":["dowhile","passes","least","1","time","checking","condition","however","would","fail","enter","loop","condition","fails","first","place"],"198":["loop","checks","condition","true","first","true","excuses","statementa","loop","executed","statement","checks","condition","condition","true","would","excuse","statement","dowhile","loop","would","excuse","statement","least"],"199":["answer"],"200":["dowhile","loop","always","execute","least","loop","may","never","execute","depending","conditions"],"201":["loop","precheck","checks","condition","statement","executed","code","within","blocka","loop","postcheck","checks","condition","block","executed","runs","least","matter","condition","statement"],"202":["main","difference","dowhile","statementthe","construct","consists","block","code","condition","first","code","within","block","executed","condition","evacuated","done","prove","false","difference","loop","tests","condition","code","within","block","executed"],"203":["us","usually","set","get","displaymessge","messages","tell","properties","class","reveal","implementation","could","anything","want","class","definition"],"204":["attributes","said","class","also","whether","subclass","also","whether","public","private","protected"],"205":["information","telling","compilers","data","members","member","functions","belong","class"],"206":["since","class","user","defined","body","declaration","contain","members","either","data","function","declarations","rationally","access","specified","example","specified","would","public","private","protected","eyford","glass","glass","body","enclosed","brackets"],"207":["object","data"],"208":["specific","class","name","includes","information","defined","class","implementation","details","etc"],"209":["data","members","member","functions"],"210":["class","definition","usually","contains","function","data","members"],"211":["data","members","member","functions"],"212":["member","functions"],"213":["member","functions","data","members","belonging","class"],"214":["public","private","area","includes","functions","variable","used","class"],"215":["eyford","class","followed","class","name","inside","declare","public","private","declarations","class"],"216":["class","definition","typically","includes","function","definitions"],"217":["begins","glass","followed","class","name","usually","construction","data","members","member","functions","delineates","class","included","class","definition"],"218":["data","methods"],"219":["construction","functions","variable","accessible","class","possibly","classes","depending","done"],"220":["member","functions","data","members"],"221":["public","section","private","section","must","semicolon","set","end"],"222":["member","functions","data","members"],"223":["data","members","member","functions"],"224":["data","members","member","functions"],"225":["class","name","public","data","types","contractors","methods","functions"],"226":["construction","several","data","members","least","one","public","data","member","method"],"227":["class","name","two","curly","prenthesis","public","private"],"228":["data","members","member","functions"],"229":["data","functions"],"230":["functions","data","members","belong","class"],"231":["class","variable","function","definitions","class"],"232":["class","expanded","concept","data","structure","holds","data","functions","executed"],"233":["data","members","data","components","particular","class","member","function","sanctioning","components","class"],"234":["field","variable","variable","declared","member","class","local","variable","variable","declared","local","method"],"235":["data","members","declared","inside","class","outside","member","functions","unlike","local","variable","object","class","keeps","copy","data","members","stored","memory"],"236":["data","member","variable","represent","attribute","class","definition","local","variable","declared","function","body","can","not","used","outside","function","body","function","terminates","values","local","variable","lost"],"237":["local","variable","can","not","accessed","outside","function","declared","data","members","normally","private","variable","functions","declared","private","accessible","member","functions","class","declared"],"238":["data","member","part","c","class","structure","stores","data","certain","type","local","variable","inside","member","function","available","inside","function","used","derive","desired","outcome"],"239":["local","variable","accessed","within","scope","declaration"],"240":["data","members","attributes","function","used","outside","functionlocal","variable","used","outside","function","value","lost","function","terminates"],"241":["data","members","permanent","attributes","class","local","variable","inside","member","function","lost","scope","member","function","ends"],"242":["data","members","declared","class","definition","outside","bodies","class","memberfunction","definitions","local","variable","declared","function","definition","body"],"243":["data","member","locally","accessible","local","variable","accessible","inside","member","function"],"244":["variable","inside","member","function","accessed","inside","member","data","member","accessed","throughout","program"],"245":["local","variable","used","within","scope","declaration"],"246":["data","member","general","term","describing","objects","instantiated","within","member","function","local","local","variable","refers","scope","variable","may","located","anything","control","structure","class","local","variable","whose","scope","member","function","data","members","member","functions"],"247":["data","member","exists","permanently","program","memory","long","runa","local","variable","inside","member","function","temporal","used","operate","function","exists","long","function","run"],"248":["local","variable","used","within","function","data","members","set","public","access","used","throughout"],"249":["local","variable","lost","exist","block","code","data","member"],"250":["member","function","access","modify","data","membera","local","variable","used","line","declaration","next","closing","lost","memory"],"251":["data","member","accessible","functions","class","local","variable","available","member","function","value","lost","function","closes"],"252":["data","members","variable","declared","inside","class","definition","outside","bodies","class","member","functions","local","variable","used","within","function","declaration"],"253":["data","member","accessed","outside","class","whereas","local","variable","can","not"],"254":["local","variable","can","not","used","outside","function","body","function","terminates","values","local","variable","lost","data","members","variable","class","definition","exist","throughout","life","object"],"255":["local","variable","member","function","static","data","member","change","value","freely"],"256":["local","variable","unable","within","function","defined","whereas","data","member","available","method","within","class"],"257":["variable","declared","function","definition","body","can","not","used","outside","functiondata","members","accessible","member","function","class"],"258":["data","members","local","variable","declared","function","definition","\u2019","s","bodythey","can","not","used","outside","function","bodywhen","function","terminates","values","local","variable","lost"],"259":["local","variable","available","function"],"260":["local","variable","accessed","inside","member","functions","data","members","accessed","throughout","class"],"261":["data","member","accessible","anywhere","class","local","variable","member","function","accessible","particular","function","freed","function","exist"],"262":["data","member","encapsulated","within","class","object","static","shared","instances","class","however","local","variable","used","function","block","declared","whole","class","wise","would","called","global","variable"],"263":["construction","initiatives","object","objects","class","function","class","perform","task","display","line","text","kind","mathematical","operations"],"264":["contractors","functions","functions","contractors","also","functions","nearly","infinite","purposes","contractors","always","create","instance","whichever","class","using","change","construction","something","functions","change","also"],"265":["unlike","regular","functions","contractors","used","initiative","object","\u2019","s","data","created","constructors","must","also","given","name","class","can","not","return","values"],"266":["construction","typically","used","intialize","data","members","allocate","resources","instance","memory","files","etc","also","construction","can","not","return","values","functions","operations","maybe","locally","defined"],"267":["constructors","can","not","return","values","can","not","specify","return","type","normally","contractors","declared","public"],"268":["construction","method","starts","new","instances","class","example","employee","employeesparameter","starts","new","instance","object","type","employee","function","simply","module","win","program","complete","single","desired","task"],"269":["construction","called","whenever","new","object","class","made"],"270":["construction","return","date","return","typefunctions","return","date","return","data","return","type"],"271":["construction","automatically","called","whenever","instance","class","created","function","must","explicitly","called","user"],"272":["contractors","can","not","return","values","can","not","specify","return","type","like","functions"],"273":["construction","function","used","initiative","object","data","created"],"274":["construction","initiatives","everything","nothing","left","empty","random","varioubles","function","modified","variable","data"],"275":["construction","initialized","values","execution","instantiation","provides","default","values"],"276":["construction","sets","default","values","variable","object","instantiated","whereas","function","allows","interaction","object"],"277":["construction","used","create","object","employed","main","function","program","may","may","execute","code","along","ita","function","set","code","executed","called","create","new","object"],"278":["construction","initiatives","data","members","functions","actually","perform","tasks","constructors","return","values","either"],"279":["construction","need","type","used","initiative","variable"],"280":["constructors","return","type"],"281":["construction","creates","class","object","memory","functions","perform","actions","object"],"282":["contractors","can","not","return","values"],"283":["construction","initiatives","values","function","usual","perform","sort","operation"],"284":["construction","function","used","initiative","object","data","created","call","made","implicitly","object","created","must","defined","name","class","instructor","also","can","not","return","value","like","function"],"285":["construction","used","create","instance","class","name","class","function","can","not","name","class","computer","data"],"286":["construction","function","initiatives","class","instance","function","perform","whatever","task","written"],"287":["construction","can","not","return","values","even","void","function","get","return","value"],"288":["construction","can","not","return","values","even","void","used","initiative","object","data","createdwhereas","function","created","specific","task","return","values"],"289":["construction","initiatives","object","function","part","object"],"290":["contractors","initiative","data","used","calculations","function"],"291":["construction","called","class","created","function","called","time"],"292":["construction","special","block","statements","called","object","created","either","declared","ecstatically","constructed","stick","however","function","portion","code","within","larger","program","perform","specific","task","independent","rest","code"],"293":["compilers","creates","default","construction","define","one","class","file"],"294":["compilation"],"295":["class","explicitly","include","construction"],"296":["parameter","set","default","construction","used"],"297":["class","explicitly","include","construction"],"298":["arguments","passed"],"299":["one","already","specific","class"],"300":["programs","compilers"],"301":["construction","provided","programme","class"],"302":["class","explicitly","include","construction"],"303":["main","function","code"],"304":["whenever","dont","specific"],"305":["non","provided"],"306":["c","create","default","construction","construction","present"],"307":["construction","specified","construction","class","class","instantiated","program"],"308":["construction","exists","one","needed","parameterless","default","construction","declared"],"309":["compilers","creates","automatically","unless","specifically","create","one"],"310":["class","explicitly","include","construction"],"311":["userdefined","construction","exists"],"312":["class","explicitly","include","construction","compilers","creates","one"],"313":["provide","construction"],"314":["class","explicitly","include","construction"],"315":["c","creates","default","construction","compilation","one","provided"],"316":["class","explicitly","include","construction"],"317":["compilers","provide","one","class","explicitly","include","conductor"],"318":["programme","explicitly","include","construction"],"319":["one","explicitly","stated"],"320":["one","explicitly","included","class"],"321":["dont","specify","contractors"],"322":["beginning","run","complied","matter","fact","c","generate","default","construction","class","provided","contractors","provided","user"],"323":["must","one","per","class"],"324":["many","want","long","different","parameter"],"325":["limit","number","contractors","class","like","functions","contractors","overloaded"],"326":["depends","type","class","defined","typically","would","construction","call","object"],"327":["c","construction","overloaded","one","construction","class","different","parameter"],"328":["1"],"329":["number","want"],"330":["one"],"331":["default","one","may","overloaded","create","many","contractors","necessary"],"332":["many","want"],"333":["many","want","different","parameter"],"334":["infinite"],"335":["many","need"],"336":["many","needed","depending","many","variable","one","wishes","directly","modify","leave","default","instantiating","object"],"337":["large","amount","contractors","created","given","class","overlooking","two","contractors","different","type","number","parameter","created","said","overloaded","c","recognize","construction","use","based","type","variable","passedreturned"],"338":["depends","number","objects","object","construction"],"339":["theoretically","unlimited","long","defined","programme"],"340":["many","needed"],"341":["many","wantedneeded"],"342":["several"],"343":["one"],"344":["one"],"345":["infinite","contractors","long","signature","different"],"346":["depends","number","data","members","class"],"347":["one"],"348":["overcoat","contractors","need"],"349":["many","programme","wants","create"],"350":["one"],"351":["many","want","long","unique","argument","list"],"352":["many","user","decides","use"],"353":["function","definition","require","additional","information","needs","passed","inside","parenthesis","execute","definition","prototype","requires","one","parameter","passed","order","complete","task"],"354":["function","prototype","programme","declares","heshe","using","function","main","like","declaring","variable","programme","knows","heshe","using","future","yet","say","going","use","answers","question","gives","function","name","character","function","prototype","common","practice","placed","beginning","program","includes","main","function","definition","guns","function","programme","decides","function","going","tells","takes","whatever","information","given","perform","operations","works","sort","like","brain","brain","takes","input","based","upon","input","perform","way","producing","output","function","definition","placed","outside","main","functions","function","entity","thought"],"355":["function","prototype","tells","compilers","function","name","return","type","number","type","parameter","without","revealing","implementation","contained","function","definition"],"356":["function","prototype","declaration","function","definitions","wmultiple","parameter","often","require","one","piece","information","perform","tasks"],"357":["function","prototype","declaration","function","tells","compilers","function","name","return","type","types","parameter"],"358":["prototype","shows","return","types","necessary","parameter","definition","includes","names","parameter","defines","object","actually","capable"],"359":["prototype","tells","user","data","types","go","function","type","returned"],"360":["function","prototype","located","h","file","contains","access","function","name","parameter","typefunction","definition","contains","code","function","perform","activity"],"361":["function","prototype","used","reference","compilers","function","defined","later","function","definition","actual","function","complete","return","type","parameter","etc"],"362":["function","prototype","describes","class","public","interface","without","revealing","class","member","function","implementation"],"363":["function","definitions","definition","prototype","compilers","uses","check","calls","function","correct"],"364":["prototype","include","actual","code","function","code","executed","program"],"365":["prototype","declares","used","program","definition"],"366":["function","prototype","lays","name","return","type","number","types","parameter","function","expects","receive","certain","order","details","function","prototypes","function","definition"],"367":["function","definition","code","defines","function","placed","brackets","determines","function","operationa","function","prototype","shows","function","public","interface","without","exposing","implementation","shows","name","return","type","type","parameter"],"368":["function","prototype","declaration","function","existing","used","actual","function","function","created","definition","within","tell","compilers","function"],"369":["prototype","creates","framework","call","function","definition","function","definition","function","actually","programme","created","final","product"],"370":["function","prototype","describes","class","public","interface","without","providing","function","worksa","function","definition","contains","inner","workings","function"],"371":["prototype","states","functions","class","compilation","definition","actually","holds","source","functions"],"372":["function","prototypes","tell","compilers","function","names","return","type","types","parameter","function","definitions","actually","implement","member","functions"],"373":["function","prototype","specified","parameter","function","definition","includes","parameter","code","body"],"374":["function","prototypes","describe","class","public","interface"],"375":["prototype","declares","name","return","type","input","typea","definition","also","defines","scope","variable","process","return","function"],"376":["function","prototype","simply","declares","functions","parameter","function","definition","includes","necessary","variable","function","actual","code"],"377":["function","prototype","declaration","function","function","definition","specified","function"],"378":["function","prototype","include","return","type","name","function","parameter","neededin","function","definition","write","code","function"],"379":["function","definition","contains","code","function","work","function","prototype","shows","output","input","function","name"],"380":["function","prototype","describe","class","public","interface","without","revealing","class","member","function","implementation","function","definitions","show","implementation","done"],"381":["function","prototype","names","function","return","type","argument","list","definition","defines","well","function","actually"],"382":["function","prototype","describes","classes","interface","without","revising","whatever","inside","function","definition","can","not"],"383":["role","header","file","list","functions","class","hiding","inner","workings","functions"],"384":["main","role","header","file","used","share","information","among","various","files"],"385":["leader","files","separate","files","classes","defined","allow","compilers","recognize","classes","used","elsewhere"],"386":[],"387":["header","file","consists","reliable","source","code","class","file","convention","h","filename","extension","differs","pp","files","contain","sourcecode"],"388":["provide","information","contents","library","includes","definition","classes","declarations","functions","data","types","constant"],"389":["header","file","shows","user","types","go","come","function","allow","user","manipulate","actual","code","function"],"390":["leader","files","declares","class","member","functions"],"391":["header","file","allows","separation","declaration","implementation","separate","files"],"392":["header","file","access","c","standard","library","makes","certain","classes","like","class","string","work"],"393":["\u201c","instruct","\u201d","compilers","interface","library","userwritten","components"],"394":["create","common","area","contain","reliable","functions"],"395":["declare","functions","used","classes"],"396":["include","hath","allows","use","hat","container","called","act","pulling","names","hat","header","file","hat","includes","functions","storage","retrieved","contents","mainly","put","week","pull"],"397":["hold","reliable","content","nodules","separate","actual","sourcecode","file","easily","reference","employed","different","programs"],"398":["header","file","file","used","store","list","promote","functions","data","members"],"399":["header","file","cross","communication","method","source","files","help","limit","size","individual","program","without","header","files","program","1","large","lump","code","thus","fairly","hard","debut","traverse"],"400":["contains","reliable","source","code","use","classes"],"401":["separate","source","code","main","function","allows","methodsclasses","included","program","without","direct","coming","allows","liability"],"402":["leader","files","reliable","source","code","file","program","use"],"403":["hide","definition","details","class","also","help","reliability","main","c","file"],"404":["allow","compilers","recognize","classes","used","elsewhere"],"405":["header","file","declares","class","data","functions","available","class"],"406":["header","files","contain","code","used","multiple","files"],"407":["allow","compilers","recognize","classes","used","elsewhere"],"408":["allow","compilers","recognize","classes","used","elsewhere"],"409":["promote","function","reusuablitly"],"410":["class","definitions","placed"],"411":["header","file","usually","contains","class","andor","function","prototypes"],"412":["contains","standard","c","library","ie","string"]},"keySplit":{"0":["simulate","behaviour","portions","desired","software","product"],"1":["simulate","behaviour","portions","desired","software","product"],"2":["simulate","behaviour","portions","desired","software","product"],"3":["simulate","behaviour","portions","desired","software","product"],"4":["simulate","behaviour","portions","desired","software","product"],"5":["simulate","behaviour","portions","desired","software","product"],"6":["simulate","behaviour","portions","desired","software","product"],"7":["simulate","behaviour","portions","desired","software","product"],"8":["simulate","behaviour","portions","desired","software","product"],"9":["simulate","behaviour","portions","desired","software","product"],"10":["simulate","behaviour","portions","desired","software","product"],"11":["simulate","behaviour","portions","desired","software","product"],"12":["simulate","behaviour","portions","desired","software","product"],"13":["simulate","behaviour","portions","desired","software","product"],"14":["simulate","behaviour","portions","desired","software","product"],"15":["simulate","behaviour","portions","desired","software","product"],"16":["simulate","behaviour","portions","desired","software","product"],"17":["simulate","behaviour","portions","desired","software","product"],"18":["simulate","behaviour","portions","desired","software","product"],"19":["simulate","behaviour","portions","desired","software","product"],"20":["simulate","behaviour","portions","desired","software","product"],"21":["simulate","behaviour","portions","desired","software","product"],"22":["simulate","behaviour","portions","desired","software","product"],"23":["simulate","behaviour","portions","desired","software","product"],"24":["simulate","behaviour","portions","desired","software","product"],"25":["simulate","behaviour","portions","desired","software","product"],"26":["simulate","behaviour","portions","desired","software","product"],"27":["simulate","behaviour","portions","desired","software","product"],"28":["simulate","behaviour","portions","desired","software","product"],"29":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"30":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"31":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"32":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"33":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"34":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"35":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"36":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"37":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"38":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"39":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"40":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"41":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"42":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"43":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"44":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"45":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"46":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"47":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"48":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"49":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"50":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"51":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"52":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"53":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"54":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"55":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"56":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"57":["testing","stage","influence","coming","stage","phase","5","solution","refinement","stage","phase","7"],"58":["abstraction","reliability"],"59":["abstraction","reliability"],"60":["abstraction","reliability"],"61":["abstraction","reliability"],"62":["abstraction","reliability"],"63":["abstraction","reliability"],"64":["abstraction","reliability"],"65":["abstraction","reliability"],"66":["abstraction","reliability"],"67":["abstraction","reliability"],"68":["abstraction","reliability"],"69":["abstraction","reliability"],"70":["abstraction","reliability"],"71":["abstraction","reliability"],"72":["abstraction","reliability"],"73":["abstraction","reliability"],"74":["abstraction","reliability"],"75":["abstraction","reliability"],"76":["abstraction","reliability"],"77":["abstraction","reliability"],"78":["abstraction","reliability"],"79":["abstraction","reliability"],"80":["abstraction","reliability"],"81":["abstraction","reliability"],"82":["abstraction","reliability"],"83":["abstraction","reliability"],"84":["abstraction","reliability"],"85":["abstraction","reliability"],"86":["abstraction","reliability"],"87":["main","function"],"88":["main","function"],"89":["main","function"],"90":["main","function"],"91":["main","function"],"92":["main","function"],"93":["main","function"],"94":["main","function"],"95":["main","function"],"96":["main","function"],"97":["main","function"],"98":["main","function"],"99":["main","function"],"100":["main","function"],"101":["main","function"],"102":["main","function"],"103":["main","function"],"104":["main","function"],"105":["main","function"],"106":["main","function"],"107":["main","function"],"108":["main","function"],"109":["main","function"],"110":["main","function"],"111":["main","function"],"112":["main","function"],"113":["main","function"],"114":["main","function"],"115":["main","function"],"116":["location","memory","store","value"],"117":["location","memory","store","value"],"118":["location","memory","store","value"],"119":["location","memory","store","value"],"120":["location","memory","store","value"],"121":["location","memory","store","value"],"122":["location","memory","store","value"],"123":["location","memory","store","value"],"124":["location","memory","store","value"],"125":["location","memory","store","value"],"126":["location","memory","store","value"],"127":["location","memory","store","value"],"128":["location","memory","store","value"],"129":["location","memory","store","value"],"130":["location","memory","store","value"],"131":["location","memory","store","value"],"132":["location","memory","store","value"],"133":["location","memory","store","value"],"134":["location","memory","store","value"],"135":["location","memory","store","value"],"136":["location","memory","store","value"],"137":["location","memory","store","value"],"138":["location","memory","store","value"],"139":["location","memory","store","value"],"140":["location","memory","store","value"],"141":["location","memory","store","value"],"142":["location","memory","store","value"],"143":["location","memory","store","value"],"144":["location","memory","store","value"],"145":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"146":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"147":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"148":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"149":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"150":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"151":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"152":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"153":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"154":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"155":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"156":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"157":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"158":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"159":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"160":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"161":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"162":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"163":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"164":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"165":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"166":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"167":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"168":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"169":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"170":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"171":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"172":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"173":["variable","declared","anywhere","program","declared","inside","function","local","variable","outside","functions","global","variable"],"174":["block","inside","dowhile","statement","execute","least"],"175":["block","inside","dowhile","statement","execute","least"],"176":["block","inside","dowhile","statement","execute","least"],"177":["block","inside","dowhile","statement","execute","least"],"178":["block","inside","dowhile","statement","execute","least"],"179":["block","inside","dowhile","statement","execute","least"],"180":["block","inside","dowhile","statement","execute","least"],"181":["block","inside","dowhile","statement","execute","least"],"182":["block","inside","dowhile","statement","execute","least"],"183":["block","inside","dowhile","statement","execute","least"],"184":["block","inside","dowhile","statement","execute","least"],"185":["block","inside","dowhile","statement","execute","least"],"186":["block","inside","dowhile","statement","execute","least"],"187":["block","inside","dowhile","statement","execute","least"],"188":["block","inside","dowhile","statement","execute","least"],"189":["block","inside","dowhile","statement","execute","least"],"190":["block","inside","dowhile","statement","execute","least"],"191":["block","inside","dowhile","statement","execute","least"],"192":["block","inside","dowhile","statement","execute","least"],"193":["block","inside","dowhile","statement","execute","least"],"194":["block","inside","dowhile","statement","execute","least"],"195":["block","inside","dowhile","statement","execute","least"],"196":["block","inside","dowhile","statement","execute","least"],"197":["block","inside","dowhile","statement","execute","least"],"198":["block","inside","dowhile","statement","execute","least"],"199":["block","inside","dowhile","statement","execute","least"],"200":["block","inside","dowhile","statement","execute","least"],"201":["block","inside","dowhile","statement","execute","least"],"202":["block","inside","dowhile","statement","execute","least"],"203":["data","members","attributes","member","functions"],"204":["data","members","attributes","member","functions"],"205":["data","members","attributes","member","functions"],"206":["data","members","attributes","member","functions"],"207":["data","members","attributes","member","functions"],"208":["data","members","attributes","member","functions"],"209":["data","members","attributes","member","functions"],"210":["data","members","attributes","member","functions"],"211":["data","members","attributes","member","functions"],"212":["data","members","attributes","member","functions"],"213":["data","members","attributes","member","functions"],"214":["data","members","attributes","member","functions"],"215":["data","members","attributes","member","functions"],"216":["data","members","attributes","member","functions"],"217":["data","members","attributes","member","functions"],"218":["data","members","attributes","member","functions"],"219":["data","members","attributes","member","functions"],"220":["data","members","attributes","member","functions"],"221":["data","members","attributes","member","functions"],"222":["data","members","attributes","member","functions"],"223":["data","members","attributes","member","functions"],"224":["data","members","attributes","member","functions"],"225":["data","members","attributes","member","functions"],"226":["data","members","attributes","member","functions"],"227":["data","members","attributes","member","functions"],"228":["data","members","attributes","member","functions"],"229":["data","members","attributes","member","functions"],"230":["data","members","attributes","member","functions"],"231":["data","members","attributes","member","functions"],"232":["data","members","attributes","member","functions"],"233":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"234":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"235":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"236":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"237":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"238":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"239":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"240":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"241":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"242":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"243":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"244":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"245":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"246":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"247":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"248":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"249":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"250":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"251":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"252":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"253":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"254":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"255":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"256":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"257":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"258":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"259":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"260":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"261":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"262":["data","members","accessed","member","functions","inside","class","definition","local","variable","accessed","inside","member","function","defines"],"263":["construction","called","whenever","object","created","whereas","function","needs"],"264":["construction","called","whenever","object","created","whereas","function","needs"],"265":["construction","called","whenever","object","created","whereas","function","needs"],"266":["construction","called","whenever","object","created","whereas","function","needs"],"267":["construction","called","whenever","object","created","whereas","function","needs"],"268":["construction","called","whenever","object","created","whereas","function","needs"],"269":["construction","called","whenever","object","created","whereas","function","needs"],"270":["construction","called","whenever","object","created","whereas","function","needs"],"271":["construction","called","whenever","object","created","whereas","function","needs"],"272":["construction","called","whenever","object","created","whereas","function","needs"],"273":["construction","called","whenever","object","created","whereas","function","needs"],"274":["construction","called","whenever","object","created","whereas","function","needs"],"275":["construction","called","whenever","object","created","whereas","function","needs"],"276":["construction","called","whenever","object","created","whereas","function","needs"],"277":["construction","called","whenever","object","created","whereas","function","needs"],"278":["construction","called","whenever","object","created","whereas","function","needs"],"279":["construction","called","whenever","object","created","whereas","function","needs"],"280":["construction","called","whenever","object","created","whereas","function","needs"],"281":["construction","called","whenever","object","created","whereas","function","needs"],"282":["construction","called","whenever","object","created","whereas","function","needs"],"283":["construction","called","whenever","object","created","whereas","function","needs"],"284":["construction","called","whenever","object","created","whereas","function","needs"],"285":["construction","called","whenever","object","created","whereas","function","needs"],"286":["construction","called","whenever","object","created","whereas","function","needs"],"287":["construction","called","whenever","object","created","whereas","function","needs"],"288":["construction","called","whenever","object","created","whereas","function","needs"],"289":["construction","called","whenever","object","created","whereas","function","needs"],"290":["construction","called","whenever","object","created","whereas","function","needs"],"291":["construction","called","whenever","object","created","whereas","function","needs"],"292":["construction","called","whenever","object","created","whereas","function","needs"],"293":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"294":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"295":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"296":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"297":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"298":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"299":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"300":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"301":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"302":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"303":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"304":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"305":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"306":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"307":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"308":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"309":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"310":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"311":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"312":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"313":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"314":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"315":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"316":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"317":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"318":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"319":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"320":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"321":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"322":["construction","provided","compilers","provides","one","default","construction","defined","class","compilers","create","default","construction"],"323":["unlimited","number"],"324":["unlimited","number"],"325":["unlimited","number"],"326":["unlimited","number"],"327":["unlimited","number"],"328":["unlimited","number"],"329":["unlimited","number"],"330":["unlimited","number"],"331":["unlimited","number"],"332":["unlimited","number"],"333":["unlimited","number"],"334":["unlimited","number"],"335":["unlimited","number"],"336":["unlimited","number"],"337":["unlimited","number"],"338":["unlimited","number"],"339":["unlimited","number"],"340":["unlimited","number"],"341":["unlimited","number"],"342":["unlimited","number"],"343":["unlimited","number"],"344":["unlimited","number"],"345":["unlimited","number"],"346":["unlimited","number"],"347":["unlimited","number"],"348":["unlimited","number"],"349":["unlimited","number"],"350":["unlimited","number"],"351":["unlimited","number"],"352":["unlimited","number"],"353":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"354":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"355":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"356":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"357":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"358":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"359":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"360":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"361":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"362":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"363":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"364":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"365":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"366":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"367":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"368":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"369":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"370":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"371":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"372":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"373":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"374":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"375":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"376":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"377":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"378":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"379":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"380":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"381":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"382":["function","prototype","includes","function","signature","ie","name","function","return","type","parameter","type","function","definition","includes","actual","body","function"],"383":["store","class","interface","including","data","members","member","function","prototypes"],"384":["store","class","interface","including","data","members","member","function","prototypes"],"385":["store","class","interface","including","data","members","member","function","prototypes"],"386":["store","class","interface","including","data","members","member","function","prototypes"],"387":["store","class","interface","including","data","members","member","function","prototypes"],"388":["store","class","interface","including","data","members","member","function","prototypes"],"389":["store","class","interface","including","data","members","member","function","prototypes"],"390":["store","class","interface","including","data","members","member","function","prototypes"],"391":["store","class","interface","including","data","members","member","function","prototypes"],"392":["store","class","interface","including","data","members","member","function","prototypes"],"393":["store","class","interface","including","data","members","member","function","prototypes"],"394":["store","class","interface","including","data","members","member","function","prototypes"],"395":["store","class","interface","including","data","members","member","function","prototypes"],"396":["store","class","interface","including","data","members","member","function","prototypes"],"397":["store","class","interface","including","data","members","member","function","prototypes"],"398":["store","class","interface","including","data","members","member","function","prototypes"],"399":["store","class","interface","including","data","members","member","function","prototypes"],"400":["store","class","interface","including","data","members","member","function","prototypes"],"401":["store","class","interface","including","data","members","member","function","prototypes"],"402":["store","class","interface","including","data","members","member","function","prototypes"],"403":["store","class","interface","including","data","members","member","function","prototypes"],"404":["store","class","interface","including","data","members","member","function","prototypes"],"405":["store","class","interface","including","data","members","member","function","prototypes"],"406":["store","class","interface","including","data","members","member","function","prototypes"],"407":["store","class","interface","including","data","members","member","function","prototypes"],"408":["store","class","interface","including","data","members","member","function","prototypes"],"409":["store","class","interface","including","data","members","member","function","prototypes"],"410":["store","class","interface","including","data","members","member","function","prototypes"],"411":["store","class","interface","including","data","members","member","function","prototypes"],"412":["store","class","interface","including","data","members","member","function","prototypes"]},"keyPostag":{"0":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"1":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"2":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"3":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"4":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"5":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"6":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"7":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"8":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"9":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"10":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"11":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"12":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"13":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"14":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"15":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"16":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"17":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"18":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"19":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"20":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"21":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"22":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"23":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"24":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"25":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"26":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"27":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"28":[["simulate","VB"],["behaviour","NN"],["portions","NNS"],["desired","VBD"],["software","NN"],["product","NN"]],"29":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"30":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"31":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"32":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"33":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"34":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"35":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"36":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"37":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"38":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"39":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"40":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"41":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"42":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"43":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"44":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"45":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"46":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"47":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"48":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"49":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"50":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"51":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"52":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"53":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"54":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"55":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"56":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"57":[["testing","VBG"],["stage","NN"],["influence","NN"],["coming","VBG"],["stage","NN"],["phase","NN"],["5","CD"],["solution","NN"],["refinement","NN"],["stage","NN"],["phase","NN"],["7","CD"]],"58":[["abstraction","NN"],["reliability","NN"]],"59":[["abstraction","NN"],["reliability","NN"]],"60":[["abstraction","NN"],["reliability","NN"]],"61":[["abstraction","NN"],["reliability","NN"]],"62":[["abstraction","NN"],["reliability","NN"]],"63":[["abstraction","NN"],["reliability","NN"]],"64":[["abstraction","NN"],["reliability","NN"]],"65":[["abstraction","NN"],["reliability","NN"]],"66":[["abstraction","NN"],["reliability","NN"]],"67":[["abstraction","NN"],["reliability","NN"]],"68":[["abstraction","NN"],["reliability","NN"]],"69":[["abstraction","NN"],["reliability","NN"]],"70":[["abstraction","NN"],["reliability","NN"]],"71":[["abstraction","NN"],["reliability","NN"]],"72":[["abstraction","NN"],["reliability","NN"]],"73":[["abstraction","NN"],["reliability","NN"]],"74":[["abstraction","NN"],["reliability","NN"]],"75":[["abstraction","NN"],["reliability","NN"]],"76":[["abstraction","NN"],["reliability","NN"]],"77":[["abstraction","NN"],["reliability","NN"]],"78":[["abstraction","NN"],["reliability","NN"]],"79":[["abstraction","NN"],["reliability","NN"]],"80":[["abstraction","NN"],["reliability","NN"]],"81":[["abstraction","NN"],["reliability","NN"]],"82":[["abstraction","NN"],["reliability","NN"]],"83":[["abstraction","NN"],["reliability","NN"]],"84":[["abstraction","NN"],["reliability","NN"]],"85":[["abstraction","NN"],["reliability","NN"]],"86":[["abstraction","NN"],["reliability","NN"]],"87":[["main","JJ"],["function","NN"]],"88":[["main","JJ"],["function","NN"]],"89":[["main","JJ"],["function","NN"]],"90":[["main","JJ"],["function","NN"]],"91":[["main","JJ"],["function","NN"]],"92":[["main","JJ"],["function","NN"]],"93":[["main","JJ"],["function","NN"]],"94":[["main","JJ"],["function","NN"]],"95":[["main","JJ"],["function","NN"]],"96":[["main","JJ"],["function","NN"]],"97":[["main","JJ"],["function","NN"]],"98":[["main","JJ"],["function","NN"]],"99":[["main","JJ"],["function","NN"]],"100":[["main","JJ"],["function","NN"]],"101":[["main","JJ"],["function","NN"]],"102":[["main","JJ"],["function","NN"]],"103":[["main","JJ"],["function","NN"]],"104":[["main","JJ"],["function","NN"]],"105":[["main","JJ"],["function","NN"]],"106":[["main","JJ"],["function","NN"]],"107":[["main","JJ"],["function","NN"]],"108":[["main","JJ"],["function","NN"]],"109":[["main","JJ"],["function","NN"]],"110":[["main","JJ"],["function","NN"]],"111":[["main","JJ"],["function","NN"]],"112":[["main","JJ"],["function","NN"]],"113":[["main","JJ"],["function","NN"]],"114":[["main","JJ"],["function","NN"]],"115":[["main","JJ"],["function","NN"]],"116":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"117":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"118":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"119":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"120":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"121":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"122":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"123":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"124":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"125":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"126":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"127":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"128":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"129":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"130":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"131":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"132":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"133":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"134":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"135":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"136":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"137":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"138":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"139":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"140":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"141":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"142":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"143":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"144":[["location","NN"],["memory","NN"],["store","NN"],["value","NN"]],"145":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"146":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"147":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"148":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"149":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"150":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"151":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"152":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"153":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"154":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"155":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"156":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"157":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"158":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"159":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"160":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"161":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"162":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"163":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"164":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"165":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"166":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"167":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"168":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"169":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"170":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"171":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"172":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"173":[["variable","JJ"],["declared","VBN"],["anywhere","JJ"],["program","NN"],["declared","VBN"],["inside","IN"],["function","NN"],["local","JJ"],["variable","JJ"],["outside","JJ"],["functions","NNS"],["global","JJ"],["variable","NN"]],"174":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"175":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"176":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"177":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"178":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"179":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"180":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"181":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"182":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"183":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"184":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"185":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"186":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"187":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"188":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"189":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"190":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"191":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"192":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"193":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"194":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"195":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"196":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"197":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"198":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"199":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"200":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"201":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"202":[["block","NN"],["inside","IN"],["dowhile","NN"],["statement","NN"],["execute","NN"],["least","JJS"]],"203":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"204":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"205":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"206":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"207":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"208":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"209":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"210":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"211":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"212":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"213":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"214":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"215":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"216":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"217":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"218":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"219":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"220":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"221":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"222":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"223":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"224":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"225":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"226":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"227":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"228":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"229":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"230":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"231":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"232":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["member","NN"],["functions","NNS"]],"233":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"234":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"235":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"236":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"237":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"238":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"239":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"240":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"241":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"242":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"243":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"244":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"245":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"246":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"247":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"248":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"249":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"250":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"251":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"252":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"253":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"254":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"255":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"256":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"257":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"258":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"259":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"260":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"261":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"262":[["data","NNS"],["members","NNS"],["accessed","VBD"],["member","NN"],["functions","NNS"],["inside","IN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["function","NN"],["defines","NNS"]],"263":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"264":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"265":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"266":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"267":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"268":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"269":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"270":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"271":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"272":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"273":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"274":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"275":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"276":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"277":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"278":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"279":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"280":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"281":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"282":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"283":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"284":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"285":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"286":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"287":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"288":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"289":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"290":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"291":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"292":[["construction","NN"],["called","VBN"],["whenever","WRB"],["object","NN"],["created","VBD"],["whereas","JJ"],["function","NN"],["needs","NNS"]],"293":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"294":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"295":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"296":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"297":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"298":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"299":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"300":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"301":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"302":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"303":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"304":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"305":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"306":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"307":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"308":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"309":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"310":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"311":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"312":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"313":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"314":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"315":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"316":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"317":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"318":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"319":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"320":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"321":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"322":[["construction","NN"],["provided","VBD"],["compilers","NNS"],["provides","VBZ"],["one","CD"],["default","NN"],["construction","NN"],["defined","VBD"],["class","NN"],["compilers","NNS"],["create","VBP"],["default","NN"],["construction","NN"]],"323":[["unlimited","JJ"],["number","NN"]],"324":[["unlimited","JJ"],["number","NN"]],"325":[["unlimited","JJ"],["number","NN"]],"326":[["unlimited","JJ"],["number","NN"]],"327":[["unlimited","JJ"],["number","NN"]],"328":[["unlimited","JJ"],["number","NN"]],"329":[["unlimited","JJ"],["number","NN"]],"330":[["unlimited","JJ"],["number","NN"]],"331":[["unlimited","JJ"],["number","NN"]],"332":[["unlimited","JJ"],["number","NN"]],"333":[["unlimited","JJ"],["number","NN"]],"334":[["unlimited","JJ"],["number","NN"]],"335":[["unlimited","JJ"],["number","NN"]],"336":[["unlimited","JJ"],["number","NN"]],"337":[["unlimited","JJ"],["number","NN"]],"338":[["unlimited","JJ"],["number","NN"]],"339":[["unlimited","JJ"],["number","NN"]],"340":[["unlimited","JJ"],["number","NN"]],"341":[["unlimited","JJ"],["number","NN"]],"342":[["unlimited","JJ"],["number","NN"]],"343":[["unlimited","JJ"],["number","NN"]],"344":[["unlimited","JJ"],["number","NN"]],"345":[["unlimited","JJ"],["number","NN"]],"346":[["unlimited","JJ"],["number","NN"]],"347":[["unlimited","JJ"],["number","NN"]],"348":[["unlimited","JJ"],["number","NN"]],"349":[["unlimited","JJ"],["number","NN"]],"350":[["unlimited","JJ"],["number","NN"]],"351":[["unlimited","JJ"],["number","NN"]],"352":[["unlimited","JJ"],["number","NN"]],"353":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"354":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"355":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"356":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"357":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"358":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"359":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"360":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"361":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"362":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"363":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"364":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"365":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"366":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"367":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"368":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"369":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"370":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"371":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"372":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"373":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"374":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"375":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"376":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"377":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"378":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"379":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"380":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"381":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"382":[["function","NN"],["prototype","NN"],["includes","VBZ"],["function","NN"],["signature","NN"],["ie","NN"],["name","NN"],["function","NN"],["return","NN"],["type","NN"],["parameter","NN"],["type","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["actual","JJ"],["body","NN"],["function","NN"]],"383":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"384":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"385":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"386":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"387":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"388":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"389":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"390":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"391":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"392":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"393":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"394":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"395":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"396":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"397":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"398":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"399":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"400":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"401":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"402":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"403":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"404":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"405":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"406":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"407":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"408":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"409":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"410":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"411":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]],"412":[["store","NN"],["class","NN"],["interface","NN"],["including","VBG"],["data","NNS"],["members","NNS"],["member","NN"],["function","NN"],["prototypes","NNS"]]},"studentPostag":{"0":[["high","JJ"],["risk","NN"],["problems","NNS"],["address","JJ"],["prototype","JJ"],["program","NN"],["make","VBP"],["sure","JJ"],["program","NN"],["feasible","JJ"],["prototype","NN"],["may","MD"],["also","RB"],["used","VBD"],["show","NN"],["company","NN"],["software","NN"],["possibly","RB"],["programme","VB"]],"1":[["simulate","JJ"],["portions","NNS"],["desired","VBD"],["final","JJ"],["product","NN"],["quick","JJ"],["easy","JJ"],["program","NN"],["small","JJ"],["specific","JJ"],["job","NN"],["way","NN"],["help","VBP"],["see","VB"],["problem","NN"],["may","MD"],["solve","VB"],["final","JJ"],["project","NN"]],"2":[["prototype","NN"],["program","NN"],["simulates","VBZ"],["behavior","JJ"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"],["allow","VB"],["error","NN"],["checking","VBG"]],"3":[["defined","VBN"],["specification","NN"],["phase","NN"],["prototype","NN"],["stimulated","VBD"],["behavior","JJ"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"],["meaning","NN"],["role","NN"],["prototype","NN"],["temporary","JJ"],["solution","NN"],["program","NN"],["refined","VBN"],["used","VBD"],["extensively","RB"],["problem","NN"],["solving","VBG"]],"4":[["used","VBN"],["let","NN"],["users","NNS"],["first","JJ"],["idea","NN"],["completed","VBN"],["program","NN"],["allow","JJ"],["clients","NNS"],["evaluate","JJ"],["program","NN"],["generate","NN"],["much","JJ"],["feedback","NN"],["including","VBG"],["software","NN"],["specification","NN"],["project","NN"],["estimation","NN"],["total","NN"],["project","NN"]],"5":[["find","NN"],["problem","NN"],["errors","NNS"],["program","NN"],["penalized","VBN"]],"6":[["address","NN"],["major","JJ"],["issues","NNS"],["creation","NN"],["program","NN"],["way","NN"],["account","VBP"],["possible","JJ"],["bags","JJ"],["program","NN"],["possible","JJ"],["prove","NN"],["program","NN"],["tangible","NN"]],"7":[["break","JJ"],["whole","JJ"],["program","NN"],["prototype","NN"],["programs","NNS"],["simulate","VBP"],["parts","NNS"],["final","JJ"],["program","NN"]],"8":[["provide","RB"],["example","NN"],["model","NN"],["finished","VBN"],["program","NN"],["perform","NN"],["provides","VBZ"],["foresight","JJ"],["challenges","NNS"],["would","MD"],["encountered","VB"],["provides","VBZ"],["opportunity","NN"],["introduce","NN"],["changes","NNS"],["finished","VBN"],["program","NN"]],"9":[["simulating","VBG"],["behavior","JJ"],["portion","NN"],["desired","VBD"],["software","NN"],["product","NN"]],"10":[["program","NN"],["stimulated","VBD"],["behavior","JJ"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"]],"11":[["program","NN"],["simulates","NNS"],["behavior","VBP"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"]],"12":[["lay","JJ"],["basis","NN"],["give","VBP"],["starting","VBG"],["point","NN"],["actual","JJ"],["problem","NN"],["solving","VBG"]],"13":[["simulate","NN"],["problem","NN"],["solving","VBG"],["parts","NNS"],["problem","NN"]],"14":[["prototype","JJ"],["program","NN"],["provides","VBZ"],["basic","JJ"],["groundwork","NN"],["enhance","NN"],["improve","VB"],["solution","NN"],["problem","NN"]],"15":[["prototype","NN"],["program","NN"],["part","NN"],["specification","NN"],["phase","NN"],["software","NN"],["problem","NN"],["solving","VBG"],["employed","JJ"],["illustrate","NN"],["key","NN"],["problem","NN"],["problems","NNS"],["solved","VBD"],["program","NN"],["sometimes","RB"],["serves","VBZ"],["base","JJ"],["program","NN"],["expand","NN"],["upon","IN"]],"16":[["program","NN"],["simulates","NNS"],["behavior","VBP"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"]],"17":[["provides","VBZ"],["limited","JJ"],["proof","NN"],["concept","NN"],["verify","FW"],["client","NN"],["actually","RB"],["programming","VBG"],["whole","JJ"],["application","NN"]],"18":[["tests","NNS"],["main","JJ"],["function","NN"],["program","NN"],["leaving","VBG"],["finer","NN"],["details","NNS"]],"19":[["get","VB"],["early","JJ"],["feedback","NN"],["users","NNS"],["early","JJ"],["stages","NNS"],["development","NN"],["show","NN"],["users","NNS"],["first","JJ"],["idea","NN"],["program","NN"],["dolook","NN"],["like","IN"],["make","JJ"],["sure","JJ"],["program","NN"],["meet","NN"],["requirements","NNS"],["intense","JJ"],["programming","NN"],["begins","NNS"]],"20":[["simulates","NNS"],["behavior","JJ"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"]],"21":[["simulates","NNS"],["behavior","JJ"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"]],"22":[["prototype","NN"],["program","NN"],["used","VBN"],["problem","NN"],["solving","VBG"],["collect","NN"],["data","NNS"],["problem","NN"]],"23":[["ease","NN"],["understanding","VBG"],["problem","NN"],["discussion","NN"],["ease","NN"],["understanding","JJ"],["program","NN"]],"24":[["simulates","NNS"],["behavior","JJ"],["portions","NNS"],["desired","VBN"],["software","NN"],["product","NN"]],"25":[["role","NN"],["prototype","NN"],["program","NN"],["help","NN"],["spot","VB"],["key","JJ"],["problems","NNS"],["may","MD"],["arise","VB"],["actual","JJ"],["programming","NN"]],"26":[["prototype","JJ"],["program","NN"],["gives","VBZ"],["general","JJ"],["idea","NN"],["end","NN"],["product","NN"],["without","IN"],["time","NN"],["effort","NN"],["write","JJ"],["entire","JJ"],["program","NN"]],"27":[["show","NN"],["certain","JJ"],["part","NN"],["program","NN"],["works","NNS"],["supposed","VBD"]],"28":[["prototype","NN"],["programming","VBG"],["approach","NN"],["programming","VBG"],["enables","VBZ"],["one","CD"],["take","NN"],["organized","VBN"],["approach","NN"],["developing","VBG"],["effective","JJ"],["program","NN"],["minimal","JJ"],["errors","NNS"],["strategic","JJ"],["pattern","VBP"],["solving","VBG"],["problem","NN"],["ie","NN"],["book","NN"],["gave","VBD"],["example","NN"],["costume","NN"],["withdrawing","VBG"],["money","NN"],["bank","NN"],["approach","NN"],["taking","VBG"],["pseudo","JJ"],["code","NN"],["level","NN"],["ooadesign","IN"],["proceeding","VBG"],["creating","VBG"],["solution","NN"]],"29":[["defining","VBG"],["possibly","RB"],["design","NN"],["testing","VBG"],["phase","NN"],["reveals","NNS"],["problems","NNS"],["design","VBP"],["production","NN"],["affected","VBN"],["program","NN"],["unfordable","JJ"],["current","JJ"],["form","NN"],["lead","NN"],["later","RB"],["production","NN"],["time","NN"],["originally","RB"],["estimated","VBN"],["also","RB"],["affects","VBZ"],["coming","VBG"],["testing","VBG"],["may","MD"],["need","VB"],["write","JJ"],["code","NN"],["program","NN"],["remove","NN"],["errors","NNS"]],"30":[["implementation","NN"],["phase","NN"],["maintenance","NN"],["phase","NN"],["effected","VBD"]],"31":[["purification","NN"],["coming","VBG"],["refining","VBG"],["solution","NN"],["maintenance","NN"],["influenced","VBD"],["testing","JJ"],["stage","NN"]],"32":[["rup","NN"],["stages","NNS"],["software","NN"],["life","NN"],["cycle","NN"],["influenced","VBD"],["testing","VBG"],["stage","NN"],["iselaboration","NN"],["phase","NN"],["refined","VBD"],["project","JJ"],["vision","NN"],["operative","JJ"],["development","NN"],["core","NN"],["system","NN"],["development","NN"],["system","NN"],["requirements","NNS"],["accurate","JJ"],["time","NN"],["cost","NN"],["estimatesconstruction","NN"],["phase","NN"],["operative","JJ"],["development","NN"],["remaining","VBG"],["systemtransition","NN"],["phasetesting","VBG"],["employment","NN"],["system","NN"]],"33":[["defining","VBG"],["solution","NN"],["production","NN"],["maintenance","NN"],["influenced","VBD"],["resting","JJ"],["stage","NN"]],"34":[["elaboration","NN"],["construction","NN"],["transition","NN"],["affected","VBD"],["testing","VBG"]],"35":[["defining","VBG"],["production","NN"],["maintenance","NN"]],"36":[["defining","VBG"],["solution","NN"]],"37":[["purification","NN"],["debugging","VBG"]],"38":[["defining","VBG"],["going","VBG"]],"39":[["second","JJ"],["half","NN"],["elaboration","NN"],["phase","NN"],["construction","NN"],["phase","NN"],["transition","NN"],["phase","NN"]],"40":[["refining","VBG"],["step","NN"],["production","NN"],["step","NN"],["maintenance","NN"],["stage","NN"]],"41":[["elaboration","NN"],["construction","NN"],["transition","NN"]],"42":[["defining","VBG"]],"43":[["testing","VBG"],["stage","NN"],["direct","JJ"],["influence","NN"],["final","JJ"],["version","NN"],["program","NN"],["debugging","VBG"],["finalization","NN"],["software","NN"],["revision","NN"]],"44":[["directly","RB"],["defining","VBG"],["coming","VBG"],["defining","VBG"],["right","RB"],["resting","VBG"],["phase","NN"],["going","VBG"],["right","JJ"],["resting","VBG"],["phaseindirectly","RB"],["production","NN"],["maintenance","NN"],["defining","VBG"],["occurs","NNS"],["last","JJ"],["two","CD"],["stages","NNS"],["software","NN"],["life","NN"],["cycle","NN"]],"45":[["resting","VBG"],["refining","VBG"],["production","NN"],["maintenance","NN"]],"46":[["depending","VBG"],["work","NN"],["done","VBN"],["resting","VBG"],["spread","NN"],["throughout","IN"],["process","NN"],["prevent","NN"],["errors","NNS"],["showing","VBG"],["later","RB"],["due","JJ"],["lack","NN"],["foresight","NN"]],"47":[["elaboration","NN"],["construction","NN"],["transition","NN"]],"48":[["stages","NNS"],["influenced","VBD"],["except","IN"],["setting","VBG"],["program","NN"],["requirements","NNS"],["test","VBP"],["fails","NNS"],["change","VBP"],["whole","JJ"],["design","NN"],["implementation","NN"],["etc","FW"],["program","NN"],["well","RB"],["final","JJ"],["outcome","NN"]],"49":[["defining","VBG"],["production","NN"],["maintenance","NN"]],"50":[["coming","VBG"],["refining","NN"]],"51":[["refining","VBG"],["production","NN"],["maintenance","NN"]],"52":[["removing","VBG"],["logical","JJ"],["errors","NNS"],["testing","VBG"],["valid","JJ"],["data","NNS"],["random","NN"],["data","NNS"],["actual","JJ"],["data","NNS"]],"53":[["1","CD"],["specification","NN"],["design","NN"],["risk","NN"],["analysis","NN"],["verification5","NN"],["coming","VBG"],["testing","VBG"],["refining","VBG"],["production","NN"],["maintenance","NN"]],"54":[["defining","VBG"],["stage","NN"],["production","NN"],["stage","NN"],["maintenance","NN"],["stage","NN"]],"55":[["resting","NN"],["could","MD"],["affect","VB"],["parts","NNS"],["life","NN"],["cycle","NN"],["could","MD"],["make","VB"],["go","VB"],["back","RB"],["specification","NN"],["test","NN"],["well","NN"]],"56":[["coming","VBG"]],"57":[["individual","JJ"],["components","NNS"],["steps","NNS"],["analysis","VBP"],["design","NN"],["implementing","NN"],["code","NN"],["well","RB"],["entire","JJ"],["system","NN"],["tested","VBD"],["execution","NN"],["requirements","NNS"],["identified","VBN"],["analysis","NN"],["stage","NN"],["ie","NN"],["pain","NN"],["output","NN"]],"58":[["modularability","NN"],["ability","NN"],["refuse","NN"],["parts","NNS"],["program","NN"],["later","RB"],["another","DT"],["program","NN"],["sometimes","RB"],["completely","RB"],["different","JJ"],["goals","NNS"],["program","NN"],["also","RB"],["makes","VBZ"],["easier","JJR"],["debut","JJ"],["code","NN"],["dividing","VBG"],["code","NN"],["classes","NNS"],["specific","JJ"],["job","NN"],["program","NN"],["fails","VBZ"],["one","CD"],["job","NN"],["one","CD"],["class","NN"],["debut","NN"],["good","JJ"],["security","NN"],["purposes","NNS"],["allows","VBZ"],["let","VB"],["someone","NN"],["use","VB"],["program","NN"],["sorts","NNS"],["lists","VBZ"],["without","IN"],["give","JJ"],["access","NN"],["source","NN"],["code","NN"],["allows","VBZ"],["use","VBP"],["inheritance","NN"],["polymorphism","NN"]],"59":[["type","NN"],["programming","VBG"],["flexible","JJ"],["making","VBG"],["easier","JJR"],["add","JJ"],["modify","NN"],["program","NN"],["also","RB"],["type","JJ"],["fail","JJ"],["safe","JJ"],["program","NN"],["check","NN"],["individual","JJ"],["module","NN"],["eliminates","VBZ"],["redundant","JJ"],["code","NN"],["makes","VBZ"],["program","NN"],["easier","JJR"],["read","JJ"],["programme","NN"],["debugging","VBG"],["program","NN"],["easier","JJR"],["track","NN"],["source","NN"],["problem","NN"],["within","IN"],["module","NN"],["rather","RB"],["2","CD"],["million","CD"],["line","NN"],["program","NN"]],"60":[["main","JJ"],["advantages","NNS"],["objecttormented","VBD"],["programming","VBG"],["existing","VBG"],["classes","NNS"],["refused","VBD"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"61":[["advantages","NNS"],["oop","VBP"],["allows","VBZ"],["us","PRP"],["build","VBP"],["classes","NNS"],["objects","NNS"],["three","CD"],["principles","NNS"],["make","VBP"],["oop","JJ"],["areencapsulation","NN"],["objects","NNS"],["combine","VBP"],["data","NNS"],["operationsinheritance","NN"],["glasses","NNS"],["inherit","VBP"],["properties","NNS"],["classespolymorphism","NN"],["objects","VBZ"],["determine","JJ"],["appropriate","JJ"],["operations","NNS"],["execution","NN"],["time","NN"]],"62":[["advantages","NNS"],["existing","VBG"],["classes","NNS"],["refused","VBD"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"],["accomplish","JJ"]],"63":[["object","NN"],["tormented","VBD"],["programming","VBG"],["allows","NNS"],["programme","NN"],["use","VBP"],["object","JJ"],["classes","NNS"],["changed","VBD"],["manipulated","VBN"],["affecting","VBG"],["entire","JJ"],["object","NN"],["classes","NNS"],["hold","VBP"],["attributes","NNS"],["affect","VBP"],["object","NN"]],"64":[["reusable","JJ"],["components","NNS"],["extensibility","NN"],["maintainability","NN"],["reduces","VBZ"],["large","JJ"],["problems","NNS"],["smaller","JJR"],["manageable","JJ"],["problems","NNS"]],"65":[["encapsulationobjects","NNS"],["combine","VBP"],["data","NNS"],["operationsinheritance","NN"],["classes","NNS"],["inherit","VBP"],["properties","NNS"],["classespolymorphism","NN"],["objects","VBZ"],["determine","JJ"],["appropriate","JJ"],["operations","NNS"],["execution","NN"],["time","NN"]],"66":[["easier","JJR"],["deluge","NN"],["reusability","NN"]],"67":[["heliability","NN"],["ease","NN"],["maintenance","NN"]],"68":[["one","CD"],["main","JJ"],["advantages","NNS"],["hide","VBP"],["inner","JJR"],["details","NNS"],["technique","NN"],["known","VBN"],["encapsulation","NN"],["objects","NNS"],["combine","VBP"],["data","NNS"],["operations","NNS"],["can","MD"],["not","RB"],["see","VB"],["works","VBZ"],["another","DT"],["advantage","NN"],["refuse","NN"],["classes","NNS"],["defined","VBN"],["earlier","RBR"],["program","NN"],["method","NN"],["known","VBN"],["inheritance","NN"],["finally","RB"],["another","DT"],["advantage","NN"],["objects","VBZ"],["determine","JJ"],["appropriate","JJ"],["operations","NNS"],["execution","NN"],["time","NN"],["technique","NN"],["known","VBN"],["polymorphism","NN"]],"69":[["existing","VBG"],["classes","NNS"],["refused","VBD"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"70":[["using","VBG"],["different","JJ"],["nodules","NNS"],["allows","VBZ"],["easier","JJR"],["debugging","VBG"]],"71":[["data","NNS"],["encapsulation","NN"],["conceptthe","NN"],["use","NN"],["functions","NNS"],["methods","NNS"],["manipulate","VBP"],["data","NNS"]],"72":[["nodular","JJ"],["reliable","JJ"],["code","NN"],["allowing","VBG"],["faster","RBR"],["employment","NN"],["solutions","NNS"],["general","JJ"],["view","NN"],["solution","NN"]],"73":[["going","VBG"],["debugging","VBG"],["programs","NNS"],["usually","RB"],["easier","VBP"],["either","DT"],["compilers","NNS"],["specify","VBP"],["object","JJ"],["working","VBG"],["incorrectly","RB"],["function","NN"],["object","NN"],["assigned","VBN"],["easier","JJR"],["identify","JJ"],["code","NN"],["also","RB"],["looks","VBZ"],["organized","VBN"],["easier","JJR"],["read","JJ"],["help","NN"],["avoid","VB"],["redundant","JJ"],["coming","VBG"],["mostprogramming","VBG"],["maintenance","NN"],["also","RB"],["easieralso","JJ"],["nodules","NNS"],["refused","VBD"],["several","JJ"],["times","NNS"],["programs","NNS"],["without","IN"],["much","JJ"],["haste","NN"],["abstraction","NN"],["art","NN"],["breaking","VBG"],["one","CD"],["big","JJ"],["problem","NN"],["smaller","JJR"],["simpler","NN"],["problems","NNS"],["solving","VBG"],["smaller","JJR"],["problems","NNS"],["shared","VBD"],["unique","JJ"],["complex","JJ"],["problems","NNS"],["creating","VBG"],["nodules","NNS"],["solve","VBP"],["smaller","JJR"],["repeated","VBN"],["problems","NNS"],["save","VBP"],["time","NN"],["encounter","NN"]],"74":[["variable","JJ"],["remain","VBP"],["private","JJ"],["code","NN"],["easily","RB"],["modified","VBD"],["reliable","JJ"],["well","RB"],["easily","RB"],["implements","NNS"],["mention","NN"],["easier","JJR"],["read","JJ"],["follow","VBP"],["along","RB"],["observer","RB"]],"75":[["data","NNS"],["abstraction","NN"],["control","NN"],["possible","JJ"],["isolate","NN"],["elementsfrom","IN"],["elements","NNS"],["lot","RB"],["easier","JJR"],["prevent","NN"],["tapering","VBG"],["data","NNS"]],"76":[["encapsulation","NN"],["objects","NNS"],["use","VBP"],["operations","NNS"],["without","IN"],["knowing","VBG"],["operation","NN"],["worksinheritance","NN"],["cuts","NNS"],["redundancy","NN"],["refusing","VBG"],["earlier","JJR"],["classespolymorphism","NN"],["objects","NNS"],["select","VBP"],["correct","JJ"],["operation","NN"],["use","NN"],["situation","NN"]],"77":[["make","VB"],["easier","JJR"],["refuse","NN"],["adapt","VBZ"],["previously","RB"],["written","VBN"],["code","NN"],["separate","JJ"],["complex","JJ"],["programs","NNS"],["smaller","JJR"],["easier","JJR"],["understand","NN"],["classes","NNS"]],"78":[["existing","VBG"],["classes","NNS"],["refused","VBD"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"79":[["existing","VBG"],["classes","NNS"],["fused","VBN"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"80":[["main","JJ"],["advantages","NNS"],["objecttormented","VBN"],["programming","VBG"],["data","NNS"],["abstraction","NN"],["easier","JJR"],["maintenance","NN"],["reliability","NN"]],"81":[["existing","VBG"],["classes","NNS"],["reusedprogram","JJ"],["maintenance","NN"],["verifications","NNS"],["easy","VBP"]],"82":[["1","CD"],["existing","VBG"],["classes","NNS"],["refused","VBD"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"83":[["information","NN"],["hidden","NN"],["easier","JJR"],["debut","NN"],["programming","VBG"],["easier","RBR"],["manageable","JJ"]],"84":[["existing","VBG"],["classes","NNS"],["refused","VBD"],["program","NN"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"85":[["existing","VBG"],["classes","NNS"],["reusedprogram","JJ"],["maintenance","NN"],["purification","NN"],["easier","JJR"]],"86":[["well","RB"],["one","CD"],["encapsulation","NN"],["values","VBZ"],["variable","JJ"],["inside","IN"],["object","JJ"],["private","JJ"],["unless","IN"],["methods","NNS"],["written","VBN"],["pass","NN"],["outside","IN"],["object","NN"],["well","RB"],["inheritance","RB"],["subclass","NN"],["inherit","NN"],["variable","JJ"],["methods","NNS"],["super","JJ"],["class","NN"],["example","NN"],["book","NN"],["included","VBD"],["obs","JJ"],["clock","NN"],["obs","NN"],["alarm","NN"],["would","MD"],["still","RB"],["use","VB"],["clock","NN"],["first","JJ"],["class","NN"]],"87":[["function","NN"],["\u2018","NN"],["in","IN"],["main","JJ"],["\u2019","NN"]],"88":[["function","NN"],["main","JJ"]],"89":[["c","JJ"],["programs","NNS"],["begin","VBP"],["execute","RB"],["main","JJ"],["method","NN"]],"90":[["c","JJ"],["program","NN"],["begin","VB"],["execute","NN"],["main","JJ"],["function","NN"]],"91":[["begin","NN"],["main","JJ"],["function","NN"]],"92":[["ant","NN"],["main","JJ"]],"93":[["main","JJ"],["method","NN"]],"94":[["testing","VBG"],["phase","NN"]],"95":[["main","JJ"],["function","NN"]],"96":[["main","JJ"]],"97":[["begin","VB"],["execute","JJ"],["function","NN"],["main","JJ"]],"98":[["main","JJ"],["method","NN"]],"99":[["root","NN"]],"100":[["main","JJ"],["function","NN"]],"101":[["c","JJ"],["programs","NNS"],["begin","VBP"],["execution","NN"],["main","JJ"]],"102":[["pain","NN"],["function","NN"]],"103":[["main","JJ"],["function","NN"]],"104":[["main","JJ"],["function","NN"]],"105":[["function","NN"],["main","JJ"]],"106":[["loading","NN"],["required","VBN"],["include","VBP"],["statements","NNS"],["libraries","NNS"],["main","JJ"],["method","NN"],["begins","VBZ"],["execution","NN"]],"107":[["main","JJ"],["function","NN"]],"108":[["main","JJ"]],"109":[["c","JJ"],["programs","NNS"],["begin","VBP"],["execution","NN"],["main","JJ"],["function","NN"]],"110":[["main","JJ"]],"111":[["excuse","NN"],["main","JJ"]],"112":[["main","JJ"],["functionint","NN"],["main","JJ"]],"113":[["c","JJ"],["programs","NNS"],["begin","VBP"],["execution","NN"],["main","JJ"],["function","NN"]],"114":[["main","JJ"],["function","NN"]],"115":[["within","IN"],["main","JJ"],["function","NN"]],"116":[["variable","JJ"],["inter","NN"],["string","VBG"],["program","NN"]],"117":[["programming","VBG"],["structure","NN"],["holds","VBZ"],["data","NNS"],["unique","NN"],["named","VBN"],["programme","NN"],["holds","VBZ"],["data","NNS"],["assigned","VBD"],["new","JJ"],["value","NN"],["assigned","VBN"],["program","NN"],["finished","VBN"]],"118":[["variable","JJ"],["location","NN"],["memory","NN"],["value","NN"],["stored","VBD"]],"119":[["variable","JJ"],["location","NN"],["computer","NN"],["memory","NN"],["value","NN"],["stored","VBN"],["later","RB"],["retrieve","VBP"],["value","NN"]],"120":[["variable","JJ"],["location","NN"],["computer","NN"],["memory","NN"],["value","NN"],["stored","VBN"],["use","IN"],["program","NN"],["variable","JJ"],["name","NN"],["value","NN"],["type","NN"],["size","NN"]],"121":[["named","VBN"],["object","JJ"],["hold","VB"],["numerical","JJ"],["letter","NN"],["value","NN"]],"122":[["symbol","NN"],["name","NN"],["valuenumber","NNP"],["example","NN"],["ausednumber","NN"],["stand","VB"],["given","VBN"],["number","NN"],["programme","NN"],["refer","VBP"],["number","NN"],["using","VBG"],["variable","JJ"],["name","NN"]],"123":[["variable","JJ"],["location","NN"],["computers","NNS"],["memory","NN"],["value","NN"],["stored","VBN"],["use","IN"],["program","NN"]],"124":[["identified","VBN"],["holds","VBZ"],["location","NN"],["memory","NN"]],"125":[["block","NN"],["memory","NN"],["holds","VBZ"],["specific","JJ"],["type","NN"],["data","NNS"]],"126":[["location","NN"],["computer","NN"],["memory","NN"],["stored","VBN"],["use","NN"],["program","NN"]],"127":[["location","NN"],["memory","NN"],["value","NN"],["stored","VBD"]],"128":[["valueword","NN"],["assume","VBZ"],["set","VBN"],["values","NNS"]],"129":[["pointer","NN"],["location","NN"],["memory","NN"]],"130":[["variable","JJ"],["memory","NN"],["address","NN"],["specific","JJ"],["type","NN"],["stored","VBN"],["data","NNS"],["mathematical","JJ"],["perspective","JJ"],["symbol","NN"],["representing","VBG"],["fixed","VBN"],["definition","NN"],["changing","VBG"],["values","NNS"]],"131":[["variable","JJ"],["value","NN"],["subject","JJ"],["change","NN"],["computer","NN"],["memory","NN"],["used","VBN"],["programs","NNS"],["programs","NNS"],["change","VBP"],["value","NN"],["variable","JJ"],["recall","NN"],["later","RBR"],["act","NN"],["directly","RB"]],"132":[["symbol","NN"],["stands","VBZ"],["value","NN"],["may","MD"],["may","MD"],["change","VB"],["depending","VBG"],["program","NN"]],"133":[["slaveholder","NN"],["hold","NN"],["information","NN"],["used","VBN"],["programfor","NN"],["examplein","NN"],["hold","VBD"],["1","CD"],["2","CD"],["3","CD"],["4","CD"],["68","CD"],["72","CD"],["256","CD"],["etcfloat","NN"],["hold","NN"],["154","CD"],["5555","CD"],["124","CD"],["5657","CD"],["88123","CD"],["etchair","NN"],["hold","NN"],["b","NN"],["c","NN"],["e","NN"],["f","VBD"],["4","CD"],["5","CD"],["6","CD"],["p","NN"],["etc","NN"]],"134":[["stored","VBN"],["value","NN"],["used","VBN"],["program","NN"]],"135":[["way","NN"],["store","NN"],["different","JJ"],["values","NNS"],["program","NN"],["numbers","NNS"],["words","NNS"],["letters","NNS"],["etc","VBP"]],"136":[["object","JJ"],["location","NN"],["memory","NN"],["value","NN"],["stored","VBD"]],"137":[["location","NN"],["memory","NN"],["value","NN"],["stored","VBD"]],"138":[["variable","JJ"],["object","NN"],["data","NNS"],["stored","VBD"]],"139":[["vocation","NN"],["memory","NN"],["value","NN"],["stored","VBD"]],"140":[["location","NN"],["memory","NN"],["value","NN"],["stored","VBD"]],"141":[["variable","JJ"],["location","NN"],["computer","NN"],["memory","NN"],["value","NN"],["stored","VBN"],["use","IN"],["program","NN"]],"142":[["variable","JJ"],["location","NN"],["computers","NNS"],["memory","NN"],["value","NN"],["stored","VBN"],["use","IN"],["program","NN"]],"143":[["location","NN"],["memory","NN"],["data","NNS"],["stored","VBD"],["retrieved","VBD"]],"144":[["method","NN"],["identified","VBN"],["would","MD"],["say","VB"],["use","NN"],["bind","NN"],["data","NNS"],["object","VBP"],["memory","NN"],["location","NN"],["stored","VBN"],["location","NN"],["accessed","VBN"],["manipulated","VBN"],["later","RBR"],["variable","JJ"],["name","NN"],["called","VBD"]],"145":[["declared","VBN"],["right","RB"],["used","VBN"],["good","JJ"],["practice","NN"],["declare","NN"],["beginning","VBG"],["program","NN"],["label","NN"],["food","NN"]],"146":[["function","NN"],["main","JJ"],["using","VBG"],["variable","JJ"]],"147":[["local","JJ"],["variable","NN"],["declared","VBN"],["inside","IN"],["method","NN"],["function","NN"],["used","VBN"],["beginning","VBG"],["method","NN"],["global","JJ"],["variable","NN"],["declared","VBN"],["outside","IN"],["function","NN"],["method","NN"],["generally","RB"],["functions","NNS"],["defined","VBD"]],"148":[["variable","NN"],["declared","VBN"],["ever","RB"],["defined","VBN"],["either","CC"],["inside","JJ"],["block","NN"],["locally","RB"],["outside","JJ"],["block","NN"],["locally","RB"]],"149":[["variable","JJ"],["declared","VBN"],["actually","RB"],["used","VBN"],["declared","JJ"],["main","JJ"],["use","NN"],["locally","RB"]],"150":[["good","JJ"],["programming","NN"],["practice","NN"],["declared","VBD"],["main","JJ"],["least","JJS"],["declared","VBD"],["used","JJ"]],"151":[["declared","VBN"],["locally","RB"],["main","JJ"],["method","NN"],["also","RB"],["outside","JJ"],["variable","JJ"],["subject","JJ"],["method","NN"],["scope","NN"],["within","IN"],["would","MD"],["still","RB"],["declared","VB"],["beginning","VBG"],["method","JJ"],["inside","IN"]],"152":[["local","JJ"],["variable","NN"],["declared","VBN"],["inside","IN"],["method","NN"],["global","JJ"],["variable","NN"],["declared","VBN"],["body","NN"]],"153":[["main","JJ"],["function","NN"]],"154":[["locally","RB"],["entire","JJ"],["program","NN"],["locally","RB"],["individual","JJ"],["functions","NNS"],["including","VBG"],["statements","NNS"]],"155":[["usually","RB"],["declared","VBN"],["beginning","NN"],["used","VBN"],["program","NN"],["always","RB"],["contain","VBP"],["name","JJ"],["data","NNS"],["type","NN"]],"156":[["inside","IN"],["method","NN"]],"157":[["top","NN"]],"158":[["global","JJ"],["variable","NN"],["declared","VBN"],["body","NN"],["code","JJ"],["local","JJ"],["variable","NN"],["declared","VBN"],["function","NN"],["used","VBN"],["unless","IN"],["function","NN"],["passed","VBD"],["variable","JJ"],["variable","JJ"],["always","RB"],["declared","VBN"],["use","NN"]],"159":[["variable","JJ"],["usually","RB"],["declared","VBD"],["beginning","VBG"],["module","NN"],["c","NNS"],["code","NN"]],"160":[["main","JJ"],["function","NN"],["usually","RB"],["top","JJ"],["codethey","NN"],["declared","VBD"],["almost","RB"],["anywhere","RB"],["must","MD"],["declared","VB"],["code","NN"],["use","NN"],["act","NN"],["upon","IN"]],"161":[["beginning","VBG"],["program","NN"],["main","JJ"],["starts","NNS"]],"162":[["declaration","NN"],["functions","NNS"],["statements","NNS"],["statementsin","VBP"],["body","NN"],["statements","NNS"],["namespaces","VBZ"],["leaders","NNS"],["etc","FW"],["almost","RB"],["anywhere","RB"],["anywhere","JJ"],["program","NN"],["long","RB"],["line","NN"]],"163":[["declaration","NN"],["variable","JJ"],["data","NNS"],["type","NN"]],"164":[["anywhere","RB"],["code","NN"],["top","JJ"],["middle","NN"],["code","NN"],["anywhere","RB"]],"165":[["used","VBN"]],"166":[["anywhere","RB"],["scope","NN"],["used","VBN"]],"167":[["variable","JJ"],["declared","JJ"],["classes","NNS"],["methods","NNS"]],"168":[["inside","IN"],["function","NN"],["scope","NN"],["outside","IN"],["function","NN"],["scope","NN"],["case","NN"],["global","JJ"],["variable","NN"]],"169":[["global","JJ"],["variable","NN"],["declared","VBD"],["main","JJ"],["functionlocal","JJ"],["variable","NN"],["declared","VBN"],["function","NN"]],"170":[["variable","JJ"],["usually","RB"],["declared","VBD"],["beginning","VBG"],["c","JJ"],["program","NN"],["declared","VBN"],["program","NN"],["long","RB"],["appear","RB"],["called","VBN"],["upon","RP"]],"171":[["variable","JJ"],["declared","VBD"],["main","JJ"],["function","NN"],["operation","NN"],["attempted","VBD"],["variable","JJ"]],"172":[["anywhere","RB"],["declare","JJ"],["depends","VBZ"],["want","VBP"],["accessible","JJ"],["scope","NN"]],"173":[["depends","VBZ"],["it","PRP"],["\u2019","JJ"],["s","JJ"],["global","JJ"],["declared","VBN"],["side","NN"],["source","NN"],["code","NN"],["used","VBN"],["every","DT"],["scope","NN"],["however","RB"],["local","JJ"],["variable","JJ"],["one","CD"],["declared","VBD"],["local","JJ"],["function","NN"],["etc","FW"],["obviously","RB"],["doesn","JJ"],["\u2019","NNP"],["t","NN"],["need","NN"],["declared","VBD"],["outside","JJ"],["variable","JJ"],["seeing","VBG"],["used","VBN"],["function","NN"],["block","NN"],["called","VBD"]],"174":[["\u201c","NNS"],["do","VBP"],["\u201d","VB"],["statement","NN"],["first","RB"],["evaluate","JJ"],["condition","NN"],["executed","VBD"],["lines","NNS"],["code","NN"],["statement","NN"],["0","CD"],["times","NNS"],["\u201c","JJ"],["do","VBP"],["while","IN"],["\u201d","VB"],["statement","NN"],["executed","VBN"],["lines","NNS"],["code","NN"],["evaluate","VBP"],["condition","NN"]],"175":[["dowhile","JJ"],["statements","NNS"],["evaluate","VBP"],["whether","IN"],["loop","NN"],["running","VBG"],["block","NN"],["contained","VBD"],["within","IN"],["least","JJS"],["main","JJ"],["difference","NN"],["statements","NNS"],["possibility","NN"],["never","RB"],["used","VBD"],["statements","NNS"],["hand","NN"],["always","RB"],["run","VB"],["least","JJS"],["evaluation","NN"],["whether","IN"],["run","NN"]],"176":[["main","JJ"],["difference","NN"],["dowhile","NN"],["loop","NN"],["dowhile","NN"],["loop","NN"],["always","RB"],["cycle","NN"],["loop","NN"],["least","JJS"],["loop","NN"],["always","RB"]],"177":[["loop","NN"],["used","VBN"],["execute","NN"],["block","NN"],["code","NN"],["long","JJ"],["condition","NN"],["true","JJ"],["dowhile","NN"],["loop","NN"],["used","VBN"],["execute","NN"],["block","NN"],["code","NN"],["long","JJ"],["condition","NN"],["satisfied","VBD"],["difference","NN"],["dowhile","NN"],["loop","NN"],["tests","NNS"],["condition","NN"],["execution","NN"],["contents","NNS"],["dowhile","JJ"],["loop","NN"],["tests","NNS"],["condition","NN"],["execution","NN"],["contents","NNS"],["least","VBP"]],"178":[["termination","NN"],["condition","NN"],["dowhile","JJ"],["statement","NN"],["usually","RB"],["end","VBP"],["loop","JJ"],["run","NN"],["least","JJS"],["statement","NN"],["condition","NN"],["false","JJ"],["begin","NN"],["loop","VBD"],["never","RB"],["run","VBN"]],"179":[["loop","RB"],["check","NN"],["statement","NN"],["make","VBP"],["sure","JJ"],["true","JJ"],["executing","VBG"],["loop","JJ"],["execute","NN"],["checking","VBG"],["statement","NN"],["see","NN"],["run","VB"]],"180":[["statement","NN"],["test","NN"],["condition","NN"],["loop","NN"],["first","JJ"],["chance","NN"],["loop","NN"],["never","RB"],["run","VBP"],["dowhile","RB"],["loop","JJ"],["always","RB"],["run","VBP"],["test","JJS"],["determine","NN"],["run","NN"]],"181":[["loop","NN"],["always","RB"],["executed","VBD"],["loop","JJ"],["conditional","JJ"],["statement","NN"],["true","JJ"],["run","NN"]],"182":[["name","NN"]],"183":[["statements","NNS"],["evaluate","VBP"],["statement","NN"],["executing","VBG"],["cycle","NN"],["loop","NN"],["including","VBG"],["first","JJ"],["cycle","NN"],["meaning","NN"],["loop","NN"],["always","RB"],["execute","VBP"],["dowhile","JJ"],["run","NN"],["evaluate","JJ"],["statement","NN"],["running","VBG"],["cycle","NN"],["loop","NN"],["ensuring","VBG"],["loop","NN"],["always","RB"],["executed","VBD"],["least","JJS"],["one","CD"],["time","NN"]],"184":[["main","JJ"],["difference","NN"],["dowhile","NN"],["statement","NN"],["dowhile","NN"],["statement","NN"],["statements","NNS"],["block","VBP"],["always","RB"],["executed","VBN"],["least","JJS"],["statement","NN"],["execute","JJ"],["condition","NN"],["true","JJ"]],"185":[["loop","NN"],["dowhile","NN"],["statement","NN"],["always","RB"],["executed","VBD"]],"186":[["statement","NN"],["process","NN"],["statement","NN"],["met","VBD"],["dowhile","JJ"],["always","RB"],["process","NN"],["continue","VBP"],["statement","NN"],["met","VBD"]],"187":[["runs","NNS"],["embedded","VBD"],["code","NN"],["least","JJS"],["command","NN"],["necessarily","RB"]],"188":[["tests","NNS"],["true","JJ"],["first","RB"],["running","VBG"],["dowhile","NN"],["runs","NNS"],["first","RB"],["checking","VBG"]],"189":[["dowhile","JJ"],["statement","NN"],["body","NN"],["always","RB"],["executed","VBD"],["least","JJS"],["statement","NN"],["execute","NN"],["unless","IN"],["condition","NN"],["true","JJ"]],"190":[["statements","NNS"],["within","IN"],["block","NN"],["loop","NN"],["always","RB"],["executed","VBD"],["least","JJS"],["regardless","JJ"],["conditions","NNS"],["whereas","VBP"],["loops","NNS"],["may","MD"],["never","RB"],["executed","VBN"],["conditions","NNS"],["met","VBD"]],"191":[["loop","NN"],["always","RB"],["run","VB"],["loopperforms","JJ"],["test","NN"],["running","VBG"],["loop","NN"]],"192":[["statement","NN"],["tests","NNS"],["condition","VBP"],["starta","RB"],["dowhile","JJ"],["statement","NN"],["loops","VBZ"],["condition","NN"],["tested","VBD"]],"193":[["loop","NN"],["terminates","NNS"],["beginning","VBG"],["loop","NN"],["dowhile","NN"],["terminates","NNS"],["end","VBP"],["loop","NN"]],"194":[["loop","NN"],["body","NN"],["always","RB"],["executed","VBD"],["least","JJS"]],"195":[["loop","NN"],["evaluate","JJ"],["expression","NN"],["top","JJ"],["loop","NN"],["decides","NNS"],["needs","VBZ"],["execute","JJ"],["dowhile","NN"],["always","RB"],["executed","VBD"],["least","JJS"],["evaluate","JJ"],["expression","NN"],["bottom","NN"],["loop","NN"]],"196":[["dowhile","JJ"],["statement","NN"],["always","RB"],["execute","VB"],["piece","JJ"],["code","NN"],["least","JJS"],["checking","VBG"],["condition","NN"],["statement","NN"],["always","RB"],["check","VB"],["condition","NN"],["first","RB"]],"197":[["dowhile","JJ"],["passes","NNS"],["least","JJS"],["1","CD"],["time","NN"],["checking","VBG"],["condition","NN"],["however","RB"],["would","MD"],["fail","VB"],["enter","NN"],["loop","JJ"],["condition","NN"],["fails","NNS"],["first","JJ"],["place","NN"]],"198":[["loop","NN"],["checks","NNS"],["condition","NN"],["true","JJ"],["first","RB"],["true","JJ"],["excuses","NNS"],["statementa","VBP"],["loop","RB"],["executed","VBN"],["statement","NN"],["checks","NNS"],["condition","VBP"],["condition","NN"],["true","JJ"],["would","MD"],["excuse","VB"],["statement","NN"],["dowhile","IN"],["loop","NN"],["would","MD"],["excuse","VB"],["statement","NN"],["least","JJS"]],"199":[["answer","NN"]],"200":[["dowhile","NN"],["loop","NN"],["always","RB"],["execute","VB"],["least","JJS"],["loop","NN"],["may","MD"],["never","RB"],["execute","VB"],["depending","VBG"],["conditions","NNS"]],"201":[["loop","NN"],["precheck","NN"],["checks","NNS"],["condition","NN"],["statement","NN"],["executed","VBD"],["code","NN"],["within","IN"],["blocka","NN"],["loop","NN"],["postcheck","NN"],["checks","NNS"],["condition","NN"],["block","NN"],["executed","VBD"],["runs","NNS"],["least","JJS"],["matter","JJ"],["condition","NN"],["statement","NN"]],"202":[["main","JJ"],["difference","NN"],["dowhile","IN"],["statementthe","JJ"],["construct","NN"],["consists","VBZ"],["block","NN"],["code","NN"],["condition","NN"],["first","RB"],["code","NN"],["within","IN"],["block","NN"],["executed","VBN"],["condition","NN"],["evacuated","VBD"],["done","VBN"],["prove","NN"],["false","JJ"],["difference","NN"],["loop","NN"],["tests","NNS"],["condition","NN"],["code","NN"],["within","IN"],["block","NN"],["executed","VBD"]],"203":[["us","PRP"],["usually","RB"],["set","VBP"],["get","VB"],["displaymessge","JJ"],["messages","NNS"],["tell","VBP"],["properties","NNS"],["class","NN"],["reveal","NN"],["implementation","NN"],["could","MD"],["anything","NN"],["want","JJ"],["class","NN"],["definition","NN"]],"204":[["attributes","NNS"],["said","VBD"],["class","NN"],["also","RB"],["whether","IN"],["subclass","NN"],["also","RB"],["whether","IN"],["public","JJ"],["private","JJ"],["protected","VBN"]],"205":[["information","NN"],["telling","VBG"],["compilers","NNS"],["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"],["belong","VBP"],["class","NN"]],"206":[["since","IN"],["class","NN"],["user","NN"],["defined","VBD"],["body","NN"],["declaration","NN"],["contain","NN"],["members","NNS"],["either","CC"],["data","NNS"],["function","NN"],["declarations","NNS"],["rationally","RB"],["access","NN"],["specified","JJ"],["example","NN"],["specified","VBN"],["would","MD"],["public","JJ"],["private","JJ"],["protected","VBN"],["eyford","NN"],["glass","NN"],["glass","NN"],["body","NN"],["enclosed","VBD"],["brackets","NNS"]],"207":[["object","NN"],["data","NNS"]],"208":[["specific","JJ"],["class","NN"],["name","NN"],["includes","VBZ"],["information","NN"],["defined","VBD"],["class","NN"],["implementation","NN"],["details","NNS"],["etc","VBP"]],"209":[["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"]],"210":[["class","NN"],["definition","NN"],["usually","RB"],["contains","VBZ"],["function","NN"],["data","NNS"],["members","NNS"]],"211":[["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"]],"212":[["member","NN"],["functions","NNS"]],"213":[["member","NN"],["functions","NNS"],["data","VBP"],["members","NNS"],["belonging","VBG"],["class","NN"]],"214":[["public","JJ"],["private","JJ"],["area","NN"],["includes","VBZ"],["functions","NNS"],["variable","JJ"],["used","JJ"],["class","NN"]],"215":[["eyford","NN"],["class","NN"],["followed","VBD"],["class","NN"],["name","NN"],["inside","IN"],["declare","JJ"],["public","JJ"],["private","JJ"],["declarations","NNS"],["class","NN"]],"216":[["class","NN"],["definition","NN"],["typically","RB"],["includes","VBZ"],["function","NN"],["definitions","NNS"]],"217":[["begins","NNS"],["glass","VBP"],["followed","VBN"],["class","NN"],["name","NN"],["usually","RB"],["construction","NN"],["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"],["delineates","VBZ"],["class","NN"],["included","VBD"],["class","NN"],["definition","NN"]],"218":[["data","NNS"],["methods","NNS"]],"219":[["construction","NN"],["functions","NNS"],["variable","JJ"],["accessible","JJ"],["class","NN"],["possibly","RB"],["classes","VBZ"],["depending","VBG"],["done","VBN"]],"220":[["member","NN"],["functions","NNS"],["data","VBP"],["members","NNS"]],"221":[["public","JJ"],["section","NN"],["private","JJ"],["section","NN"],["must","MD"],["semicolon","VB"],["set","JJ"],["end","NN"]],"222":[["member","NN"],["functions","NNS"],["data","VBP"],["members","NNS"]],"223":[["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"]],"224":[["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"]],"225":[["class","NN"],["name","NN"],["public","JJ"],["data","NNS"],["types","NNS"],["contractors","NNS"],["methods","NNS"],["functions","NNS"]],"226":[["construction","NN"],["several","JJ"],["data","NNS"],["members","NNS"],["least","VBP"],["one","CD"],["public","JJ"],["data","NNS"],["member","NN"],["method","NN"]],"227":[["class","NN"],["name","NN"],["two","CD"],["curly","JJ"],["prenthesis","NN"],["public","JJ"],["private","JJ"]],"228":[["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"]],"229":[["data","NNS"],["functions","NNS"]],"230":[["functions","NNS"],["data","NNS"],["members","NNS"],["belong","JJ"],["class","NN"]],"231":[["class","NN"],["variable","JJ"],["function","NN"],["definitions","NNS"],["class","NN"]],"232":[["class","NN"],["expanded","VBD"],["concept","NN"],["data","NNS"],["structure","NN"],["holds","VBZ"],["data","NNS"],["functions","NNS"],["executed","VBD"]],"233":[["data","NNS"],["members","NNS"],["data","NNS"],["components","NNS"],["particular","JJ"],["class","NN"],["member","NN"],["function","NN"],["sanctioning","VBG"],["components","NNS"],["class","NN"]],"234":[["field","NN"],["variable","JJ"],["variable","JJ"],["declared","VBN"],["member","NN"],["class","NN"],["local","JJ"],["variable","NN"],["variable","JJ"],["declared","VBD"],["local","JJ"],["method","NN"]],"235":[["data","NNS"],["members","NNS"],["declared","VBD"],["inside","IN"],["class","NN"],["outside","IN"],["member","NN"],["functions","NNS"],["unlike","IN"],["local","JJ"],["variable","JJ"],["object","JJ"],["class","NN"],["keeps","NNS"],["copy","VBP"],["data","NNS"],["members","NNS"],["stored","VBD"],["memory","NN"]],"236":[["data","NNS"],["member","NN"],["variable","JJ"],["represent","JJ"],["attribute","NN"],["class","NN"],["definition","NN"],["local","JJ"],["variable","NN"],["declared","VBN"],["function","NN"],["body","NN"],["can","MD"],["not","RB"],["used","VBN"],["outside","JJ"],["function","NN"],["body","NN"],["function","NN"],["terminates","VBZ"],["values","NNS"],["local","JJ"],["variable","NN"],["lost","VBD"]],"237":[["local","JJ"],["variable","NN"],["can","MD"],["not","RB"],["accessed","VBN"],["outside","JJ"],["function","NN"],["declared","VBD"],["data","NNS"],["members","NNS"],["normally","RB"],["private","JJ"],["variable","JJ"],["functions","NNS"],["declared","VBD"],["private","JJ"],["accessible","JJ"],["member","NN"],["functions","NNS"],["class","NN"],["declared","VBD"]],"238":[["data","NNS"],["member","NN"],["part","NN"],["c","VBZ"],["class","NN"],["structure","NN"],["stores","NNS"],["data","VBP"],["certain","JJ"],["type","JJ"],["local","JJ"],["variable","JJ"],["inside","IN"],["member","NN"],["function","NN"],["available","JJ"],["inside","JJ"],["function","NN"],["used","VBN"],["derive","JJ"],["desired","VBD"],["outcome","NN"]],"239":[["local","JJ"],["variable","NN"],["accessed","VBN"],["within","IN"],["scope","NN"],["declaration","NN"]],"240":[["data","NNS"],["members","NNS"],["attributes","VBZ"],["function","NN"],["used","VBN"],["outside","JJ"],["functionlocal","JJ"],["variable","NN"],["used","VBN"],["outside","IN"],["function","NN"],["value","NN"],["lost","VBN"],["function","NN"],["terminates","NNS"]],"241":[["data","NNS"],["members","NNS"],["permanent","JJ"],["attributes","NNS"],["class","NN"],["local","JJ"],["variable","JJ"],["inside","IN"],["member","NN"],["function","NN"],["lost","VBD"],["scope","JJ"],["member","NN"],["function","NN"],["ends","NNS"]],"242":[["data","NNS"],["members","NNS"],["declared","VBD"],["class","NN"],["definition","NN"],["outside","IN"],["bodies","NNS"],["class","NN"],["memberfunction","NN"],["definitions","NNS"],["local","JJ"],["variable","JJ"],["declared","VBN"],["function","NN"],["definition","NN"],["body","NN"]],"243":[["data","NNS"],["member","NN"],["locally","RB"],["accessible","JJ"],["local","JJ"],["variable","NN"],["accessible","JJ"],["inside","JJ"],["member","NN"],["function","NN"]],"244":[["variable","JJ"],["inside","IN"],["member","NN"],["function","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["data","NNS"],["member","NN"],["accessed","VBN"],["throughout","IN"],["program","NN"]],"245":[["local","JJ"],["variable","NN"],["used","VBN"],["within","IN"],["scope","NN"],["declaration","NN"]],"246":[["data","NNS"],["member","NN"],["general","JJ"],["term","NN"],["describing","VBG"],["objects","NNS"],["instantiated","VBN"],["within","IN"],["member","NN"],["function","NN"],["local","JJ"],["local","JJ"],["variable","NN"],["refers","NNS"],["scope","VBP"],["variable","JJ"],["may","MD"],["located","VBN"],["anything","NN"],["control","NN"],["structure","NN"],["class","NN"],["local","JJ"],["variable","JJ"],["whose","WP$"],["scope","NN"],["member","NN"],["function","NN"],["data","NNS"],["members","NNS"],["member","NN"],["functions","NNS"]],"247":[["data","NNS"],["member","NN"],["exists","VBZ"],["permanently","RB"],["program","NN"],["memory","NN"],["long","RB"],["runa","JJ"],["local","JJ"],["variable","JJ"],["inside","IN"],["member","NN"],["function","NN"],["temporal","NN"],["used","VBN"],["operate","JJ"],["function","NN"],["exists","NNS"],["long","JJ"],["function","NN"],["run","NN"]],"248":[["local","JJ"],["variable","NN"],["used","VBN"],["within","IN"],["function","NN"],["data","NNS"],["members","NNS"],["set","VBP"],["public","JJ"],["access","NN"],["used","VBN"],["throughout","IN"]],"249":[["local","JJ"],["variable","NN"],["lost","VBN"],["exist","JJ"],["block","NN"],["code","NN"],["data","NNS"],["member","NN"]],"250":[["member","NN"],["function","NN"],["access","NN"],["modify","NN"],["data","NNS"],["membera","NN"],["local","JJ"],["variable","NN"],["used","VBN"],["line","NN"],["declaration","NN"],["next","IN"],["closing","NN"],["lost","VBD"],["memory","NN"]],"251":[["data","NNS"],["member","NN"],["accessible","JJ"],["functions","NNS"],["class","NN"],["local","JJ"],["variable","JJ"],["available","JJ"],["member","NN"],["function","NN"],["value","NN"],["lost","VBN"],["function","NN"],["closes","NNS"]],"252":[["data","NNS"],["members","NNS"],["variable","JJ"],["declared","JJ"],["inside","IN"],["class","NN"],["definition","NN"],["outside","IN"],["bodies","NNS"],["class","NN"],["member","NN"],["functions","NNS"],["local","JJ"],["variable","NN"],["used","VBN"],["within","IN"],["function","NN"],["declaration","NN"]],"253":[["data","NNS"],["member","NN"],["accessed","VBN"],["outside","JJ"],["class","NN"],["whereas","JJ"],["local","JJ"],["variable","NN"],["can","MD"],["not","RB"]],"254":[["local","JJ"],["variable","NN"],["can","MD"],["not","RB"],["used","VBN"],["outside","JJ"],["function","NN"],["body","NN"],["function","NN"],["terminates","VBZ"],["values","NNS"],["local","JJ"],["variable","NN"],["lost","VBN"],["data","NNS"],["members","NNS"],["variable","JJ"],["class","NN"],["definition","NN"],["exist","VB"],["throughout","IN"],["life","NN"],["object","NN"]],"255":[["local","JJ"],["variable","JJ"],["member","NN"],["function","NN"],["static","JJ"],["data","NNS"],["member","NN"],["change","NN"],["value","NN"],["freely","RB"]],"256":[["local","JJ"],["variable","NN"],["unable","JJ"],["within","IN"],["function","NN"],["defined","VBN"],["whereas","IN"],["data","NNS"],["member","NN"],["available","JJ"],["method","NN"],["within","IN"],["class","NN"]],"257":[["variable","JJ"],["declared","VBN"],["function","NN"],["definition","NN"],["body","NN"],["can","MD"],["not","RB"],["used","VBN"],["outside","IN"],["functiondata","JJ"],["members","NNS"],["accessible","JJ"],["member","NN"],["function","NN"],["class","NN"]],"258":[["data","NNS"],["members","NNS"],["local","JJ"],["variable","JJ"],["declared","VBN"],["function","NN"],["definition","NN"],["\u2019","NNP"],["s","NN"],["bodythey","NN"],["can","MD"],["not","RB"],["used","VBN"],["outside","IN"],["function","NN"],["bodywhen","NN"],["function","NN"],["terminates","VBZ"],["values","NNS"],["local","JJ"],["variable","NN"],["lost","VBD"]],"259":[["local","JJ"],["variable","NN"],["available","JJ"],["function","NN"]],"260":[["local","JJ"],["variable","NN"],["accessed","VBD"],["inside","JJ"],["member","NN"],["functions","NNS"],["data","VBP"],["members","NNS"],["accessed","VBN"],["throughout","IN"],["class","NN"]],"261":[["data","NNS"],["member","NN"],["accessible","JJ"],["anywhere","RB"],["class","NN"],["local","JJ"],["variable","JJ"],["member","NN"],["function","NN"],["accessible","JJ"],["particular","JJ"],["function","NN"],["freed","VBN"],["function","NN"],["exist","NN"]],"262":[["data","NNS"],["member","NN"],["encapsulated","VBN"],["within","IN"],["class","NN"],["object","VBP"],["static","JJ"],["shared","VBN"],["instances","NNS"],["class","NN"],["however","RB"],["local","JJ"],["variable","NN"],["used","VBN"],["function","NN"],["block","NN"],["declared","VBD"],["whole","JJ"],["class","NN"],["wise","NN"],["would","MD"],["called","VB"],["global","JJ"],["variable","NN"]],"263":[["construction","NN"],["initiatives","NNS"],["object","VBP"],["objects","NNS"],["class","NN"],["function","NN"],["class","NN"],["perform","NN"],["task","NN"],["display","NN"],["line","NN"],["text","NN"],["kind","NN"],["mathematical","JJ"],["operations","NNS"]],"264":[["contractors","NNS"],["functions","NNS"],["functions","NNS"],["contractors","NNS"],["also","RB"],["functions","VBP"],["nearly","RB"],["infinite","JJ"],["purposes","NNS"],["contractors","NNS"],["always","RB"],["create","VBP"],["instance","NN"],["whichever","WRB"],["class","NN"],["using","VBG"],["change","NN"],["construction","NN"],["something","NN"],["functions","NNS"],["change","VBP"],["also","RB"]],"265":[["unlike","IN"],["regular","JJ"],["functions","NNS"],["contractors","NNS"],["used","VBD"],["initiative","JJ"],["object","JJ"],["\u2019","NN"],["s","NN"],["data","NNS"],["created","VBD"],["constructors","NNS"],["must","MD"],["also","RB"],["given","VBN"],["name","JJ"],["class","NN"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"]],"266":[["construction","NN"],["typically","RB"],["used","VBD"],["intialize","VB"],["data","NNS"],["members","NNS"],["allocate","JJ"],["resources","NNS"],["instance","NN"],["memory","NN"],["files","NNS"],["etc","VBP"],["also","RB"],["construction","NN"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"],["functions","NNS"],["operations","NNS"],["maybe","RB"],["locally","RB"],["defined","VBN"]],"267":[["constructors","NNS"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"],["can","MD"],["not","RB"],["specify","VB"],["return","NN"],["type","NN"],["normally","RB"],["contractors","NNS"],["declared","VBD"],["public","JJ"]],"268":[["construction","NN"],["method","NN"],["starts","VBZ"],["new","JJ"],["instances","NNS"],["class","NN"],["example","NN"],["employee","NN"],["employeesparameter","NN"],["starts","VBZ"],["new","JJ"],["instance","NN"],["object","NN"],["type","NN"],["employee","NN"],["function","NN"],["simply","RB"],["module","JJ"],["win","VBP"],["program","NN"],["complete","JJ"],["single","JJ"],["desired","VBN"],["task","NN"]],"269":[["construction","NN"],["called","VBN"],["whenever","WRB"],["new","JJ"],["object","JJ"],["class","NN"],["made","VBD"]],"270":[["construction","NN"],["return","NN"],["date","NN"],["return","NN"],["typefunctions","NNS"],["return","VBP"],["date","NN"],["return","NN"],["data","NNS"],["return","NN"],["type","NN"]],"271":[["construction","NN"],["automatically","RB"],["called","VBD"],["whenever","WRB"],["instance","NN"],["class","NN"],["created","VBD"],["function","NN"],["must","MD"],["explicitly","RB"],["called","VB"],["user","NN"]],"272":[["contractors","NNS"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"],["can","MD"],["not","RB"],["specify","VB"],["return","NN"],["type","NN"],["like","IN"],["functions","NNS"]],"273":[["construction","NN"],["function","NN"],["used","VBN"],["initiative","JJ"],["object","NN"],["data","NNS"],["created","VBD"]],"274":[["construction","NN"],["initiatives","VBZ"],["everything","NN"],["nothing","NN"],["left","VBD"],["empty","JJ"],["random","JJ"],["varioubles","NNS"],["function","VBP"],["modified","VBN"],["variable","JJ"],["data","NNS"]],"275":[["construction","NN"],["initialized","VBD"],["values","NNS"],["execution","NN"],["instantiation","NN"],["provides","VBZ"],["default","NN"],["values","NNS"]],"276":[["construction","NN"],["sets","VBZ"],["default","NN"],["values","NNS"],["variable","JJ"],["object","NN"],["instantiated","VBN"],["whereas","JJ"],["function","NN"],["allows","VBZ"],["interaction","NN"],["object","NN"]],"277":[["construction","NN"],["used","VBN"],["create","NN"],["object","JJ"],["employed","VBN"],["main","JJ"],["function","NN"],["program","NN"],["may","MD"],["may","MD"],["execute","VB"],["code","NN"],["along","IN"],["ita","JJ"],["function","NN"],["set","VBN"],["code","NN"],["executed","VBD"],["called","VBN"],["create","NN"],["new","JJ"],["object","NN"]],"278":[["construction","NN"],["initiatives","VBZ"],["data","NNS"],["members","NNS"],["functions","NNS"],["actually","RB"],["perform","VBP"],["tasks","JJ"],["constructors","NNS"],["return","VBP"],["values","NNS"],["either","CC"]],"279":[["construction","NN"],["need","NN"],["type","NN"],["used","VBN"],["initiative","NN"],["variable","NN"]],"280":[["constructors","NNS"],["return","VBP"],["type","NN"]],"281":[["construction","NN"],["creates","VBZ"],["class","NN"],["object","JJ"],["memory","NN"],["functions","NNS"],["perform","VBP"],["actions","NNS"],["object","VBP"]],"282":[["contractors","NNS"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"]],"283":[["construction","NN"],["initiatives","VBZ"],["values","NNS"],["function","VBP"],["usual","JJ"],["perform","NN"],["sort","NN"],["operation","NN"]],"284":[["construction","NN"],["function","NN"],["used","VBN"],["initiative","JJ"],["object","NN"],["data","NNS"],["created","VBD"],["call","NN"],["made","VBN"],["implicitly","RB"],["object","JJ"],["created","VBN"],["must","MD"],["defined","VBN"],["name","NN"],["class","NN"],["instructor","NN"],["also","RB"],["can","MD"],["not","RB"],["return","VB"],["value","NN"],["like","IN"],["function","NN"]],"285":[["construction","NN"],["used","VBN"],["create","NN"],["instance","NN"],["class","NN"],["name","NN"],["class","NN"],["function","NN"],["can","MD"],["not","RB"],["name","VB"],["class","NN"],["computer","NN"],["data","NNS"]],"286":[["construction","NN"],["function","NN"],["initiatives","NNS"],["class","NN"],["instance","NN"],["function","NN"],["perform","NN"],["whatever","WDT"],["task","NN"],["written","VBN"]],"287":[["construction","NN"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"],["even","RB"],["void","VBP"],["function","NN"],["get","VBP"],["return","NN"],["value","NN"]],"288":[["construction","NN"],["can","MD"],["not","RB"],["return","VB"],["values","NNS"],["even","RB"],["void","VBP"],["used","VBN"],["initiative","JJ"],["object","NN"],["data","NNS"],["createdwhereas","NNS"],["function","NN"],["created","VBD"],["specific","JJ"],["task","NN"],["return","NN"],["values","NNS"]],"289":[["construction","NN"],["initiatives","NNS"],["object","VBP"],["function","NN"],["part","NN"],["object","NN"]],"290":[["contractors","NNS"],["initiative","VBP"],["data","NNS"],["used","VBN"],["calculations","NNS"],["function","NN"]],"291":[["construction","NN"],["called","VBD"],["class","NN"],["created","VBD"],["function","NN"],["called","VBN"],["time","NN"]],"292":[["construction","NN"],["special","JJ"],["block","NN"],["statements","NNS"],["called","VBN"],["object","RB"],["created","VBN"],["either","RB"],["declared","VBN"],["ecstatically","RB"],["constructed","VBN"],["stick","NN"],["however","RB"],["function","JJ"],["portion","NN"],["code","NN"],["within","IN"],["larger","JJR"],["program","NN"],["perform","NN"],["specific","JJ"],["task","NN"],["independent","JJ"],["rest","NN"],["code","NN"]],"293":[["compilers","NNS"],["creates","VBZ"],["default","NN"],["construction","NN"],["define","VB"],["one","CD"],["class","NN"],["file","NN"]],"294":[["compilation","NN"]],"295":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"296":[["parameter","NN"],["set","VBN"],["default","NN"],["construction","NN"],["used","VBD"]],"297":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"298":[["arguments","NNS"],["passed","VBD"]],"299":[["one","CD"],["already","RB"],["specific","JJ"],["class","NN"]],"300":[["programs","NNS"],["compilers","NNS"]],"301":[["construction","NN"],["provided","VBD"],["programme","JJ"],["class","NN"]],"302":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"303":[["main","JJ"],["function","NN"],["code","NN"]],"304":[["whenever","WRB"],["dont","NN"],["specific","NN"]],"305":[["non","NN"],["provided","VBD"]],"306":[["c","JJ"],["create","NN"],["default","NN"],["construction","NN"],["construction","NN"],["present","NN"]],"307":[["construction","NN"],["specified","VBN"],["construction","NN"],["class","NN"],["class","NN"],["instantiated","VBD"],["program","NN"]],"308":[["construction","NN"],["exists","VBZ"],["one","CD"],["needed","VBN"],["parameterless","NN"],["default","NN"],["construction","NN"],["declared","VBD"]],"309":[["compilers","NNS"],["creates","VBZ"],["automatically","RB"],["unless","IN"],["specifically","RB"],["create","VB"],["one","CD"]],"310":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"311":[["userdefined","JJ"],["construction","NN"],["exists","NNS"]],"312":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"],["compilers","NNS"],["creates","VBZ"],["one","CD"]],"313":[["provide","NN"],["construction","NN"]],"314":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"315":[["c","NN"],["creates","VBZ"],["default","JJ"],["construction","NN"],["compilation","NN"],["one","CD"],["provided","VBD"]],"316":[["class","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"317":[["compilers","NNS"],["provide","VBP"],["one","CD"],["class","NN"],["explicitly","RB"],["include","VBP"],["conductor","NN"]],"318":[["programme","NN"],["explicitly","RB"],["include","VBP"],["construction","NN"]],"319":[["one","CD"],["explicitly","RB"],["stated","VBN"]],"320":[["one","CD"],["explicitly","RB"],["included","VBD"],["class","NN"]],"321":[["dont","NN"],["specify","NN"],["contractors","NNS"]],"322":[["beginning","VBG"],["run","VBN"],["complied","JJ"],["matter","NN"],["fact","NN"],["c","VB"],["generate","NN"],["default","NN"],["construction","NN"],["class","NN"],["provided","VBD"],["contractors","NNS"],["provided","VBD"],["user","NN"]],"323":[["must","MD"],["one","CD"],["per","IN"],["class","NN"]],"324":[["many","JJ"],["want","VBP"],["long","JJ"],["different","JJ"],["parameter","NN"]],"325":[["limit","NN"],["number","NN"],["contractors","NNS"],["class","NN"],["like","IN"],["functions","NNS"],["contractors","NNS"],["overloaded","VBD"]],"326":[["depends","NNS"],["type","JJ"],["class","NN"],["defined","VBN"],["typically","RB"],["would","MD"],["construction","NN"],["call","VB"],["object","NN"]],"327":[["c","JJ"],["construction","NN"],["overloaded","VBD"],["one","CD"],["construction","NN"],["class","NN"],["different","JJ"],["parameter","NN"]],"328":[["1","CD"]],"329":[["number","NN"],["want","VBP"]],"330":[["one","CD"]],"331":[["default","NN"],["one","CD"],["may","MD"],["overloaded","VB"],["create","VB"],["many","JJ"],["contractors","NNS"],["necessary","JJ"]],"332":[["many","JJ"],["want","VBP"]],"333":[["many","JJ"],["want","VBP"],["different","JJ"],["parameter","NN"]],"334":[["infinite","NN"]],"335":[["many","JJ"],["need","VBP"]],"336":[["many","JJ"],["needed","VBD"],["depending","VBG"],["many","JJ"],["variable","JJ"],["one","CD"],["wishes","VBZ"],["directly","RB"],["modify","VBN"],["leave","VBP"],["default","NN"],["instantiating","NN"],["object","NN"]],"337":[["large","JJ"],["amount","NN"],["contractors","NNS"],["created","VBD"],["given","VBN"],["class","NN"],["overlooking","VBG"],["two","CD"],["contractors","NNS"],["different","JJ"],["type","JJ"],["number","NN"],["parameter","NN"],["created","VBD"],["said","VBD"],["overloaded","JJ"],["c","NN"],["recognize","VB"],["construction","NN"],["use","NN"],["based","VBN"],["type","NN"],["variable","NN"],["passedreturned","VBD"]],"338":[["depends","NNS"],["number","NN"],["objects","NNS"],["object","JJ"],["construction","NN"]],"339":[["theoretically","RB"],["unlimited","JJ"],["long","RB"],["defined","VBD"],["programme","NN"]],"340":[["many","JJ"],["needed","VBD"]],"341":[["many","JJ"],["wantedneeded","VBD"]],"342":[["several","JJ"]],"343":[["one","CD"]],"344":[["one","CD"]],"345":[["infinite","JJ"],["contractors","NNS"],["long","JJ"],["signature","NN"],["different","JJ"]],"346":[["depends","NNS"],["number","NN"],["data","NNS"],["members","NNS"],["class","NN"]],"347":[["one","CD"]],"348":[["overcoat","NN"],["contractors","NNS"],["need","VBP"]],"349":[["many","JJ"],["programme","NN"],["wants","VBZ"],["create","VB"]],"350":[["one","CD"]],"351":[["many","JJ"],["want","VBP"],["long","JJ"],["unique","JJ"],["argument","NN"],["list","NN"]],"352":[["many","JJ"],["user","RB"],["decides","NNS"],["use","VBP"]],"353":[["function","NN"],["definition","NN"],["require","VBP"],["additional","JJ"],["information","NN"],["needs","NNS"],["passed","VBD"],["inside","IN"],["parenthesis","NN"],["execute","NN"],["definition","NN"],["prototype","NN"],["requires","VBZ"],["one","CD"],["parameter","NN"],["passed","VBD"],["order","NN"],["complete","JJ"],["task","NN"]],"354":[["function","NN"],["prototype","NN"],["programme","NN"],["declares","VBZ"],["heshe","JJ"],["using","VBG"],["function","NN"],["main","JJ"],["like","IN"],["declaring","VBG"],["variable","JJ"],["programme","NN"],["knows","VBZ"],["heshe","NN"],["using","VBG"],["future","JJ"],["yet","RB"],["say","VBP"],["going","VBG"],["use","NN"],["answers","NNS"],["question","VBP"],["gives","VBZ"],["function","NN"],["name","NN"],["character","NN"],["function","NN"],["prototype","NN"],["common","JJ"],["practice","NN"],["placed","VBD"],["beginning","VBG"],["program","NN"],["includes","VBZ"],["main","JJ"],["function","NN"],["definition","NN"],["guns","VBZ"],["function","NN"],["programme","NN"],["decides","VBZ"],["function","NN"],["going","VBG"],["tells","NNS"],["takes","VBZ"],["whatever","WDT"],["information","NN"],["given","VBN"],["perform","VB"],["operations","NNS"],["works","VBZ"],["sort","NN"],["like","IN"],["brain","NN"],["brain","NN"],["takes","VBZ"],["input","NN"],["based","VBN"],["upon","IN"],["input","NN"],["perform","JJ"],["way","NN"],["producing","VBG"],["output","NN"],["function","NN"],["definition","NN"],["placed","VBD"],["outside","JJ"],["main","JJ"],["functions","NNS"],["function","VBP"],["entity","NN"],["thought","NN"]],"355":[["function","NN"],["prototype","NN"],["tells","VBZ"],["compilers","NNS"],["function","NN"],["name","NN"],["return","NN"],["type","NN"],["number","NN"],["type","NN"],["parameter","NN"],["without","IN"],["revealing","VBG"],["implementation","NN"],["contained","VBN"],["function","NN"],["definition","NN"]],"356":[["function","NN"],["prototype","NN"],["declaration","NN"],["function","NN"],["definitions","NNS"],["wmultiple","VBP"],["parameter","RB"],["often","RB"],["require","VBP"],["one","CD"],["piece","NN"],["information","NN"],["perform","NN"],["tasks","NNS"]],"357":[["function","NN"],["prototype","NN"],["declaration","NN"],["function","NN"],["tells","VBZ"],["compilers","NNS"],["function","NN"],["name","NN"],["return","NN"],["type","NN"],["types","NNS"],["parameter","NN"]],"358":[["prototype","NN"],["shows","VBZ"],["return","VBP"],["types","NNS"],["necessary","JJ"],["parameter","NN"],["definition","NN"],["includes","VBZ"],["names","NNS"],["parameter","NN"],["defines","NNS"],["object","VBP"],["actually","RB"],["capable","JJ"]],"359":[["prototype","NN"],["tells","NNS"],["user","VBP"],["data","NNS"],["types","NNS"],["go","VB"],["function","NN"],["type","NN"],["returned","VBD"]],"360":[["function","NN"],["prototype","NN"],["located","VBN"],["h","NN"],["file","NN"],["contains","VBZ"],["access","NN"],["function","NN"],["name","NN"],["parameter","NN"],["typefunction","NN"],["definition","NN"],["contains","VBZ"],["code","JJ"],["function","NN"],["perform","NN"],["activity","NN"]],"361":[["function","NN"],["prototype","NN"],["used","VBN"],["reference","NN"],["compilers","NNS"],["function","VBP"],["defined","VBN"],["later","RB"],["function","JJ"],["definition","NN"],["actual","JJ"],["function","NN"],["complete","JJ"],["return","NN"],["type","NN"],["parameter","NN"],["etc","NN"]],"362":[["function","NN"],["prototype","NN"],["describes","VBZ"],["class","NN"],["public","JJ"],["interface","NN"],["without","IN"],["revealing","VBG"],["class","NN"],["member","NN"],["function","NN"],["implementation","NN"]],"363":[["function","NN"],["definitions","NNS"],["definition","NN"],["prototype","NN"],["compilers","NNS"],["uses","VBZ"],["check","NN"],["calls","VBZ"],["function","NN"],["correct","NN"]],"364":[["prototype","NN"],["include","VBP"],["actual","JJ"],["code","NN"],["function","NN"],["code","NN"],["executed","VBN"],["program","NN"]],"365":[["prototype","NN"],["declares","NNS"],["used","VBN"],["program","NN"],["definition","NN"]],"366":[["function","NN"],["prototype","NN"],["lays","VBZ"],["name","JJ"],["return","NN"],["type","NN"],["number","NN"],["types","NNS"],["parameter","JJ"],["function","NN"],["expects","VBZ"],["receive","VBP"],["certain","JJ"],["order","NN"],["details","NNS"],["function","VBP"],["prototypes","NNS"],["function","NN"],["definition","NN"]],"367":[["function","NN"],["definition","NN"],["code","NN"],["defines","VBZ"],["function","NN"],["placed","VBD"],["brackets","NNS"],["determines","JJ"],["function","NN"],["operationa","IN"],["function","NN"],["prototype","NN"],["shows","VBZ"],["function","VBP"],["public","JJ"],["interface","NN"],["without","IN"],["exposing","VBG"],["implementation","NN"],["shows","NNS"],["name","VBP"],["return","VB"],["type","JJ"],["type","NN"],["parameter","NN"]],"368":[["function","NN"],["prototype","NN"],["declaration","NN"],["function","NN"],["existing","VBG"],["used","VBN"],["actual","JJ"],["function","NN"],["function","NN"],["created","VBD"],["definition","NN"],["within","IN"],["tell","NN"],["compilers","NNS"],["function","VBP"]],"369":[["prototype","NN"],["creates","VBZ"],["framework","VBP"],["call","JJ"],["function","NN"],["definition","NN"],["function","NN"],["definition","NN"],["function","NN"],["actually","RB"],["programme","RB"],["created","VBN"],["final","JJ"],["product","NN"]],"370":[["function","NN"],["prototype","NN"],["describes","VBZ"],["class","NN"],["public","JJ"],["interface","NN"],["without","IN"],["providing","VBG"],["function","NN"],["worksa","WRB"],["function","NN"],["definition","NN"],["contains","VBZ"],["inner","JJ"],["workings","NNS"],["function","NN"]],"371":[["prototype","NN"],["states","NNS"],["functions","NNS"],["class","NN"],["compilation","NN"],["definition","NN"],["actually","RB"],["holds","VBZ"],["source","NN"],["functions","NNS"]],"372":[["function","NN"],["prototypes","NNS"],["tell","VBP"],["compilers","NNS"],["function","VBP"],["names","RB"],["return","JJ"],["type","NN"],["types","NNS"],["parameter","VBP"],["function","NN"],["definitions","NNS"],["actually","RB"],["implement","JJ"],["member","NN"],["functions","NNS"]],"373":[["function","NN"],["prototype","NN"],["specified","VBD"],["parameter","JJ"],["function","NN"],["definition","NN"],["includes","VBZ"],["parameter","NN"],["code","NN"],["body","NN"]],"374":[["function","NN"],["prototypes","NNS"],["describe","JJ"],["class","NN"],["public","JJ"],["interface","NN"]],"375":[["prototype","NN"],["declares","VBZ"],["name","JJ"],["return","NN"],["type","NN"],["input","NN"],["typea","NN"],["definition","NN"],["also","RB"],["defines","VBZ"],["scope","NN"],["variable","JJ"],["process","NN"],["return","NN"],["function","NN"]],"376":[["function","NN"],["prototype","NN"],["simply","RB"],["declares","VBZ"],["functions","NNS"],["parameter","NN"],["function","NN"],["definition","NN"],["includes","VBZ"],["necessary","JJ"],["variable","JJ"],["function","NN"],["actual","JJ"],["code","NN"]],"377":[["function","NN"],["prototype","NN"],["declaration","NN"],["function","NN"],["function","NN"],["definition","NN"],["specified","VBN"],["function","NN"]],"378":[["function","NN"],["prototype","NN"],["include","VBP"],["return","NN"],["type","NN"],["name","NN"],["function","NN"],["parameter","NN"],["neededin","JJ"],["function","NN"],["definition","NN"],["write","WRB"],["code","NN"],["function","NN"]],"379":[["function","NN"],["definition","NN"],["contains","VBZ"],["code","JJ"],["function","NN"],["work","NN"],["function","NN"],["prototype","NN"],["shows","VBZ"],["output","NN"],["input","NN"],["function","NN"],["name","NN"]],"380":[["function","NN"],["prototype","NN"],["describe","NN"],["class","NN"],["public","JJ"],["interface","NN"],["without","IN"],["revealing","VBG"],["class","NN"],["member","NN"],["function","NN"],["implementation","NN"],["function","NN"],["definitions","NNS"],["show","VBP"],["implementation","NN"],["done","VBN"]],"381":[["function","NN"],["prototype","NN"],["names","NNS"],["function","VBP"],["return","NN"],["type","NN"],["argument","NN"],["list","NN"],["definition","NN"],["defines","NNS"],["well","RB"],["function","VBP"],["actually","RB"]],"382":[["function","NN"],["prototype","NN"],["describes","NN"],["classes","NNS"],["interface","VBP"],["without","IN"],["revising","VBG"],["whatever","WDT"],["inside","JJ"],["function","NN"],["definition","NN"],["can","MD"],["not","RB"]],"383":[["role","NN"],["header","NN"],["file","NN"],["list","NN"],["functions","NNS"],["class","NN"],["hiding","NN"],["inner","JJ"],["workings","NNS"],["functions","NNS"]],"384":[["main","JJ"],["role","NN"],["header","NN"],["file","NN"],["used","VBN"],["share","NN"],["information","NN"],["among","IN"],["various","JJ"],["files","NNS"]],"385":[["leader","NN"],["files","NNS"],["separate","VBP"],["files","NNS"],["classes","NNS"],["defined","VBD"],["allow","JJ"],["compilers","NNS"],["recognize","VBP"],["classes","NNS"],["used","VBN"],["elsewhere","RB"]],"386":[],"387":[["header","NN"],["file","NN"],["consists","VBZ"],["reliable","JJ"],["source","NN"],["code","NN"],["class","NN"],["file","NN"],["convention","NN"],["h","NN"],["filename","JJ"],["extension","NN"],["differs","NNS"],["pp","VBP"],["files","NNS"],["contain","VBP"],["sourcecode","NN"]],"388":[["provide","VB"],["information","NN"],["contents","NNS"],["library","JJ"],["includes","VBZ"],["definition","NN"],["classes","NNS"],["declarations","NNS"],["functions","NNS"],["data","NNS"],["types","NNS"],["constant","JJ"]],"389":[["header","NN"],["file","NN"],["shows","VBZ"],["user","RP"],["types","NNS"],["go","VBP"],["come","JJ"],["function","NN"],["allow","IN"],["user","JJ"],["manipulate","NN"],["actual","JJ"],["code","NN"],["function","NN"]],"390":[["leader","NN"],["files","NNS"],["declares","VBZ"],["class","NN"],["member","NN"],["functions","NNS"]],"391":[["header","NN"],["file","NN"],["allows","VBZ"],["separation","NN"],["declaration","NN"],["implementation","NN"],["separate","JJ"],["files","NNS"]],"392":[["header","NN"],["file","NN"],["access","NN"],["c","JJ"],["standard","JJ"],["library","NN"],["makes","VBZ"],["certain","JJ"],["classes","NNS"],["like","IN"],["class","NN"],["string","NN"],["work","NN"]],"393":[["\u201c","JJ"],["instruct","NN"],["\u201d","NN"],["compilers","NNS"],["interface","VBP"],["library","JJ"],["userwritten","JJ"],["components","NNS"]],"394":[["create","NN"],["common","JJ"],["area","NN"],["contain","NN"],["reliable","JJ"],["functions","NNS"]],"395":[["declare","NN"],["functions","NNS"],["used","VBN"],["classes","NNS"]],"396":[["include","VBP"],["hath","NN"],["allows","NNS"],["use","VBP"],["hat","DT"],["container","NN"],["called","VBN"],["act","NN"],["pulling","VBG"],["names","NNS"],["hat","RB"],["header","VBP"],["file","NN"],["hat","WDT"],["includes","VBZ"],["functions","NNS"],["storage","NN"],["retrieved","VBD"],["contents","NNS"],["mainly","RB"],["put","VBD"],["week","NN"],["pull","NN"]],"397":[["hold","NN"],["reliable","JJ"],["content","JJ"],["nodules","NNS"],["separate","VBP"],["actual","JJ"],["sourcecode","NN"],["file","NN"],["easily","RB"],["reference","VB"],["employed","JJ"],["different","JJ"],["programs","NNS"]],"398":[["header","NN"],["file","NN"],["file","NN"],["used","VBN"],["store","NN"],["list","NN"],["promote","VBP"],["functions","NNS"],["data","NNS"],["members","NNS"]],"399":[["header","NN"],["file","NN"],["cross","NN"],["communication","NN"],["method","NN"],["source","NN"],["files","NNS"],["help","VBP"],["limit","VB"],["size","NN"],["individual","JJ"],["program","NN"],["without","IN"],["header","NN"],["files","NNS"],["program","NN"],["1","CD"],["large","JJ"],["lump","NN"],["code","NN"],["thus","RB"],["fairly","RB"],["hard","JJ"],["debut","NN"],["traverse","NN"]],"400":[["contains","NNS"],["reliable","JJ"],["source","NN"],["code","NN"],["use","NN"],["classes","NNS"]],"401":[["separate","JJ"],["source","NN"],["code","NN"],["main","JJ"],["function","NN"],["allows","VBZ"],["methodsclasses","NNS"],["included","VBD"],["program","NN"],["without","IN"],["direct","JJ"],["coming","VBG"],["allows","VBZ"],["liability","NN"]],"402":[["leader","NN"],["files","NNS"],["reliable","JJ"],["source","NN"],["code","NN"],["file","NN"],["program","NN"],["use","NN"]],"403":[["hide","JJ"],["definition","NN"],["details","NNS"],["class","NN"],["also","RB"],["help","VBP"],["reliability","NN"],["main","JJ"],["c","NN"],["file","NN"]],"404":[["allow","JJ"],["compilers","NNS"],["recognize","VBP"],["classes","NNS"],["used","VBN"],["elsewhere","RB"]],"405":[["header","NN"],["file","NN"],["declares","VBZ"],["class","NN"],["data","NNS"],["functions","NNS"],["available","JJ"],["class","NN"]],"406":[["header","NN"],["files","NNS"],["contain","VBP"],["code","NNS"],["used","VBN"],["multiple","JJ"],["files","NNS"]],"407":[["allow","JJ"],["compilers","NNS"],["recognize","VBP"],["classes","NNS"],["used","VBN"],["elsewhere","RB"]],"408":[["allow","JJ"],["compilers","NNS"],["recognize","VBP"],["classes","NNS"],["used","VBN"],["elsewhere","RB"]],"409":[["promote","NN"],["function","NN"],["reusuablitly","RB"]],"410":[["class","NN"],["definitions","NNS"],["placed","VBD"]],"411":[["header","NN"],["file","NN"],["usually","RB"],["contains","VBZ"],["class","NN"],["andor","NN"],["function","NN"],["prototypes","NNS"]],"412":[["contains","NNS"],["standard","JJ"],["c","VBP"],["library","JJ"],["ie","NN"],["string","NN"]]},"studentLemmatized":{"0":"high risk problem address prototype program make sure program feasible prototype may also use show company software possibly programme","1":"simulate portion desire final product quick easy program small specific job way help see problem may solve final project","2":"prototype program simulate behavior portion desire software product allow error check","3":"define specification phase prototype stimulate behavior portion desire software product meaning role prototype temporary solution program refine use extensively problem solve","4":"use let user first idea complete program allow client evaluate program generate much feedback include software specification project estimation total project","5":"find problem error program penalize","6":"address major issue creation program way account possible bags program possible prove program tangible","7":"break whole program prototype program simulate part final program","8":"provide example model finish program perform provide foresight challenge would encounter provide opportunity introduce change finish program","9":"simulate behavior portion desire software product","10":"program stimulate behavior portion desire software product","11":"program simulates behavior portion desire software product","12":"lay basis give start point actual problem solve","13":"simulate problem solve part problem","14":"prototype program provide basic groundwork enhance improve solution problem","15":"prototype program part specification phase software problem solve employed illustrate key problem problem solve program sometimes serve base program expand upon","16":"program simulates behavior portion desire software product","17":"provide limited proof concept verify client actually program whole application","18":"test main function program leave finer detail","19":"get early feedback user early stage development show user first idea program dolook like make sure program meet requirement intense programming begin","20":"simulates behavior portion desire software product","21":"simulates behavior portion desire software product","22":"prototype program use problem solve collect data problem","23":"ease understand problem discussion ease understanding program","24":"simulates behavior portion desire software product","25":"role prototype program help spot key problem may arise actual programming","26":"prototype program give general idea end product without time effort write entire program","27":"show certain part program work suppose","28":"prototype program approach program enable one take organize approach develop effective program minimal error strategic pattern solve problem ie book give example costume withdraw money bank approach take pseudo code level ooadesign proceed create solution","29":"define possibly design test phase reveals problem design production affect program unfordable current form lead later production time originally estimate also affect come test may need write code program remove error","30":"implementation phase maintenance phase effect","31":"purification come refine solution maintenance influence testing stage","32":"rup stage software life cycle influence test stage iselaboration phase refine project vision operative development core system development system requirement accurate time cost estimatesconstruction phase operative development remain systemtransition phasetesting employment system","33":"define solution production maintenance influence resting stage","34":"elaboration construction transition affect test","35":"define production maintenance","36":"define solution","37":"purification debug","38":"define go","39":"second half elaboration phase construction phase transition phase","40":"refine step production step maintenance stage","41":"elaboration construction transition","42":"define","43":"test stage direct influence final version program debug finalization software revision","44":"directly define come define right rest phase go right rest phaseindirectly production maintenance define occurs last two stage software life cycle","45":"rest refine production maintenance","46":"depend work do rest spread throughout process prevent error show later due lack foresight","47":"elaboration construction transition","48":"stage influence except set program requirement test fails change whole design implementation etc program well final outcome","49":"define production maintenance","50":"come refining","51":"refine production maintenance","52":"remove logical error test valid data random data actual data","53":"1 specification design risk analysis verification5 come test refine production maintenance","54":"define stage production stage maintenance stage","55":"resting could affect part life cycle could make go back specification test well","56":"come","57":"individual component step analysis design implementing code well entire system test execution requirement identify analysis stage ie pain output","58":"modularability ability refuse part program later another program sometimes completely different goal program also make easy debut code divide code class specific job program fail one job one class debut good security purpose allow let someone use program sort list without give access source code allow use inheritance polymorphism","59":"type program flexible make easy add modify program also type fail safe program check individual module eliminate redundant code make program easy read programme debug program easy track source problem within module rather 2 million line program","60":"main advantage objecttormented program exist class refuse program maintenance purification easy","61":"advantage oop allow u build class object three principle make oop areencapsulation object combine data operationsinheritance glass inherit property classespolymorphism object determine appropriate operation execution time","62":"advantage exist class refuse program maintenance purification easy accomplish","63":"object torment program allows programme use object class change manipulate affect entire object class hold attribute affect object","64":"reusable component extensibility maintainability reduce large problem small manageable problem","65":"encapsulationobjects combine data operationsinheritance class inherit property classespolymorphism object determine appropriate operation execution time","66":"easy deluge reusability","67":"heliability ease maintenance","68":"one main advantage hide inner detail technique know encapsulation object combine data operation cannot see work another advantage refuse class define earlier program method know inheritance finally another advantage object determine appropriate operation execution time technique know polymorphism","69":"exist class refuse program maintenance purification easy","70":"use different nodule allow easy debug","71":"data encapsulation conceptthe use function method manipulate data","72":"nodular reliable code allow faster employment solution general view solution","73":"go debug program usually easier either compiler specify object work incorrectly function object assign easy identify code also look organize easy read help avoid redundant come mostprogramming maintenance also easieralso nodule refuse several time program without much haste abstraction art break one big problem small simpler problem solve small problem share unique complex problem create nodule solve small repeat problem save time encounter","74":"variable remain private code easily modify reliable well easily implement mention easy read follow along observer","75":"data abstraction control possible isolate elementsfrom element lot easy prevent taper data","76":"encapsulation object use operation without know operation worksinheritance cut redundancy refuse early classespolymorphism object select correct operation use situation","77":"make easy refuse adapt previously write code separate complex program small easy understand class","78":"exist class refuse program maintenance purification easy","79":"exist class fuse program maintenance purification easy","80":"main advantage objecttormented program data abstraction easy maintenance reliability","81":"exist class reusedprogram maintenance verification easy","82":"1 exist class refuse program maintenance purification easy","83":"information hidden easy debut program easier manageable","84":"exist class refuse program maintenance purification easy","85":"exist class reusedprogram maintenance purification easy","86":"well one encapsulation value variable inside object private unless method write pas outside object well inheritance subclass inherit variable method super class example book include obs clock ob alarm would still use clock first class","87":"function \u2018in main \u2019","88":"function main","89":"c program begin execute main method","90":"c program begin execute main function","91":"begin main function","92":"ant main","93":"main method","94":"test phase","95":"main function","96":"main","97":"begin execute function main","98":"main method","99":"root","100":"main function","101":"c program begin execution main","102":"pain function","103":"main function","104":"main function","105":"function main","106":"loading require include statement library main method begin execution","107":"main function","108":"main","109":"c program begin execution main function","110":"main","111":"excuse main","112":"main functionint main","113":"c program begin execution main function","114":"main function","115":"within main function","116":"variable inter string program","117":"program structure hold data unique name programme hold data assign new value assign program finish","118":"variable location memory value store","119":"variable location computer memory value store later retrieve value","120":"variable location computer memory value store use program variable name value type size","121":"name object hold numerical letter value","122":"symbol name valuenumber example ausednumber stand give number programme refer number use variable name","123":"variable location computer memory value store use program","124":"identify hold location memory","125":"block memory hold specific type data","126":"location computer memory store use program","127":"location memory value store","128":"valueword assume set value","129":"pointer location memory","130":"variable memory address specific type store data mathematical perspective symbol represent fix definition change value","131":"variable value subject change computer memory use program program change value variable recall later act directly","132":"symbol stand value may may change depend program","133":"slaveholder hold information use programfor examplein hold 1 2 3 4 68 72 256 etcfloat hold 154 5555 124 5657 88123 etchair hold b c e f 4 5 6 p etc","134":"store value use program","135":"way store different value program number word letter etc","136":"object location memory value store","137":"location memory value store","138":"variable object data store","139":"vocation memory value store","140":"location memory value store","141":"variable location computer memory value store use program","142":"variable location computer memory value store use program","143":"location memory data store retrieve","144":"method identify would say use bind data object memory location store location access manipulate later variable name call","145":"declare right use good practice declare begin program label food","146":"function main use variable","147":"local variable declare inside method function use begin method global variable declare outside function method generally function define","148":"variable declare ever define either inside block locally outside block locally","149":"variable declare actually use declared main use locally","150":"good programming practice declare main least declare used","151":"declare locally main method also outside variable subject method scope within would still declare begin method inside","152":"local variable declare inside method global variable declare body","153":"main function","154":"locally entire program locally individual function include statement","155":"usually declare beginning use program always contain name data type","156":"inside method","157":"top","158":"global variable declare body code local variable declare function use unless function pass variable variable always declare use","159":"variable usually declare begin module c code","160":"main function usually top codethey declare almost anywhere must declare code use act upon","161":"begin program main start","162":"declaration function statement statementsin body statement namespaces leader etc almost anywhere anywhere program long line","163":"declaration variable data type","164":"anywhere code top middle code anywhere","165":"use","166":"anywhere scope use","167":"variable declared class method","168":"inside function scope outside function scope case global variable","169":"global variable declare main functionlocal variable declare function","170":"variable usually declare begin c program declare program long appear call upon","171":"variable declare main function operation attempt variable","172":"anywhere declare depend want accessible scope","173":"depends it\u2019s global declared side source code use every scope however local variable one declare local function etc obviously doesn\u2019t need declare outside variable see use function block call","174":"\u201cdo\u201d statement first evaluate condition execute line code statement 0 time \u201cdo while\u201d statement execute line code evaluate condition","175":"dowhile statement evaluate whether loop run block contain within least main difference statement possibility never use statement hand always run least evaluation whether run","176":"main difference dowhile loop dowhile loop always cycle loop least loop always","177":"loop use execute block code long condition true dowhile loop use execute block code long condition satisfy difference dowhile loop test condition execution content dowhile loop test condition execution content least","178":"termination condition dowhile statement usually end loop run least statement condition false begin loop never run","179":"loop check statement make sure true execute loop execute check statement see run","180":"statement test condition loop first chance loop never run dowhile loop always run test determine run","181":"loop always execute loop conditional statement true run","182":"name","183":"statement evaluate statement execute cycle loop include first cycle meaning loop always execute dowhile run evaluate statement run cycle loop ensure loop always execute least one time","184":"main difference dowhile statement dowhile statement statement block always execute least statement execute condition true","185":"loop dowhile statement always execute","186":"statement process statement meet dowhile always process continue statement meet","187":"run embed code least command necessarily","188":"test true first run dowhile run first check","189":"dowhile statement body always execute least statement execute unless condition true","190":"statement within block loop always execute least regardless condition whereas loop may never execute condition meet","191":"loop always run loopperforms test run loop","192":"statement test condition starta dowhile statement loop condition test","193":"loop terminates begin loop dowhile terminates end loop","194":"loop body always execute least","195":"loop evaluate expression top loop decides need execute dowhile always execute least evaluate expression bottom loop","196":"dowhile statement always execute piece code least check condition statement always check condition first","197":"dowhile pass least 1 time check condition however would fail enter loop condition fails first place","198":"loop check condition true first true excuse statementa loop execute statement check condition condition true would excuse statement dowhile loop would excuse statement least","199":"answer","200":"dowhile loop always execute least loop may never execute depend condition","201":"loop precheck check condition statement execute code within blocka loop postcheck check condition block execute run least matter condition statement","202":"main difference dowhile statementthe construct consist block code condition first code within block execute condition evacuate do prove false difference loop test condition code within block execute","203":"u usually set get displaymessge message tell property class reveal implementation could anything want class definition","204":"attribute say class also whether subclass also whether public private protect","205":"information tell compiler data member member function belong class","206":"since class user define body declaration contain member either data function declaration rationally access specified example specify would public private protect eyford glass glass body enclose bracket","207":"object data","208":"specific class name include information define class implementation detail etc","209":"data member member function","210":"class definition usually contain function data member","211":"data member member function","212":"member function","213":"member function data member belong class","214":"public private area include function variable used class","215":"eyford class follow class name inside declare public private declaration class","216":"class definition typically include function definition","217":"begin glass follow class name usually construction data member member function delineate class include class definition","218":"data method","219":"construction function variable accessible class possibly class depend do","220":"member function data member","221":"public section private section must semicolon set end","222":"member function data member","223":"data member member function","224":"data member member function","225":"class name public data type contractor method function","226":"construction several data member least one public data member method","227":"class name two curly prenthesis public private","228":"data member member function","229":"data function","230":"function data member belong class","231":"class variable function definition class","232":"class expand concept data structure hold data function execute","233":"data member data component particular class member function sanction component class","234":"field variable variable declare member class local variable variable declare local method","235":"data member declare inside class outside member function unlike local variable object class keep copy data member store memory","236":"data member variable represent attribute class definition local variable declare function body cannot use outside function body function terminate value local variable lose","237":"local variable cannot access outside function declare data member normally private variable function declare private accessible member function class declare","238":"data member part c class structure store data certain type local variable inside member function available inside function use derive desire outcome","239":"local variable access within scope declaration","240":"data member attribute function use outside functionlocal variable use outside function value lose function terminates","241":"data member permanent attribute class local variable inside member function lose scope member function end","242":"data member declare class definition outside body class memberfunction definition local variable declare function definition body","243":"data member locally accessible local variable accessible inside member function","244":"variable inside member function access inside member data member access throughout program","245":"local variable use within scope declaration","246":"data member general term describe object instantiate within member function local local variable refers scope variable may locate anything control structure class local variable whose scope member function data member member function","247":"data member exist permanently program memory long runa local variable inside member function temporal use operate function exists long function run","248":"local variable use within function data member set public access use throughout","249":"local variable lose exist block code data member","250":"member function access modify data membera local variable use line declaration next closing lose memory","251":"data member accessible function class local variable available member function value lose function close","252":"data member variable declared inside class definition outside body class member function local variable use within function declaration","253":"data member access outside class whereas local variable cannot","254":"local variable cannot use outside function body function terminate value local variable lose data member variable class definition exist throughout life object","255":"local variable member function static data member change value freely","256":"local variable unable within function define whereas data member available method within class","257":"variable declare function definition body cannot use outside functiondata member accessible member function class","258":"data member local variable declare function definition\u2019s bodythey cannot use outside function bodywhen function terminate value local variable lose","259":"local variable available function","260":"local variable access inside member function data member access throughout class","261":"data member accessible anywhere class local variable member function accessible particular function free function exist","262":"data member encapsulate within class object static share instance class however local variable use function block declare whole class wise would call global variable","263":"construction initiative object object class function class perform task display line text kind mathematical operation","264":"contractor function function contractor also function nearly infinite purpose contractor always create instance whichever class use change construction something function change also","265":"unlike regular function contractor use initiative object\u2019s data create constructor must also give name class cannot return value","266":"construction typically use intialize data member allocate resource instance memory file etc also construction cannot return value function operation maybe locally define","267":"constructor cannot return value cannot specify return type normally contractor declare public","268":"construction method start new instance class example employee employeesparameter start new instance object type employee function simply module win program complete single desire task","269":"construction call whenever new object class make","270":"construction return date return typefunctions return date return data return type","271":"construction automatically call whenever instance class create function must explicitly call user","272":"contractor cannot return value cannot specify return type like function","273":"construction function use initiative object data create","274":"construction initiatives everything nothing leave empty random varioubles function modify variable data","275":"construction initialize value execution instantiation provide default value","276":"construction set default value variable object instantiate whereas function allow interaction object","277":"construction use create object employ main function program may may execute code along ita function set code execute call create new object","278":"construction initiatives data member function actually perform tasks constructor return value either","279":"construction need type use initiative variable","280":"constructor return type","281":"construction create class object memory function perform action object","282":"contractor cannot return value","283":"construction initiatives value function usual perform sort operation","284":"construction function use initiative object data create call make implicitly object create must define name class instructor also cannot return value like function","285":"construction use create instance class name class function cannot name class computer data","286":"construction function initiative class instance function perform whatever task write","287":"construction cannot return value even void function get return value","288":"construction cannot return value even void use initiative object data createdwhereas function create specific task return value","289":"construction initiative object function part object","290":"contractor initiative data use calculation function","291":"construction call class create function call time","292":"construction special block statement call object create either declare ecstatically construct stick however function portion code within large program perform specific task independent rest code","293":"compiler create default construction define one class file","294":"compilation","295":"class explicitly include construction","296":"parameter set default construction use","297":"class explicitly include construction","298":"argument pass","299":"one already specific class","300":"program compiler","301":"construction provide programme class","302":"class explicitly include construction","303":"main function code","304":"whenever dont specific","305":"non provide","306":"c create default construction construction present","307":"construction specify construction class class instantiate program","308":"construction exist one need parameterless default construction declare","309":"compiler create automatically unless specifically create one","310":"class explicitly include construction","311":"userdefined construction exists","312":"class explicitly include construction compiler create one","313":"provide construction","314":"class explicitly include construction","315":"c create default construction compilation one provide","316":"class explicitly include construction","317":"compiler provide one class explicitly include conductor","318":"programme explicitly include construction","319":"one explicitly state","320":"one explicitly include class","321":"dont specify contractor","322":"begin run complied matter fact c generate default construction class provide contractor provide user","323":"must one per class","324":"many want long different parameter","325":"limit number contractor class like function contractor overload","326":"depends type class define typically would construction call object","327":"c construction overload one construction class different parameter","328":"1","329":"number want","330":"one","331":"default one may overload create many contractor necessary","332":"many want","333":"many want different parameter","334":"infinite","335":"many need","336":"many need depend many variable one wish directly modify leave default instantiating object","337":"large amount contractor create give class overlook two contractor different type number parameter create say overloaded c recognize construction use base type variable passedreturned","338":"depends number object object construction","339":"theoretically unlimited long define programme","340":"many need","341":"many wantedneeded","342":"several","343":"one","344":"one","345":"infinite contractor long signature different","346":"depends number data member class","347":"one","348":"overcoat contractor need","349":"many programme want create","350":"one","351":"many want long unique argument list","352":"many user decides use","353":"function definition require additional information need pass inside parenthesis execute definition prototype require one parameter pass order complete task","354":"function prototype programme declare heshe use function main like declare variable programme know heshe use future yet say go use answer question give function name character function prototype common practice place begin program include main function definition gun function programme decide function go tell take whatever information give perform operation work sort like brain brain take input base upon input perform way produce output function definition place outside main function function entity thought","355":"function prototype tell compiler function name return type number type parameter without reveal implementation contain function definition","356":"function prototype declaration function definition wmultiple parameter often require one piece information perform task","357":"function prototype declaration function tell compiler function name return type type parameter","358":"prototype show return type necessary parameter definition include name parameter defines object actually capable","359":"prototype tell user data type go function type return","360":"function prototype locate h file contain access function name parameter typefunction definition contain code function perform activity","361":"function prototype use reference compiler function define later function definition actual function complete return type parameter etc","362":"function prototype describe class public interface without reveal class member function implementation","363":"function definition definition prototype compiler use check call function correct","364":"prototype include actual code function code execute program","365":"prototype declares use program definition","366":"function prototype lay name return type number type parameter function expect receive certain order detail function prototype function definition","367":"function definition code define function place bracket determines function operationa function prototype show function public interface without expose implementation show name return type type parameter","368":"function prototype declaration function exist use actual function function create definition within tell compiler function","369":"prototype create framework call function definition function definition function actually programme create final product","370":"function prototype describe class public interface without provide function worksa function definition contain inner working function","371":"prototype state function class compilation definition actually hold source function","372":"function prototype tell compiler function names return type type parameter function definition actually implement member function","373":"function prototype specify parameter function definition include parameter code body","374":"function prototype describe class public interface","375":"prototype declare name return type input typea definition also define scope variable process return function","376":"function prototype simply declare function parameter function definition include necessary variable function actual code","377":"function prototype declaration function function definition specify function","378":"function prototype include return type name function parameter neededin function definition write code function","379":"function definition contain code function work function prototype show output input function name","380":"function prototype describe class public interface without reveal class member function implementation function definition show implementation do","381":"function prototype name function return type argument list definition defines well function actually","382":"function prototype describes class interface without revise whatever inside function definition cannot","383":"role header file list function class hiding inner working function","384":"main role header file use share information among various file","385":"leader file separate file class define allow compiler recognize class use elsewhere","386":"","387":"header file consist reliable source code class file convention h filename extension differs pp file contain sourcecode","388":"provide information content library include definition class declaration function data type constant","389":"header file show user type go come function allow user manipulate actual code function","390":"leader file declare class member function","391":"header file allow separation declaration implementation separate file","392":"header file access c standard library make certain class like class string work","393":"\u201cinstruct\u201d compiler interface library userwritten component","394":"create common area contain reliable function","395":"declare function use class","396":"include hath allows use hat container call act pull name hat header file hat include function storage retrieve content mainly put week pull","397":"hold reliable content nodule separate actual sourcecode file easily reference employed different program","398":"header file file use store list promote function data member","399":"header file cross communication method source file help limit size individual program without header file program 1 large lump code thus fairly hard debut traverse","400":"contains reliable source code use class","401":"separate source code main function allow methodsclasses include program without direct come allow liability","402":"leader file reliable source code file program use","403":"hide definition detail class also help reliability main c file","404":"allow compiler recognize class use elsewhere","405":"header file declare class data function available class","406":"header file contain code use multiple file","407":"allow compiler recognize class use elsewhere","408":"allow compiler recognize class use elsewhere","409":"promote function reusuablitly","410":"class definition place","411":"header file usually contain class andor function prototype","412":"contains standard c library ie string"},"keyLemmatized":{"0":"simulate behaviour portion desire software product","1":"simulate behaviour portion desire software product","2":"simulate behaviour portion desire software product","3":"simulate behaviour portion desire software product","4":"simulate behaviour portion desire software product","5":"simulate behaviour portion desire software product","6":"simulate behaviour portion desire software product","7":"simulate behaviour portion desire software product","8":"simulate behaviour portion desire software product","9":"simulate behaviour portion desire software product","10":"simulate behaviour portion desire software product","11":"simulate behaviour portion desire software product","12":"simulate behaviour portion desire software product","13":"simulate behaviour portion desire software product","14":"simulate behaviour portion desire software product","15":"simulate behaviour portion desire software product","16":"simulate behaviour portion desire software product","17":"simulate behaviour portion desire software product","18":"simulate behaviour portion desire software product","19":"simulate behaviour portion desire software product","20":"simulate behaviour portion desire software product","21":"simulate behaviour portion desire software product","22":"simulate behaviour portion desire software product","23":"simulate behaviour portion desire software product","24":"simulate behaviour portion desire software product","25":"simulate behaviour portion desire software product","26":"simulate behaviour portion desire software product","27":"simulate behaviour portion desire software product","28":"simulate behaviour portion desire software product","29":"test stage influence come stage phase 5 solution refinement stage phase 7","30":"test stage influence come stage phase 5 solution refinement stage phase 7","31":"test stage influence come stage phase 5 solution refinement stage phase 7","32":"test stage influence come stage phase 5 solution refinement stage phase 7","33":"test stage influence come stage phase 5 solution refinement stage phase 7","34":"test stage influence come stage phase 5 solution refinement stage phase 7","35":"test stage influence come stage phase 5 solution refinement stage phase 7","36":"test stage influence come stage phase 5 solution refinement stage phase 7","37":"test stage influence come stage phase 5 solution refinement stage phase 7","38":"test stage influence come stage phase 5 solution refinement stage phase 7","39":"test stage influence come stage phase 5 solution refinement stage phase 7","40":"test stage influence come stage phase 5 solution refinement stage phase 7","41":"test stage influence come stage phase 5 solution refinement stage phase 7","42":"test stage influence come stage phase 5 solution refinement stage phase 7","43":"test stage influence come stage phase 5 solution refinement stage phase 7","44":"test stage influence come stage phase 5 solution refinement stage phase 7","45":"test stage influence come stage phase 5 solution refinement stage phase 7","46":"test stage influence come stage phase 5 solution refinement stage phase 7","47":"test stage influence come stage phase 5 solution refinement stage phase 7","48":"test stage influence come stage phase 5 solution refinement stage phase 7","49":"test stage influence come stage phase 5 solution refinement stage phase 7","50":"test stage influence come stage phase 5 solution refinement stage phase 7","51":"test stage influence come stage phase 5 solution refinement stage phase 7","52":"test stage influence come stage phase 5 solution refinement stage phase 7","53":"test stage influence come stage phase 5 solution refinement stage phase 7","54":"test stage influence come stage phase 5 solution refinement stage phase 7","55":"test stage influence come stage phase 5 solution refinement stage phase 7","56":"test stage influence come stage phase 5 solution refinement stage phase 7","57":"test stage influence come stage phase 5 solution refinement stage phase 7","58":"abstraction reliability","59":"abstraction reliability","60":"abstraction reliability","61":"abstraction reliability","62":"abstraction reliability","63":"abstraction reliability","64":"abstraction reliability","65":"abstraction reliability","66":"abstraction reliability","67":"abstraction reliability","68":"abstraction reliability","69":"abstraction reliability","70":"abstraction reliability","71":"abstraction reliability","72":"abstraction reliability","73":"abstraction reliability","74":"abstraction reliability","75":"abstraction reliability","76":"abstraction reliability","77":"abstraction reliability","78":"abstraction reliability","79":"abstraction reliability","80":"abstraction reliability","81":"abstraction reliability","82":"abstraction reliability","83":"abstraction reliability","84":"abstraction reliability","85":"abstraction reliability","86":"abstraction reliability","87":"main function","88":"main function","89":"main function","90":"main function","91":"main function","92":"main function","93":"main function","94":"main function","95":"main function","96":"main function","97":"main function","98":"main function","99":"main function","100":"main function","101":"main function","102":"main function","103":"main function","104":"main function","105":"main function","106":"main function","107":"main function","108":"main function","109":"main function","110":"main function","111":"main function","112":"main function","113":"main function","114":"main function","115":"main function","116":"location memory store value","117":"location memory store value","118":"location memory store value","119":"location memory store value","120":"location memory store value","121":"location memory store value","122":"location memory store value","123":"location memory store value","124":"location memory store value","125":"location memory store value","126":"location memory store value","127":"location memory store value","128":"location memory store value","129":"location memory store value","130":"location memory store value","131":"location memory store value","132":"location memory store value","133":"location memory store value","134":"location memory store value","135":"location memory store value","136":"location memory store value","137":"location memory store value","138":"location memory store value","139":"location memory store value","140":"location memory store value","141":"location memory store value","142":"location memory store value","143":"location memory store value","144":"location memory store value","145":"variable declare anywhere program declare inside function local variable outside function global variable","146":"variable declare anywhere program declare inside function local variable outside function global variable","147":"variable declare anywhere program declare inside function local variable outside function global variable","148":"variable declare anywhere program declare inside function local variable outside function global variable","149":"variable declare anywhere program declare inside function local variable outside function global variable","150":"variable declare anywhere program declare inside function local variable outside function global variable","151":"variable declare anywhere program declare inside function local variable outside function global variable","152":"variable declare anywhere program declare inside function local variable outside function global variable","153":"variable declare anywhere program declare inside function local variable outside function global variable","154":"variable declare anywhere program declare inside function local variable outside function global variable","155":"variable declare anywhere program declare inside function local variable outside function global variable","156":"variable declare anywhere program declare inside function local variable outside function global variable","157":"variable declare anywhere program declare inside function local variable outside function global variable","158":"variable declare anywhere program declare inside function local variable outside function global variable","159":"variable declare anywhere program declare inside function local variable outside function global variable","160":"variable declare anywhere program declare inside function local variable outside function global variable","161":"variable declare anywhere program declare inside function local variable outside function global variable","162":"variable declare anywhere program declare inside function local variable outside function global variable","163":"variable declare anywhere program declare inside function local variable outside function global variable","164":"variable declare anywhere program declare inside function local variable outside function global variable","165":"variable declare anywhere program declare inside function local variable outside function global variable","166":"variable declare anywhere program declare inside function local variable outside function global variable","167":"variable declare anywhere program declare inside function local variable outside function global variable","168":"variable declare anywhere program declare inside function local variable outside function global variable","169":"variable declare anywhere program declare inside function local variable outside function global variable","170":"variable declare anywhere program declare inside function local variable outside function global variable","171":"variable declare anywhere program declare inside function local variable outside function global variable","172":"variable declare anywhere program declare inside function local variable outside function global variable","173":"variable declare anywhere program declare inside function local variable outside function global variable","174":"block inside dowhile statement execute least","175":"block inside dowhile statement execute least","176":"block inside dowhile statement execute least","177":"block inside dowhile statement execute least","178":"block inside dowhile statement execute least","179":"block inside dowhile statement execute least","180":"block inside dowhile statement execute least","181":"block inside dowhile statement execute least","182":"block inside dowhile statement execute least","183":"block inside dowhile statement execute least","184":"block inside dowhile statement execute least","185":"block inside dowhile statement execute least","186":"block inside dowhile statement execute least","187":"block inside dowhile statement execute least","188":"block inside dowhile statement execute least","189":"block inside dowhile statement execute least","190":"block inside dowhile statement execute least","191":"block inside dowhile statement execute least","192":"block inside dowhile statement execute least","193":"block inside dowhile statement execute least","194":"block inside dowhile statement execute least","195":"block inside dowhile statement execute least","196":"block inside dowhile statement execute least","197":"block inside dowhile statement execute least","198":"block inside dowhile statement execute least","199":"block inside dowhile statement execute least","200":"block inside dowhile statement execute least","201":"block inside dowhile statement execute least","202":"block inside dowhile statement execute least","203":"data member attribute member function","204":"data member attribute member function","205":"data member attribute member function","206":"data member attribute member function","207":"data member attribute member function","208":"data member attribute member function","209":"data member attribute member function","210":"data member attribute member function","211":"data member attribute member function","212":"data member attribute member function","213":"data member attribute member function","214":"data member attribute member function","215":"data member attribute member function","216":"data member attribute member function","217":"data member attribute member function","218":"data member attribute member function","219":"data member attribute member function","220":"data member attribute member function","221":"data member attribute member function","222":"data member attribute member function","223":"data member attribute member function","224":"data member attribute member function","225":"data member attribute member function","226":"data member attribute member function","227":"data member attribute member function","228":"data member attribute member function","229":"data member attribute member function","230":"data member attribute member function","231":"data member attribute member function","232":"data member attribute member function","233":"data member access member function inside class definition local variable access inside member function defines","234":"data member access member function inside class definition local variable access inside member function defines","235":"data member access member function inside class definition local variable access inside member function defines","236":"data member access member function inside class definition local variable access inside member function defines","237":"data member access member function inside class definition local variable access inside member function defines","238":"data member access member function inside class definition local variable access inside member function defines","239":"data member access member function inside class definition local variable access inside member function defines","240":"data member access member function inside class definition local variable access inside member function defines","241":"data member access member function inside class definition local variable access inside member function defines","242":"data member access member function inside class definition local variable access inside member function defines","243":"data member access member function inside class definition local variable access inside member function defines","244":"data member access member function inside class definition local variable access inside member function defines","245":"data member access member function inside class definition local variable access inside member function defines","246":"data member access member function inside class definition local variable access inside member function defines","247":"data member access member function inside class definition local variable access inside member function defines","248":"data member access member function inside class definition local variable access inside member function defines","249":"data member access member function inside class definition local variable access inside member function defines","250":"data member access member function inside class definition local variable access inside member function defines","251":"data member access member function inside class definition local variable access inside member function defines","252":"data member access member function inside class definition local variable access inside member function defines","253":"data member access member function inside class definition local variable access inside member function defines","254":"data member access member function inside class definition local variable access inside member function defines","255":"data member access member function inside class definition local variable access inside member function defines","256":"data member access member function inside class definition local variable access inside member function defines","257":"data member access member function inside class definition local variable access inside member function defines","258":"data member access member function inside class definition local variable access inside member function defines","259":"data member access member function inside class definition local variable access inside member function defines","260":"data member access member function inside class definition local variable access inside member function defines","261":"data member access member function inside class definition local variable access inside member function defines","262":"data member access member function inside class definition local variable access inside member function defines","263":"construction call whenever object create whereas function need","264":"construction call whenever object create whereas function need","265":"construction call whenever object create whereas function need","266":"construction call whenever object create whereas function need","267":"construction call whenever object create whereas function need","268":"construction call whenever object create whereas function need","269":"construction call whenever object create whereas function need","270":"construction call whenever object create whereas function need","271":"construction call whenever object create whereas function need","272":"construction call whenever object create whereas function need","273":"construction call whenever object create whereas function need","274":"construction call whenever object create whereas function need","275":"construction call whenever object create whereas function need","276":"construction call whenever object create whereas function need","277":"construction call whenever object create whereas function need","278":"construction call whenever object create whereas function need","279":"construction call whenever object create whereas function need","280":"construction call whenever object create whereas function need","281":"construction call whenever object create whereas function need","282":"construction call whenever object create whereas function need","283":"construction call whenever object create whereas function need","284":"construction call whenever object create whereas function need","285":"construction call whenever object create whereas function need","286":"construction call whenever object create whereas function need","287":"construction call whenever object create whereas function need","288":"construction call whenever object create whereas function need","289":"construction call whenever object create whereas function need","290":"construction call whenever object create whereas function need","291":"construction call whenever object create whereas function need","292":"construction call whenever object create whereas function need","293":"construction provide compiler provide one default construction define class compiler create default construction","294":"construction provide compiler provide one default construction define class compiler create default construction","295":"construction provide compiler provide one default construction define class compiler create default construction","296":"construction provide compiler provide one default construction define class compiler create default construction","297":"construction provide compiler provide one default construction define class compiler create default construction","298":"construction provide compiler provide one default construction define class compiler create default construction","299":"construction provide compiler provide one default construction define class compiler create default construction","300":"construction provide compiler provide one default construction define class compiler create default construction","301":"construction provide compiler provide one default construction define class compiler create default construction","302":"construction provide compiler provide one default construction define class compiler create default construction","303":"construction provide compiler provide one default construction define class compiler create default construction","304":"construction provide compiler provide one default construction define class compiler create default construction","305":"construction provide compiler provide one default construction define class compiler create default construction","306":"construction provide compiler provide one default construction define class compiler create default construction","307":"construction provide compiler provide one default construction define class compiler create default construction","308":"construction provide compiler provide one default construction define class compiler create default construction","309":"construction provide compiler provide one default construction define class compiler create default construction","310":"construction provide compiler provide one default construction define class compiler create default construction","311":"construction provide compiler provide one default construction define class compiler create default construction","312":"construction provide compiler provide one default construction define class compiler create default construction","313":"construction provide compiler provide one default construction define class compiler create default construction","314":"construction provide compiler provide one default construction define class compiler create default construction","315":"construction provide compiler provide one default construction define class compiler create default construction","316":"construction provide compiler provide one default construction define class compiler create default construction","317":"construction provide compiler provide one default construction define class compiler create default construction","318":"construction provide compiler provide one default construction define class compiler create default construction","319":"construction provide compiler provide one default construction define class compiler create default construction","320":"construction provide compiler provide one default construction define class compiler create default construction","321":"construction provide compiler provide one default construction define class compiler create default construction","322":"construction provide compiler provide one default construction define class compiler create default construction","323":"unlimited number","324":"unlimited number","325":"unlimited number","326":"unlimited number","327":"unlimited number","328":"unlimited number","329":"unlimited number","330":"unlimited number","331":"unlimited number","332":"unlimited number","333":"unlimited number","334":"unlimited number","335":"unlimited number","336":"unlimited number","337":"unlimited number","338":"unlimited number","339":"unlimited number","340":"unlimited number","341":"unlimited number","342":"unlimited number","343":"unlimited number","344":"unlimited number","345":"unlimited number","346":"unlimited number","347":"unlimited number","348":"unlimited number","349":"unlimited number","350":"unlimited number","351":"unlimited number","352":"unlimited number","353":"function prototype include function signature ie name function return type parameter type function definition include actual body function","354":"function prototype include function signature ie name function return type parameter type function definition include actual body function","355":"function prototype include function signature ie name function return type parameter type function definition include actual body function","356":"function prototype include function signature ie name function return type parameter type function definition include actual body function","357":"function prototype include function signature ie name function return type parameter type function definition include actual body function","358":"function prototype include function signature ie name function return type parameter type function definition include actual body function","359":"function prototype include function signature ie name function return type parameter type function definition include actual body function","360":"function prototype include function signature ie name function return type parameter type function definition include actual body function","361":"function prototype include function signature ie name function return type parameter type function definition include actual body function","362":"function prototype include function signature ie name function return type parameter type function definition include actual body function","363":"function prototype include function signature ie name function return type parameter type function definition include actual body function","364":"function prototype include function signature ie name function return type parameter type function definition include actual body function","365":"function prototype include function signature ie name function return type parameter type function definition include actual body function","366":"function prototype include function signature ie name function return type parameter type function definition include actual body function","367":"function prototype include function signature ie name function return type parameter type function definition include actual body function","368":"function prototype include function signature ie name function return type parameter type function definition include actual body function","369":"function prototype include function signature ie name function return type parameter type function definition include actual body function","370":"function prototype include function signature ie name function return type parameter type function definition include actual body function","371":"function prototype include function signature ie name function return type parameter type function definition include actual body function","372":"function prototype include function signature ie name function return type parameter type function definition include actual body function","373":"function prototype include function signature ie name function return type parameter type function definition include actual body function","374":"function prototype include function signature ie name function return type parameter type function definition include actual body function","375":"function prototype include function signature ie name function return type parameter type function definition include actual body function","376":"function prototype include function signature ie name function return type parameter type function definition include actual body function","377":"function prototype include function signature ie name function return type parameter type function definition include actual body function","378":"function prototype include function signature ie name function return type parameter type function definition include actual body function","379":"function prototype include function signature ie name function return type parameter type function definition include actual body function","380":"function prototype include function signature ie name function return type parameter type function definition include actual body function","381":"function prototype include function signature ie name function return type parameter type function definition include actual body function","382":"function prototype include function signature ie name function return type parameter type function definition include actual body function","383":"store class interface include data member member function prototype","384":"store class interface include data member member function prototype","385":"store class interface include data member member function prototype","386":"store class interface include data member member function prototype","387":"store class interface include data member member function prototype","388":"store class interface include data member member function prototype","389":"store class interface include data member member function prototype","390":"store class interface include data member member function prototype","391":"store class interface include data member member function prototype","392":"store class interface include data member member function prototype","393":"store class interface include data member member function prototype","394":"store class interface include data member member function prototype","395":"store class interface include data member member function prototype","396":"store class interface include data member member function prototype","397":"store class interface include data member member function prototype","398":"store class interface include data member member function prototype","399":"store class interface include data member member function prototype","400":"store class interface include data member member function prototype","401":"store class interface include data member member function prototype","402":"store class interface include data member member function prototype","403":"store class interface include data member member function prototype","404":"store class interface include data member member function prototype","405":"store class interface include data member member function prototype","406":"store class interface include data member member function prototype","407":"store class interface include data member member function prototype","408":"store class interface include data member member function prototype","409":"store class interface include data member member function prototype","410":"store class interface include data member member function prototype","411":"store class interface include data member member function prototype","412":"store class interface include data member member function prototype"},"cosineSimilarityLemma":{"0":0.0454758292,"1":0.231406821,"2":0.4611709284,"3":0.2201255532,"4":0.0435806559,"5":0.0,"6":0.0,"7":0.0566440959,"8":0.0,"9":0.7168117414,"10":0.4502681447,"11":0.4502681447,"12":0.0,"13":0.0845798608,"14":0.0,"15":0.0367268172,"16":0.4502681447,"17":0.0,"18":0.0,"19":0.0,"20":0.5031026124,"21":0.5031026124,"22":0.0,"23":0.0,"24":0.5031026124,"25":0.0,"26":0.0566440959,"27":0.0,"28":0.0,"29":0.1058368228,"30":0.2256597858,"31":0.3561157559,"32":0.2780422235,"33":0.3039242271,"34":0.0569975285,"35":0.0,"36":0.0985861063,"37":0.0,"38":0.0,"39":0.2454538809,"40":0.1505569696,"41":0.0,"42":0.0,"43":0.2314170867,"44":0.1678986106,"45":0.0,"46":0.0,"47":0.0,"48":0.1705821706,"49":0.0,"50":0.0985861063,"51":0.0,"52":0.030726286,"53":0.0817680415,"54":0.4501755023,"55":0.0317677083,"56":0.1700526654,"57":0.1252440675,"58":0.0,"59":0.0,"60":0.0,"61":0.0,"62":0.0,"63":0.0,"64":0.0,"65":0.0,"66":0.0,"67":0.0,"68":0.0,"69":0.0,"70":0.0,"71":0.0,"72":0.0,"73":0.0407415026,"74":0.0,"75":0.1122392892,"76":0.0,"77":0.0,"78":0.0,"79":0.0,"80":0.355476778,"81":0.0,"82":0.0,"83":0.0,"84":0.0,"85":0.0,"86":0.0,"87":0.7092972666,"88":1.0,"89":0.1943143402,"90":0.5023287782,"91":0.7092972666,"92":0.3360969273,"93":0.3360969273,"94":0.0,"95":1.0,"96":0.5797386715,"97":0.5797386715,"98":0.3360969273,"99":0.0,"100":1.0,"101":0.2202881506,"102":0.3360969273,"103":1.0,"104":1.0,"105":1.0,"106":0.1414305679,"107":1.0,"108":0.5797386715,"109":0.5023287782,"110":0.5797386715,"111":0.3360969273,"112":0.4743307065,"113":0.5023287782,"114":1.0,"115":0.7092972666,"116":0.0,"117":0.0569885079,"118":0.8181802074,"119":0.6476308252,"120":0.483338236,"121":0.1152155434,"122":0.0,"123":0.5797386715,"124":0.3360969273,"125":0.1152155434,"126":0.4501755023,"127":1.0,"128":0.1443835553,"129":0.4112070551,"130":0.260268835,"131":0.188575011,"132":0.0876868198,"133":0.0,"134":0.3360969273,"135":0.206083635,"136":0.8181802074,"137":1.0,"138":0.1443835553,"139":0.602974816,"140":1.0,"141":0.5797386715,"142":0.5797386715,"143":0.5101490193,"144":0.3091195049,"145":0.1809456918,"146":0.3581455852,"147":0.5860392268,"148":0.2486539802,"149":0.2070617653,"150":0.1558942991,"151":0.2485811104,"152":0.6156104057,"153":0.1799179298,"154":0.1116481145,"155":0.1116481145,"156":0.0869482192,"157":0.0,"158":0.6625404957,"159":0.2776486654,"160":0.227833128,"161":0.0569885079,"162":0.1412019347,"163":0.188284938,"164":0.0753384151,"165":0.0,"166":0.0674057088,"167":0.188284938,"168":0.4330615689,"169":0.6592126487,"170":0.349627444,"171":0.5390943147,"172":0.1497087109,"173":0.4583656709,"174":0.2078717689,"175":0.3093924416,"176":0.1342513511,"177":0.2445992634,"178":0.2076896601,"179":0.2190441238,"180":0.083959666,"181":0.150640185,"182":0.0,"183":0.2769613903,"184":0.6321374868,"185":0.3808726085,"186":0.233048077,"187":0.0919399817,"188":0.0636012058,"189":0.4772850456,"190":0.2929880714,"191":0.0,"192":0.1916274732,"193":0.0547871655,"194":0.225764846,"195":0.1903778418,"196":0.2929880714,"197":0.1130143992,"198":0.2098046624,"199":0.0,"200":0.2745643009,"201":0.2808428929,"202":0.2152016046,"203":0.0,"204":0.0521095356,"205":0.5332087608,"206":0.1795069073,"207":0.1617137807,"208":0.0,"209":0.867363685,"210":0.4289887312,"211":0.867363685,"212":0.7090528736,"213":0.6735205046,"214":0.0724408193,"215":0.0,"216":0.0724408193,"217":0.3295794319,"218":0.1617137807,"219":0.0612309433,"220":0.867363685,"221":0.0,"222":0.867363685,"223":0.867363685,"224":0.867363685,"225":0.1559289255,"226":0.4501130018,"227":0.0,"228":0.867363685,"229":0.410362645,"230":0.5372450752,"231":0.0778089436,"232":0.2120549633,"233":0.3869214328,"234":0.2663819319,"235":0.5464282586,"236":0.3953507503,"237":0.4486972426,"238":0.5324983584,"239":0.1942975144,"240":0.2880469759,"241":0.6278448905,"242":0.353718522,"243":0.5144544599,"244":0.7719193645,"245":0.0886690882,"246":0.5199424159,"247":0.437402988,"248":0.3682234612,"249":0.269556874,"250":0.3525969936,"251":0.5090776482,"252":0.5962781345,"253":0.429879636,"254":0.3836398277,"255":0.4490971746,"256":0.3044434576,"257":0.4247591381,"258":0.402553438,"259":0.2602462982,"260":0.8369861846,"261":0.4608049874,"262":0.2898680317,"263":0.1980479948,"264":0.2007702448,"265":0.1463562271,"266":0.1235977989,"267":0.0,"268":0.1076753558,"269":0.3680232088,"270":0.0324089626,"271":0.4073977862,"272":0.0502783747,"273":0.3680232088,"274":0.1152155434,"275":0.0599299682,"276":0.317581745,"277":0.3308686386,"278":0.1152155434,"279":0.1707761132,"280":0.0,"281":0.3754566342,"282":0.0,"283":0.1443835553,"284":0.36640968,"285":0.1346398931,"286":0.1857679595,"287":0.1059921314,"288":0.1891385873,"289":0.3533721545,"290":0.0787446035,"291":0.4379777479,"292":0.2173000543,"293":0.6829808322,"294":0.0,"295":0.2604745665,"296":0.2931476725,"297":0.2604745665,"298":0.0,"299":0.1190443041,"300":0.1719264146,"301":0.4500200701,"302":0.2604745665,"303":0.0,"304":0.0,"305":0.1719264146,"306":0.5331627414,"307":0.3405374702,"308":0.4038369253,"309":0.2194430298,"310":0.2604745665,"311":0.2115914299,"312":0.4600928171,"313":0.5835773008,"314":0.2604745665,"315":0.6135054856,"316":0.2604745665,"317":0.3025187176,"318":0.1788910776,"319":0.064596623,"320":0.1190443041,"321":0.0,"322":0.3711993427,"323":0.0,"324":0.0,"325":0.1337850929,"326":0.0,"327":0.0,"328":0.0,"329":0.3360969273,"330":0.0,"331":0.0,"332":0.0,"333":0.0,"334":0.0,"335":0.0,"336":0.0,"337":0.0772577763,"338":0.1617137807,"339":0.1943143402,"340":0.0,"341":0.0,"342":0.0,"343":0.0,"344":0.0,"345":0.0,"346":0.1943143402,"347":0.0,"348":0.0,"349":0.0,"350":0.0,"351":0.0,"352":0.0,"353":0.1849317531,"354":0.4592487835,"355":0.602816197,"356":0.3500737851,"357":0.6741025565,"358":0.255166868,"359":0.3924251618,"360":0.4360116371,"361":0.6391905022,"362":0.2803321222,"363":0.397610232,"364":0.3112986456,"365":0.0789268792,"366":0.6573019945,"367":0.603978886,"368":0.5803329847,"369":0.4117096361,"370":0.4757972006,"371":0.3774111078,"372":0.6562414058,"373":0.5973402543,"374":0.2512310045,"375":0.3381383182,"376":0.6566295654,"377":0.6239871304,"378":0.7958682961,"379":0.5550543292,"380":0.3460937994,"381":0.6031075269,"382":0.3415099152,"383":0.1554661599,"384":0.0,"385":0.0834094114,"386":0.0,"387":0.0336785852,"388":0.2128899507,"389":0.0780310455,"390":0.3360098828,"391":0.0,"392":0.0900790944,"393":0.0665592466,"394":0.0665592466,"395":0.1843555419,"396":0.0868636425,"397":0.0,"398":0.2910688773,"399":0.0,"400":0.0665592466,"401":0.0825833546,"402":0.0,"403":0.0535509531,"404":0.0665592466,"405":0.2474128314,"406":0.0,"407":0.0665592466,"408":0.0665592466,"409":0.0986562151,"410":0.0986562151,"411":0.1928013232,"412":0.0},"cosineSimilarityStem":{"0":0.0454758292,"1":0.231406821,"2":0.4611709284,"3":0.2201255532,"4":0.0435806559,"5":0.0,"6":0.0,"7":0.0566440959,"8":0.0,"9":0.7168117414,"10":0.4502681447,"11":0.6327904584,"12":0.0,"13":0.0845798608,"14":0.0,"15":0.0367268172,"16":0.6327904584,"17":0.0,"18":0.0,"19":0.0,"20":0.7168117414,"21":0.7168117414,"22":0.0,"23":0.0,"24":0.7168117414,"25":0.0,"26":0.0566440959,"27":0.0,"28":0.0,"29":0.1058368228,"30":0.2256597858,"31":0.5419119366,"32":0.3101913617,"33":0.3039242271,"34":0.0569975285,"35":0.0,"36":0.0985861063,"37":0.0,"38":0.0,"39":0.2454538809,"40":0.2115785525,"41":0.0,"42":0.0,"43":0.210369432,"44":0.1678986106,"45":0.0646163332,"46":0.0,"47":0.0,"48":0.1705821706,"49":0.0,"50":0.243955725,"51":0.0764278605,"52":0.030726286,"53":0.128028097,"54":0.4501755023,"55":0.0317677083,"56":0.1700526654,"57":0.1252440675,"58":0.0,"59":0.0,"60":0.0,"61":0.0,"62":0.0,"63":0.0,"64":0.0,"65":0.0,"66":0.0,"67":0.0,"68":0.0,"69":0.0,"70":0.0,"71":0.0,"72":0.1216033148,"73":0.0399691275,"74":0.0985861063,"75":0.1122392892,"76":0.0,"77":0.0,"78":0.0,"79":0.0,"80":0.355476778,"81":0.0,"82":0.0,"83":0.0,"84":0.0,"85":0.0,"86":0.0,"87":0.7092972666,"88":1.0,"89":0.1943143402,"90":0.5023287782,"91":0.7092972666,"92":0.3360969273,"93":0.3360969273,"94":0.0,"95":1.0,"96":0.5797386715,"97":0.5797386715,"98":0.3360969273,"99":0.0,"100":1.0,"101":0.2202881506,"102":0.3360969273,"103":1.0,"104":1.0,"105":1.0,"106":0.1414305679,"107":1.0,"108":0.5797386715,"109":0.5023287782,"110":0.5797386715,"111":0.3360969273,"112":0.4743307065,"113":0.5023287782,"114":1.0,"115":0.7092972666,"116":0.0,"117":0.0569885079,"118":0.8181802074,"119":0.6476308252,"120":0.483338236,"121":0.1152155434,"122":0.0,"123":0.5797386715,"124":0.3360969273,"125":0.1152155434,"126":0.4501755023,"127":1.0,"128":0.1443835553,"129":0.4112070551,"130":0.260268835,"131":0.188575011,"132":0.0876868198,"133":0.0,"134":0.3360969273,"135":0.206083635,"136":0.8181802074,"137":1.0,"138":0.1443835553,"139":0.602974816,"140":1.0,"141":0.5797386715,"142":0.5797386715,"143":0.5101490193,"144":0.3091195049,"145":0.1809456918,"146":0.3581455852,"147":0.5860392268,"148":0.3527240687,"149":0.3358794428,"150":0.2035587747,"151":0.283953499,"152":0.6156104057,"153":0.1799179298,"154":0.2131573952,"155":0.1116481145,"156":0.0869482192,"157":0.0,"158":0.6625404957,"159":0.2776486654,"160":0.227833128,"161":0.0569885079,"162":0.2114912415,"163":0.3581455852,"164":0.0753384151,"165":0.0,"166":0.0674057088,"167":0.3581455852,"168":0.4330615689,"169":0.6592126487,"170":0.349627444,"171":0.5390943147,"172":0.1497087109,"173":0.4968201225,"174":0.2078717689,"175":0.3003156805,"176":0.1342513511,"177":0.3011957886,"178":0.2076896601,"179":0.2190441238,"180":0.083959666,"181":0.150640185,"182":0.0,"183":0.2769613903,"184":0.6321374868,"185":0.3808726085,"186":0.233048077,"187":0.0919399817,"188":0.0636012058,"189":0.4772850456,"190":0.2929880714,"191":0.0,"192":0.1916274732,"193":0.0547871655,"194":0.225764846,"195":0.1903778418,"196":0.2929880714,"197":0.1065556143,"198":0.2098046624,"199":0.0,"200":0.2745643009,"201":0.2808428929,"202":0.2152016046,"203":0.0,"204":0.0521095356,"205":0.5332087608,"206":0.1740691236,"207":0.1617137807,"208":0.0,"209":0.867363685,"210":0.4289887312,"211":0.867363685,"212":0.7090528736,"213":0.6735205046,"214":0.0724408193,"215":0.0,"216":0.0724408193,"217":0.3295794319,"218":0.1617137807,"219":0.0612309433,"220":0.867363685,"221":0.0,"222":0.867363685,"223":0.867363685,"224":0.867363685,"225":0.1559289255,"226":0.4501130018,"227":0.0,"228":0.867363685,"229":0.410362645,"230":0.5372450752,"231":0.0778089436,"232":0.2120549633,"233":0.3869214328,"234":0.2663819319,"235":0.5464282586,"236":0.3953507503,"237":0.4913379191,"238":0.5324983584,"239":0.1942975144,"240":0.2880469759,"241":0.6278448905,"242":0.353718522,"243":0.8225990494,"244":0.7719193645,"245":0.0886690882,"246":0.5199424159,"247":0.4192501362,"248":0.3682234612,"249":0.269556874,"250":0.3525969936,"251":0.6170645862,"252":0.5624184497,"253":0.429879636,"254":0.3836398277,"255":0.4490971746,"256":0.3501057979,"257":0.5280743742,"258":0.402553438,"259":0.2602462982,"260":0.8369861846,"261":0.6490680477,"262":0.2898680317,"263":0.1980479948,"264":0.2007702448,"265":0.1463562271,"266":0.1235977989,"267":0.0,"268":0.1076753558,"269":0.3680232088,"270":0.0324089626,"271":0.4073977862,"272":0.0502783747,"273":0.3680232088,"274":0.1152155434,"275":0.0599299682,"276":0.317581745,"277":0.3308686386,"278":0.1152155434,"279":0.1707761132,"280":0.0,"281":0.3754566342,"282":0.0,"283":0.1443835553,"284":0.36640968,"285":0.1346398931,"286":0.1857679595,"287":0.1059921314,"288":0.1891385873,"289":0.3533721545,"290":0.0787446035,"291":0.4379777479,"292":0.2580460445,"293":0.6829808322,"294":0.296558472,"295":0.2604745665,"296":0.2931476725,"297":0.2604745665,"298":0.0,"299":0.1190443041,"300":0.1719264146,"301":0.4500200701,"302":0.2604745665,"303":0.0,"304":0.0,"305":0.1719264146,"306":0.5331627414,"307":0.3405374702,"308":0.4038369253,"309":0.2194430298,"310":0.2604745665,"311":0.2115914299,"312":0.4600928171,"313":0.5835773008,"314":0.2604745665,"315":0.8650322965,"316":0.2604745665,"317":0.3025187176,"318":0.1788910776,"319":0.064596623,"320":0.1190443041,"321":0.0,"322":0.3711993427,"323":0.0,"324":0.0,"325":0.1337850929,"326":0.0,"327":0.0,"328":0.0,"329":0.3360969273,"330":0.0,"331":0.0,"332":0.0,"333":0.0,"334":0.0,"335":0.0,"336":0.0,"337":0.0772577763,"338":0.1617137807,"339":0.1943143402,"340":0.0,"341":0.0,"342":0.0,"343":0.0,"344":0.0,"345":0.0,"346":0.1943143402,"347":0.0,"348":0.0,"349":0.0,"350":0.0,"351":0.0,"352":0.0,"353":0.1849317531,"354":0.4623271645,"355":0.602816197,"356":0.3500737851,"357":0.6741025565,"358":0.2891787715,"359":0.3924251618,"360":0.4360116371,"361":0.6391905022,"362":0.2803321222,"363":0.397610232,"364":0.3112986456,"365":0.0789268792,"366":0.6573019945,"367":0.603978886,"368":0.5803329847,"369":0.4448480748,"370":0.4757972006,"371":0.4241791928,"372":0.7373631469,"373":0.5973402543,"374":0.2512310045,"375":0.3381383182,"376":0.6566295654,"377":0.6239871304,"378":0.7958682961,"379":0.5550543292,"380":0.3460937994,"381":0.6514274916,"382":0.3415099152,"383":0.1554661599,"384":0.0,"385":0.0834094114,"386":0.0,"387":0.0336785852,"388":0.2128899507,"389":0.0780310455,"390":0.3360098828,"391":0.0,"392":0.0900790944,"393":0.0665592466,"394":0.0665592466,"395":0.1843555419,"396":0.0868636425,"397":0.0,"398":0.2910688773,"399":0.0,"400":0.0665592466,"401":0.0825833546,"402":0.0,"403":0.0535509531,"404":0.0665592466,"405":0.2474128314,"406":0.0,"407":0.0665592466,"408":0.0665592466,"409":0.0986562151,"410":0.0986562151,"411":0.1928013232,"412":0.0},"scoreModelLemma":{"0":0.2273791462,"1":1.1570341049,"2":2.3058546419,"3":1.100627766,"4":0.2179032793,"5":0.0,"6":0.0,"7":0.2832204796,"8":0.0,"9":3.5840587072,"10":2.2513407233,"11":2.2513407233,"12":0.0,"13":0.422899304,"14":0.0,"15":0.1836340862,"16":2.2513407233,"17":0.0,"18":0.0,"19":0.0,"20":2.5155130621,"21":2.5155130621,"22":0.0,"23":0.0,"24":2.5155130621,"25":0.0,"26":0.2832204796,"27":0.0,"28":0.0,"29":0.5291841138,"30":1.1282989292,"31":1.7805787795,"32":1.3902111177,"33":1.5196211356,"34":0.2849876426,"35":0.0,"36":0.4929305316,"37":0.0,"38":0.0,"39":1.2272694047,"40":0.752784848,"41":0.0,"42":0.0,"43":1.1570854335,"44":0.839493053,"45":0.0,"46":0.0,"47":0.0,"48":0.8529108529,"49":0.0,"50":0.4929305316,"51":0.0,"52":0.15363143,"53":0.4088402073,"54":2.2508775116,"55":0.1588385415,"56":0.8502633269,"57":0.6262203377,"58":0.0,"59":0.0,"60":0.0,"61":0.0,"62":0.0,"63":0.0,"64":0.0,"65":0.0,"66":0.0,"67":0.0,"68":0.0,"69":0.0,"70":0.0,"71":0.0,"72":0.0,"73":0.2037075131,"74":0.0,"75":0.5611964458,"76":0.0,"77":0.0,"78":0.0,"79":0.0,"80":1.7773838898,"81":0.0,"82":0.0,"83":0.0,"84":0.0,"85":0.0,"86":0.0,"87":3.546486333,"88":5.0,"89":0.9715717008,"90":2.5116438911,"91":3.546486333,"92":1.6804846364,"93":1.6804846364,"94":0.0,"95":5.0,"96":2.8986933577,"97":2.8986933577,"98":1.6804846364,"99":0.0,"100":5.0,"101":1.1014407528,"102":1.6804846364,"103":5.0,"104":5.0,"105":5.0,"106":0.7071528396,"107":5.0,"108":2.8986933577,"109":2.5116438911,"110":2.8986933577,"111":1.6804846364,"112":2.3716535325,"113":2.5116438911,"114":5.0,"115":3.546486333,"116":0.0,"117":0.2849425395,"118":4.0909010368,"119":3.2381541259,"120":2.4166911801,"121":0.5760777169,"122":0.0,"123":2.8986933577,"124":1.6804846364,"125":0.5760777169,"126":2.2508775116,"127":5.0,"128":0.7219177764,"129":2.0560352753,"130":1.3013441748,"131":0.9428750552,"132":0.438434099,"133":0.0,"134":1.6804846364,"135":1.0304181751,"136":4.0909010368,"137":5.0,"138":0.7219177764,"139":3.0148740802,"140":5.0,"141":2.8986933577,"142":2.8986933577,"143":2.5507450966,"144":1.5455975246,"145":0.904728459,"146":1.7907279261,"147":2.9301961341,"148":1.2432699009,"149":1.0353088266,"150":0.7794714953,"151":1.2429055521,"152":3.0780520287,"153":0.8995896488,"154":0.5582405723,"155":0.5582405723,"156":0.4347410959,"157":0.0,"158":3.3127024783,"159":1.3882433269,"160":1.1391656401,"161":0.2849425395,"162":0.7060096734,"163":0.9414246902,"164":0.3766920757,"165":0.0,"166":0.3370285438,"167":0.9414246902,"168":2.1653078447,"169":3.2960632435,"170":1.7481372198,"171":2.6954715737,"172":0.7485435547,"173":2.2918283543,"174":1.0393588447,"175":1.5469622081,"176":0.6712567553,"177":1.2229963168,"178":1.0384483005,"179":1.0952206189,"180":0.4197983299,"181":0.7532009249,"182":0.0,"183":1.3848069515,"184":3.1606874342,"185":1.9043630424,"186":1.1652403848,"187":0.4596999087,"188":0.3180060288,"189":2.386425228,"190":1.4649403569,"191":0.0,"192":0.9581373659,"193":0.2739358274,"194":1.12882423,"195":0.9518892092,"196":1.4649403569,"197":0.5650719962,"198":1.0490233118,"199":0.0,"200":1.3728215045,"201":1.4042144647,"202":1.0760080228,"203":0.0,"204":0.2605476779,"205":2.6660438038,"206":0.8975345367,"207":0.8085689033,"208":0.0,"209":4.3368184248,"210":2.1449436559,"211":4.3368184248,"212":3.5452643679,"213":3.3676025229,"214":0.3622040963,"215":0.0,"216":0.3622040963,"217":1.6478971596,"218":0.8085689033,"219":0.3061547167,"220":4.3368184248,"221":0.0,"222":4.3368184248,"223":4.3368184248,"224":4.3368184248,"225":0.7796446274,"226":2.2505650091,"227":0.0,"228":4.3368184248,"229":2.0518132248,"230":2.6862253758,"231":0.389044718,"232":1.0602748166,"233":1.9346071642,"234":1.3319096594,"235":2.732141293,"236":1.9767537513,"237":2.2434862132,"238":2.6624917919,"239":0.9714875721,"240":1.4402348793,"241":3.1392244527,"242":1.7685926098,"243":2.5722722995,"244":3.8595968227,"245":0.4433454411,"246":2.5997120794,"247":2.1870149398,"248":1.841117306,"249":1.34778437,"250":1.7629849682,"251":2.545388241,"252":2.9813906727,"253":2.1493981801,"254":1.9181991384,"255":2.245485873,"256":1.5222172882,"257":2.1237956904,"258":2.0127671902,"259":1.3012314909,"260":4.184930923,"261":2.3040249369,"262":1.4493401587,"263":0.9902399738,"264":1.003851224,"265":0.7317811355,"266":0.6179889945,"267":0.0,"268":0.5383767792,"269":1.8401160438,"270":0.1620448132,"271":2.0369889311,"272":0.2513918735,"273":1.8401160438,"274":0.5760777169,"275":0.2996498411,"276":1.587908725,"277":1.6543431931,"278":0.5760777169,"279":0.853880566,"280":0.0,"281":1.8772831712,"282":0.0,"283":0.7219177764,"284":1.8320484002,"285":0.6731994656,"286":0.9288397974,"287":0.5299606568,"288":0.9456929365,"289":1.7668607723,"290":0.3937230173,"291":2.1898887395,"292":1.0865002717,"293":3.414904161,"294":0.0,"295":1.3023728326,"296":1.4657383626,"297":1.3023728326,"298":0.0,"299":0.5952215205,"300":0.859632073,"301":2.2501003504,"302":1.3023728326,"303":0.0,"304":0.0,"305":0.859632073,"306":2.6658137071,"307":1.7026873511,"308":2.0191846263,"309":1.0972151491,"310":1.3023728326,"311":1.0579571493,"312":2.3004640854,"313":2.9178865042,"314":1.3023728326,"315":3.0675274281,"316":1.3023728326,"317":1.512593588,"318":0.8944553878,"319":0.322983115,"320":0.5952215205,"321":0.0,"322":1.8559967135,"323":0.0,"324":0.0,"325":0.6689254647,"326":0.0,"327":0.0,"328":0.0,"329":1.6804846364,"330":0.0,"331":0.0,"332":0.0,"333":0.0,"334":0.0,"335":0.0,"336":0.0,"337":0.3862888815,"338":0.8085689033,"339":0.9715717008,"340":0.0,"341":0.0,"342":0.0,"343":0.0,"344":0.0,"345":0.0,"346":0.9715717008,"347":0.0,"348":0.0,"349":0.0,"350":0.0,"351":0.0,"352":0.0,"353":0.9246587656,"354":2.2962439174,"355":3.0140809848,"356":1.7503689255,"357":3.3705127824,"358":1.2758343398,"359":1.962125809,"360":2.1800581854,"361":3.1959525111,"362":1.401660611,"363":1.9880511598,"364":1.5564932278,"365":0.3946343961,"366":3.2865099726,"367":3.0198944302,"368":2.9016649234,"369":2.0585481807,"370":2.3789860032,"371":1.8870555389,"372":3.2812070289,"373":2.9867012716,"374":1.2561550226,"375":1.6906915912,"376":3.2831478268,"377":3.1199356519,"378":3.9793414805,"379":2.7752716462,"380":1.7304689971,"381":3.0155376343,"382":1.7075495761,"383":0.7773307996,"384":0.0,"385":0.4170470572,"386":0.0,"387":0.1683929258,"388":1.0644497537,"389":0.3901552276,"390":1.6800494139,"391":0.0,"392":0.4503954718,"393":0.332796233,"394":0.332796233,"395":0.9217777096,"396":0.4343182124,"397":0.0,"398":1.4553443865,"399":0.0,"400":0.332796233,"401":0.4129167729,"402":0.0,"403":0.2677547657,"404":0.332796233,"405":1.237064157,"406":0.0,"407":0.332796233,"408":0.332796233,"409":0.4932810756,"410":0.4932810756,"411":0.9640066159,"412":0.0},"scoreModelStem":{"0":0.2273791462,"1":1.1570341049,"2":2.3058546419,"3":1.100627766,"4":0.2179032793,"5":0.0,"6":0.0,"7":0.2832204796,"8":0.0,"9":3.5840587072,"10":2.2513407233,"11":3.1639522918,"12":0.0,"13":0.422899304,"14":0.0,"15":0.1836340862,"16":3.1639522918,"17":0.0,"18":0.0,"19":0.0,"20":3.5840587072,"21":3.5840587072,"22":0.0,"23":0.0,"24":3.5840587072,"25":0.0,"26":0.2832204796,"27":0.0,"28":0.0,"29":0.5291841138,"30":1.1282989292,"31":2.7095596829,"32":1.5509568085,"33":1.5196211356,"34":0.2849876426,"35":0.0,"36":0.4929305316,"37":0.0,"38":0.0,"39":1.2272694047,"40":1.0578927626,"41":0.0,"42":0.0,"43":1.0518471601,"44":0.839493053,"45":0.3230816659,"46":0.0,"47":0.0,"48":0.8529108529,"49":0.0,"50":1.219778625,"51":0.3821393027,"52":0.15363143,"53":0.6401404849,"54":2.2508775116,"55":0.1588385415,"56":0.8502633269,"57":0.6262203377,"58":0.0,"59":0.0,"60":0.0,"61":0.0,"62":0.0,"63":0.0,"64":0.0,"65":0.0,"66":0.0,"67":0.0,"68":0.0,"69":0.0,"70":0.0,"71":0.0,"72":0.6080165739,"73":0.1998456375,"74":0.4929305316,"75":0.5611964458,"76":0.0,"77":0.0,"78":0.0,"79":0.0,"80":1.7773838898,"81":0.0,"82":0.0,"83":0.0,"84":0.0,"85":0.0,"86":0.0,"87":3.546486333,"88":5.0,"89":0.9715717008,"90":2.5116438911,"91":3.546486333,"92":1.6804846364,"93":1.6804846364,"94":0.0,"95":5.0,"96":2.8986933577,"97":2.8986933577,"98":1.6804846364,"99":0.0,"100":5.0,"101":1.1014407528,"102":1.6804846364,"103":5.0,"104":5.0,"105":5.0,"106":0.7071528396,"107":5.0,"108":2.8986933577,"109":2.5116438911,"110":2.8986933577,"111":1.6804846364,"112":2.3716535325,"113":2.5116438911,"114":5.0,"115":3.546486333,"116":0.0,"117":0.2849425395,"118":4.0909010368,"119":3.2381541259,"120":2.4166911801,"121":0.5760777169,"122":0.0,"123":2.8986933577,"124":1.6804846364,"125":0.5760777169,"126":2.2508775116,"127":5.0,"128":0.7219177764,"129":2.0560352753,"130":1.3013441748,"131":0.9428750552,"132":0.438434099,"133":0.0,"134":1.6804846364,"135":1.0304181751,"136":4.0909010368,"137":5.0,"138":0.7219177764,"139":3.0148740802,"140":5.0,"141":2.8986933577,"142":2.8986933577,"143":2.5507450966,"144":1.5455975246,"145":0.904728459,"146":1.7907279261,"147":2.9301961341,"148":1.7636203436,"149":1.6793972138,"150":1.0177938737,"151":1.4197674951,"152":3.0780520287,"153":0.8995896488,"154":1.065786976,"155":0.5582405723,"156":0.4347410959,"157":0.0,"158":3.3127024783,"159":1.3882433269,"160":1.1391656401,"161":0.2849425395,"162":1.0574562074,"163":1.7907279261,"164":0.3766920757,"165":0.0,"166":0.3370285438,"167":1.7907279261,"168":2.1653078447,"169":3.2960632435,"170":1.7481372198,"171":2.6954715737,"172":0.7485435547,"173":2.4841006124,"174":1.0393588447,"175":1.5015784023,"176":0.6712567553,"177":1.5059789428,"178":1.0384483005,"179":1.0952206189,"180":0.4197983299,"181":0.7532009249,"182":0.0,"183":1.3848069515,"184":3.1606874342,"185":1.9043630424,"186":1.1652403848,"187":0.4596999087,"188":0.3180060288,"189":2.386425228,"190":1.4649403569,"191":0.0,"192":0.9581373659,"193":0.2739358274,"194":1.12882423,"195":0.9518892092,"196":1.4649403569,"197":0.5327780714,"198":1.0490233118,"199":0.0,"200":1.3728215045,"201":1.4042144647,"202":1.0760080228,"203":0.0,"204":0.2605476779,"205":2.6660438038,"206":0.8703456182,"207":0.8085689033,"208":0.0,"209":4.3368184248,"210":2.1449436559,"211":4.3368184248,"212":3.5452643679,"213":3.3676025229,"214":0.3622040963,"215":0.0,"216":0.3622040963,"217":1.6478971596,"218":0.8085689033,"219":0.3061547167,"220":4.3368184248,"221":0.0,"222":4.3368184248,"223":4.3368184248,"224":4.3368184248,"225":0.7796446274,"226":2.2505650091,"227":0.0,"228":4.3368184248,"229":2.0518132248,"230":2.6862253758,"231":0.389044718,"232":1.0602748166,"233":1.9346071642,"234":1.3319096594,"235":2.732141293,"236":1.9767537513,"237":2.4566895956,"238":2.6624917919,"239":0.9714875721,"240":1.4402348793,"241":3.1392244527,"242":1.7685926098,"243":4.112995247,"244":3.8595968227,"245":0.4433454411,"246":2.5997120794,"247":2.0962506811,"248":1.841117306,"249":1.34778437,"250":1.7629849682,"251":3.0853229311,"252":2.8120922484,"253":2.1493981801,"254":1.9181991384,"255":2.245485873,"256":1.7505289896,"257":2.640371871,"258":2.0127671902,"259":1.3012314909,"260":4.184930923,"261":3.2453402384,"262":1.4493401587,"263":0.9902399738,"264":1.003851224,"265":0.7317811355,"266":0.6179889945,"267":0.0,"268":0.5383767792,"269":1.8401160438,"270":0.1620448132,"271":2.0369889311,"272":0.2513918735,"273":1.8401160438,"274":0.5760777169,"275":0.2996498411,"276":1.587908725,"277":1.6543431931,"278":0.5760777169,"279":0.853880566,"280":0.0,"281":1.8772831712,"282":0.0,"283":0.7219177764,"284":1.8320484002,"285":0.6731994656,"286":0.9288397974,"287":0.5299606568,"288":0.9456929365,"289":1.7668607723,"290":0.3937230173,"291":2.1898887395,"292":1.2902302227,"293":3.414904161,"294":1.48279236,"295":1.3023728326,"296":1.4657383626,"297":1.3023728326,"298":0.0,"299":0.5952215205,"300":0.859632073,"301":2.2501003504,"302":1.3023728326,"303":0.0,"304":0.0,"305":0.859632073,"306":2.6658137071,"307":1.7026873511,"308":2.0191846263,"309":1.0972151491,"310":1.3023728326,"311":1.0579571493,"312":2.3004640854,"313":2.9178865042,"314":1.3023728326,"315":4.3251614825,"316":1.3023728326,"317":1.512593588,"318":0.8944553878,"319":0.322983115,"320":0.5952215205,"321":0.0,"322":1.8559967135,"323":0.0,"324":0.0,"325":0.6689254647,"326":0.0,"327":0.0,"328":0.0,"329":1.6804846364,"330":0.0,"331":0.0,"332":0.0,"333":0.0,"334":0.0,"335":0.0,"336":0.0,"337":0.3862888815,"338":0.8085689033,"339":0.9715717008,"340":0.0,"341":0.0,"342":0.0,"343":0.0,"344":0.0,"345":0.0,"346":0.9715717008,"347":0.0,"348":0.0,"349":0.0,"350":0.0,"351":0.0,"352":0.0,"353":0.9246587656,"354":2.3116358224,"355":3.0140809848,"356":1.7503689255,"357":3.3705127824,"358":1.4458938576,"359":1.962125809,"360":2.1800581854,"361":3.1959525111,"362":1.401660611,"363":1.9880511598,"364":1.5564932278,"365":0.3946343961,"366":3.2865099726,"367":3.0198944302,"368":2.9016649234,"369":2.2242403742,"370":2.3789860032,"371":2.1208959642,"372":3.6868157346,"373":2.9867012716,"374":1.2561550226,"375":1.6906915912,"376":3.2831478268,"377":3.1199356519,"378":3.9793414805,"379":2.7752716462,"380":1.7304689971,"381":3.2571374579,"382":1.7075495761,"383":0.7773307996,"384":0.0,"385":0.4170470572,"386":0.0,"387":0.1683929258,"388":1.0644497537,"389":0.3901552276,"390":1.6800494139,"391":0.0,"392":0.4503954718,"393":0.332796233,"394":0.332796233,"395":0.9217777096,"396":0.4343182124,"397":0.0,"398":1.4553443865,"399":0.0,"400":0.332796233,"401":0.4129167729,"402":0.0,"403":0.2677547657,"404":0.332796233,"405":1.237064157,"406":0.0,"407":0.332796233,"408":0.332796233,"409":0.4932810756,"410":0.4932810756,"411":0.9640066159,"412":0.0}}